server:
  port: 8081
  servlet:
    context-path: /engines

spring:
  application:
    name: moneyplant-engines
  
  profiles:
    active: dev
  
  # CORS Configuration for frontend access
  web:
    cors:
      allowed-origins: http://localhost:4200,http://127.0.0.1:4200
      allowed-methods: GET,POST,PUT,DELETE,OPTIONS,PATCH
      allowed-headers: "*"
      allow-credentials: true
      max-age: 3600
  
  datasource:
    url: jdbc:postgresql://postgres.tailce422e.ts.net:5432/MoneyPlant
    username: postgres
    password: mysecretpassword
    driver-class-name: org.postgresql.Driver
    hikari:
      connection-timeout: 30000
      maximum-pool-size: 10
      minimum-idle: 2
      idle-timeout: 600000
      max-lifetime: 1800000

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        format_sql: true
        connection:
          provider_disables_autocommit: true
  
  kafka:
    bootstrap-servers: localhost:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      acks: all
      retries: 3
      batch-size: 16384
      linger-ms: 1
      buffer-memory: 33554432
    consumer:
      group-id: moneyplant-engines
      auto-offset-reset: earliest
      enable-auto-commit: true
      auto-commit-interval-ms: 1000
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "*"
  
  boot:
    admin:
      client:
        url: http://localhost:8080

# Kafka topic configuration
kafka:
  topics:
    nse-indices-ticks: nse-indices-ticks
    market-data: market-data
    trading-signals: trading-signals
    backtest-results: backtest-results
  group-id: moneyplant-engines

# NSE WebSocket configuration
nse:
  websocket:
    url: wss://www.nseindia.com/streams/indices/high/drdMkt
    reconnect:
      interval: 30
    enabled: false  # Temporarily disable NSE WebSocket to use fallback mock data
    fallback:
      enabled: true  # Enable fallback to mock data when NSE connection fails
      mock-interval: 5000  # Generate mock data every 5 seconds when fallback is active

# Spark Configuration
spark:
  app-name: MoneyPlant-Engines
  master: local[*]
  driver-memory: 2g
  executor-memory: 2g
  sql:
    adaptive:
      enabled: true
      coalescePartitions:
        enabled: true
      skewJoin:
        enabled: true
      localShuffleReader:
        enabled: true
      optimizeSkewedJoin:
        enabled: true

# Trino Configuration
trino:
  url: jdbc:trino://trino.tailce422e.ts.net:8080
  username: trino
  password: 
  catalog: 
  schema: 
  connection-pool:
    maximum-pool-size: 10
    minimum-idle: 2
    connection-timeout: 30000
    idle-timeout: 600000
    max-lifetime: 1800000

# Apache Hudi Configuration
hudi:
  base-path: /tmp/hudi
  table-name: market_data
  key-generator: org.apache.hudi.keygen.SimpleKeyGenerator
  partition-path-field: date
  write-options:
    table.type: COPY_ON_WRITE
    recordkey.field: symbol
    partitionpath.field: date
    precombine.field: timestamp
    keygenerator.class: org.apache.hudi.keygen.SimpleKeyGenerator
    hive.style.partitioning: true
    operation: upsert
    table.name: market_data
    base.path: /tmp/hudi

# Apache Iceberg Configuration
iceberg:
  catalog-name: iceberg_catalog
  warehouse-location: /tmp/iceberg
  io-impl: org.apache.iceberg.aws.s3.S3FileIO
  s3:
    endpoint: 
    access-key: 
    secret-key: 
  catalog-properties:
    catalog-impl: org.apache.iceberg.aws.glue.GlueCatalog
    warehouse: /tmp/iceberg
    io-impl: org.apache.iceberg.aws.s3.S3FileIO
  table-properties:
    write.format.default: parquet
    write.parquet.compression: snappy
    write.parquet.row-group-size-bytes: 134217728
    write.parquet.page-size-bytes: 1048576
    write.parquet.dict-size-bytes: 2097152

# Logging configuration
logging:
  level:
    com.moneyplant.engines: INFO
    org.springframework.kafka: INFO
    org.apache.kafka: WARN
    org.springframework.web.socket: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

# Management endpoints
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: always
  metrics:
    export:
      prometheus:
        enabled: true
