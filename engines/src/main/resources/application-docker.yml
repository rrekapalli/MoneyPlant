# Docker profile configuration
# This profile is used when running in Docker containers

spring:
  datasource:
    url: jdbc:postgresql://postgres.tailce422e.ts.net:5432/MoneyPlant
    username: postgres
    password: mysecretpassword
    driver-class-name: org.postgresql.Driver
    hikari:
      connection-timeout: 30000
      maximum-pool-size: 10
      minimum-idle: 2
      idle-timeout: 600000
      max-lifetime: 1800000
      connection-init-sql: SET SESSION default_transaction_isolation = 'read committed'
      # Additional connection properties for external database
      connection-test-query: SELECT 1
      # SSL configuration for external database
      data-source-properties:
        ssl: false
        sslmode: disable
      # Connection validation settings
      validation-timeout: 5000
      leak-detection-threshold: 60000


  jpa:
    hibernate:
      ddl-auto: validate  # Use 'validate' to prevent schema changes on existing database
    show-sql: false
    # Transaction management configuration
    open-in-view: false
    
    # Explicit transaction management settings
    defer-datasource-initialization: false
    
    properties:
      hibernate:
        format_sql: true
        
        # Connection and transaction management
        connection:
          auto_commit: false
          provider_disables_autocommit: true
          isolation_level: READ_COMMITTED
          provider_class: com.zaxxer.hikari.hibernate.HikariConnectionProvider
        
        # JDBC settings
        jdbc:
          batch_size: 20
          time_zone: UTC
          fetch_size: 50
        
        # Transaction settings
        transaction:
          jta:
            platform: org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform
          flush_mode: AUTO
          default_auto_commit: false
        
        # Session management
        current_session_context_class: thread
        session:
          events:
            log: false
        
        # Performance settings
        order_inserts: true
        order_updates: true
        batch_versioned_data: true
        
        # Explicitly set the dialect to avoid metadata issues
        dialect: org.hibernate.dialect.PostgreSQLDialect

  kafka:
    bootstrap-servers: kafka:29092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      acks: all
      retries: 3
      batch-size: 16384
      linger-ms: 1
      buffer-memory: 33554432
    consumer:
      group-id: moneyplant-engines
      auto-offset-reset: earliest
      enable-auto-commit: true
      auto-commit-interval-ms: 1000
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "*"
    admin:
      auto-create: false
      fail-on-error: false

# Transaction management configuration
  transaction:
    default-timeout: 30s
    rollback-on-commit-failure: true

# Kafka topic configuration
kafka:
  topics:
    nse-indices-ticks: nse-indices-ticks
    market-data: market-data
    trading-signals: trading-signals
    backtest-results: backtest-results
  group-id: moneyplant-engines

# NSE WebSocket configuration for Docker
nse:
  websocket:
    # NSE WebSocket endpoints (multiple options for different data streams)
    url: wss://www.nseindia.com/streams/indices/high/drdMkt
    # Alternative endpoints if the main one fails
    alternative-urls:
      - wss://www.nseindia.com/streams/indices/high/drdMkt
      - wss://www.nseindia.com/streams/indices/low/drdMkt
      - wss://www.nseindia.com/streams/indices/medium/drdMkt
    reconnect:
      interval: 30
      max-attempts: 5
      backoff-multiplier: 2
    enabled: true  # Enable NSE WebSocket connection for real data
    timeout: 30000  # Connection timeout in milliseconds
    heartbeat-interval: 30000  # Heartbeat interval in milliseconds
    # Authentication and headers configuration
    headers:
      user-agent: "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36"
      origin: "https://www.nseindia.com"
      referer: "https://www.nseindia.com/get-quotes/equity"
      accept: "*/*"
      accept-language: "en-US,en;q=0.9"
      accept-encoding: "gzip, deflate, br"
      connection: "keep-alive"
      upgrade: "websocket"
      sec-websocket-version: "13"
      sec-websocket-key: ""
      sec-websocket-protocol: ""
    fallback:
      enabled: true  # Enable fallback to mock data when NSE connection fails
      mock-interval: 5000  # Generate mock data every 5 seconds when fallback is active

# Logging configuration for Docker
logging:
  level:
    com.moneyplant.engines: INFO
    org.springframework.kafka: INFO
    org.apache.kafka: INFO
    org.springframework.web.socket: INFO
    org.springframework.boot.autoconfigure.kafka: INFO
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

# Management endpoints for Docker
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: always
      show-components: always
  metrics:
    export:
      prometheus:
        enabled: true

# Redis configuration for Docker
redis:
  host: redis
  port: 6379
  timeout: 2000ms
  lettuce:
    pool:
      max-active: 8
      max-idle: 8
      min-idle: 0
