version: '3.8'

services:
  engines:
    build: .
    container_name: moneyplant-engines
    ports:
      - "8081:8081"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - DB_USERNAME=postgres
      - DB_PASSWORD=postgres
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      - postgres
      - kafka
      - redis
      - zookeeper
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
    networks:
      - moneyplant-network
    restart: unless-stopped

  postgres:
    image: postgres:15-alpine
    container_name: moneyplant-engines-postgres
    environment:
      - POSTGRES_DB=moneyplant_engines
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    networks:
      - moneyplant-network
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: moneyplant-engines-redis
    ports:
      - "6380:6379"
    volumes:
      - redis_data:/data
    networks:
      - moneyplant-network
    restart: unless-stopped

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: moneyplant-engines-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    volumes:
      - zookeeper_data:/var/lib/zookeeper/data
      - zookeeper_logs:/var/lib/zookeeper/log
    networks:
      - moneyplant-network
    restart: unless-stopped

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: moneyplant-engines-kafka
    depends_on:
      - zookeeper
    ports:
      - "9093:9093"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_DELETE_TOPIC_ENABLE: 'true'
    volumes:
      - kafka_data:/var/lib/kafka/data
    networks:
      - moneyplant-network
    restart: unless-stopped

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: moneyplant-engines-kafka-ui
    depends_on:
      - kafka
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    networks:
      - moneyplant-network
    restart: unless-stopped

  spark-master:
    image: bitnami/spark:3.5
    container_name: moneyplant-engines-spark-master
    environment:
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    ports:
      - "8082:8080"
      - "7077:7077"
    volumes:
      - spark_data:/opt/bitnami/spark
    networks:
      - moneyplant-network
    restart: unless-stopped

  spark-worker:
    image: bitnami/spark:3.5
    container_name: moneyplant-engines-spark-worker
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_WORKER_MEMORY=1G
      - SPARK_WORKER_CORES=1
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    depends_on:
      - spark-master
    volumes:
      - spark_data:/opt/bitnami/spark
    networks:
      - moneyplant-network
    restart: unless-stopped

  trino:
    image: trinodb/trino:443
    container_name: moneyplant-engines-trino
    ports:
      - "8083:8080"
    environment:
      - TRINO_NODE_ID=trino-coordinator
      - TRINO_COORDINATOR=true
      - TRINO_DISCOVERY_URI=http://trino:8080
    volumes:
      - ./trino-config:/etc/trino
    networks:
      - moneyplant-network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  zookeeper_data:
  zookeeper_logs:
  kafka_data:
  spark_data:

networks:
  moneyplant-network:
    driver: bridge
