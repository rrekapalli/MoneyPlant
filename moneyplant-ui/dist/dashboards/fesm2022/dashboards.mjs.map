{"version":3,"file":"dashboards.mjs","sources":["../../../projects/dashboards/src/lib/widgets/widget/widget-builder.ts","../../../projects/dashboards/src/lib/services/widget-plugin.service.ts","../../../projects/dashboards/src/lib/services/event-bus.service.ts","../../../projects/dashboards/src/lib/widgets/widget/widget.component.html","../../../projects/dashboards/src/lib/widgets/widget/widget.component.ts","../../../projects/dashboards/src/lib/widget-config/widget-config.component.ts","../../../projects/dashboards/src/lib/widget-config/widget-config.component.html","../../../projects/dashboards/src/lib/widget-header/widget-header.component.html","../../../projects/dashboards/src/lib/widget-header/widget-header.component.ts","../../../projects/dashboards/src/lib/services/calculation.service.ts","../../../projects/dashboards/src/lib/services/filter.service.ts","../../../projects/dashboards/src/lib/services/widget-data-cache.service.ts","../../../projects/dashboards/src/lib/services/virtual-scroll.service.ts","../../../projects/dashboards/src/lib/dashboard-container/dashboard-container.component.html","../../../projects/dashboards/src/lib/dashboard-container/dashboard-container.component.ts","../../../projects/dashboards/src/lib/widgets/base-widget/base-widget.component.ts","../../../projects/dashboards/src/lib/formly-configs/form-options.ts","../../../projects/dashboards/src/lib/formly-configs/series-options.ts","../../../projects/dashboards/src/lib/widgets/echarts/echart.component.ts","../../../projects/dashboards/src/lib/widgets/filter/filter.component.html","../../../projects/dashboards/src/lib/widgets/filter/filter.component.ts","../../../projects/dashboards/src/lib/widgets/table/table.component.ts","../../../projects/dashboards/src/lib/widgets/tile/tile.component.ts","../../../projects/dashboards/src/lib/widgets/markdown-cell/markdown-cell.component.ts","../../../projects/dashboards/src/lib/widgets/code-cell/code-cell.component.ts","../../../projects/dashboards/src/public-api.ts","../../../projects/dashboards/src/dashboards.ts"],"sourcesContent":["import { IWidget } from '../../entities/IWidget';\r\nimport { ECharts, EChartsOption } from 'echarts';\r\nimport { GridsterItem } from 'angular-gridster2';\r\nimport { IState } from '../../entities/IState';\r\nimport { IFilterOptions } from '../../entities/IFilterOptions';\r\nimport { ITileOptions } from '../../entities/ITileOptions';\r\nimport { IMarkdownCellOptions } from '../../entities/IMarkdownCellOptions';\r\nimport { ICodeCellOptions } from '../../entities/ICodeCellOptions';\r\nimport { ITableOptions } from '../../entities/ITableOptions';\r\nimport { IFilterValues } from '../../entities/IFilterValues';\r\n\r\nexport class WidgetBuilder {\r\n  private widget: IWidget = {\r\n    position: { x: 0, y: 0, cols: 1, rows: 1 },\r\n    config: {\r\n      options: {}\r\n    }\r\n  };\r\n\r\n  setId(id: string) {\r\n    this.widget.id = id;\r\n    return this;\r\n  }\r\n\r\n  setPosition(position: GridsterItem) {\r\n    this.widget.position = position;\r\n    return this;\r\n  }\r\n\r\n  setComponent(component: string) {\r\n    this.widget.config.component = component;\r\n    return this;\r\n  }\r\n\r\n  setInitialState(initialState: IState) {\r\n    this.widget.config.initialState = initialState;\r\n    return this;\r\n  }\r\n\r\n  setState(state: IState) {\r\n    this.widget.config.state = state;\r\n    return this;\r\n  }\r\n\r\n  setHeader(title: string, options?: string[]) {\r\n    this.widget.config.header = { title, options };\r\n    return this;\r\n  }\r\n\r\n  setSize(size: number[]) {\r\n    this.widget.config.size = size;\r\n    return this;\r\n  }\r\n\r\n  setEChartsOptions(options: EChartsOption) {\r\n    this.widget.config.options = options;\r\n    return this;\r\n  }\r\n\r\n  setFilterOptions(options: IFilterOptions) {\r\n    this.widget.config.options = options;\r\n    return this;\r\n  }\r\n\r\n  setTileOptions(options: ITileOptions) {\r\n    this.widget.config.options = options;\r\n    return this;\r\n  }\r\n\r\n  setMarkdownCellOptions(options: IMarkdownCellOptions) {\r\n    this.widget.config.options = options;\r\n    return this;\r\n  }\r\n\r\n  setCodeCellOptions(options: ICodeCellOptions) {\r\n    this.widget.config.options = options;\r\n    return this;\r\n  }\r\n\r\n  setTableOptions(options: ITableOptions) {\r\n    this.widget.config.options = options;\r\n    return this;\r\n  }\r\n\r\n  setEvents(onChartOptions: (widget: IWidget, chart?: ECharts, filters?: string | IFilterValues[]) => void) {\r\n    this.widget.config.events = { onChartOptions };\r\n    return this;\r\n  }\r\n\r\n  setEventChartOptions(onChartOptions: (widget: IWidget, chart?: ECharts, filters?: string | IFilterValues[]) => void) {\r\n    this.widget.config.events = { onChartOptions };\r\n    return this;\r\n  }\r\n\r\n  setSeries(series: [{}]) {\r\n    this.widget.series = series;\r\n    return this;\r\n  }\r\n\r\n\r\n  setChartInstance(chartInstance: ECharts | null) {\r\n    this.widget.chartInstance = chartInstance;\r\n    return this;\r\n  }\r\n\r\n  setEChartsTitle(title: any) {\r\n    if (!this.widget.config.options) {\r\n      this.widget.config.options = {};\r\n    }\r\n    (this.widget.config.options as EChartsOption).title = title;\r\n    return this;\r\n  }\r\n\r\n  setEChartsGrid(grid: any) {\r\n    if (!this.widget.config.options) {\r\n      this.widget.config.options = {};\r\n    }\r\n    (this.widget.config.options as EChartsOption).grid = grid;\r\n    return this;\r\n  }\r\n\r\n  setEChartsTooltip(tooltip: any) {\r\n    if (!this.widget.config.options) {\r\n      this.widget.config.options = {};\r\n    }\r\n    (this.widget.config.options as EChartsOption).tooltip = tooltip;\r\n    return this;\r\n  }\r\n\r\n  setEChartsLegend(legend: any) {\r\n    if (!this.widget.config.options) {\r\n      this.widget.config.options = {};\r\n    }\r\n    (this.widget.config.options as EChartsOption).legend = legend;\r\n    return this;\r\n  }\r\n\r\n  setEChartsXAxis(xAxis: any) {\r\n    if (!this.widget.config.options) {\r\n      this.widget.config.options = {};\r\n    }\r\n    (this.widget.config.options as EChartsOption).xAxis = xAxis;\r\n    return this;\r\n  }\r\n\r\n  setEChartsYAxis(yAxis: any) {\r\n    if (!this.widget.config.options) {\r\n      this.widget.config.options = {};\r\n    }\r\n    (this.widget.config.options as EChartsOption).yAxis = yAxis;\r\n    return this;\r\n  }\r\n\r\n  setEChartsSeries(series: any) {\r\n    if (!this.widget.config.options) {\r\n      this.widget.config.options = {};\r\n    }\r\n    (this.widget.config.options as EChartsOption).series = series;\r\n    return this;\r\n  }\r\n\r\n  build() {\r\n    return this.widget;\r\n  }\r\n}\r\n    ","import { Injectable } from '@angular/core';\nimport { IWidgetPlugin } from '../entities/IWidgetPlugin';\n\n/**\n * Service for managing widget plugins in the dashboard framework\n * \n * This service provides methods for registering, retrieving, and managing\n * widget plugins, making it easier to add new widget types.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class WidgetPluginService {\n  private plugins: Map<string, IWidgetPlugin> = new Map();\n  private componentPromises: Map<string, Promise<any>> = new Map();\n  private loadedComponents: Map<string, any> = new Map();\n\n  constructor() {\n    this.registerDefaultPlugins();\n  }\n\n  /**\n   * Registers a new widget plugin\n   * \n   * @param plugin - The widget plugin to register\n   */\n  registerPlugin(plugin: IWidgetPlugin): void {\n    if (this.plugins.has(plugin.type)) {\n      console.warn(`Plugin with type ${plugin.type} already exists. Overwriting.`);\n    }\n    this.plugins.set(plugin.type, plugin);\n  }\n\n  /**\n   * Gets a widget plugin by type\n   * \n   * @param type - The type of the widget plugin to retrieve\n   * @returns The widget plugin if found, undefined otherwise\n   */\n  getPlugin(type: string): IWidgetPlugin | undefined {\n    return this.plugins.get(type);\n  }\n\n  /**\n   * Gets all registered widget plugins\n   * \n   * @returns Array of all registered widget plugins\n   */\n  getAllPlugins(): IWidgetPlugin[] {\n    return Array.from(this.plugins.values());\n  }\n\n  /**\n   * Gets the component for a widget type\n   * \n   * @param type - The type of the widget\n   * @returns The component for the widget type, or a promise that resolves to the component\n   */\n  getComponentForType(type: string): any {\n    // If the component is already loaded, return it\n    if (this.loadedComponents.has(type)) {\n      return this.loadedComponents.get(type);\n    }\n\n    // If the component is being loaded, return a placeholder component\n    // The actual component will be loaded asynchronously\n    if (!this.componentPromises.has(type)) {\n      this.loadComponentForType(type);\n    }\n\n    // Return a placeholder component that will be replaced when the real component loads\n    return this.getPlaceholderComponent();\n  }\n\n  /**\n   * Loads a component for a widget type\n   * \n   * @param type - The type of the widget\n   * @returns A promise that resolves to the component\n   */\n  private async loadComponentForType(type: string): Promise<any> {\n    if (!this.componentPromises.has(type)) {\n      const promise = this.importComponentForType(type);\n      this.componentPromises.set(type, promise);\n\n      try {\n        const component = await promise;\n        this.loadedComponents.set(type, component);\n        return component;\n      } catch (error) {\n        console.error(`Error loading component for type ${type}:`, error);\n        this.componentPromises.delete(type);\n        throw error;\n      }\n    }\n\n    return this.componentPromises.get(type);\n  }\n\n  /**\n   * Imports a component for a widget type\n   * \n   * @param type - The type of the widget\n   * @returns A promise that resolves to the component\n   */\n  private async importComponentForType(type: string): Promise<any> {\n    switch (type) {\n      case 'echart':\n        const echartModule = await import('../widgets/echarts/echart.component');\n        return echartModule.EchartComponent;\n      case 'filter':\n        const filterModule = await import('../widgets/filter/filter.component');\n        return filterModule.FilterComponent;\n      case 'table':\n        const tableModule = await import('../widgets/table/table.component');\n        return tableModule.TableComponent;\n      case 'tile':\n        const tileModule = await import('../widgets/tile/tile.component');\n        return tileModule.TileComponent;\n      case 'markdownCell':\n        const markdownModule = await import('../widgets/markdown-cell/markdown-cell.component');\n        return markdownModule.MarkdownCellComponent;\n      case 'codeCell':\n        const codeModule = await import('../widgets/code-cell/code-cell.component');\n        return codeModule.CodeCellComponent;\n      default:\n        // Default to EChart component\n        const defaultModule = await import('../widgets/echarts/echart.component');\n        return defaultModule.EchartComponent;\n    }\n  }\n\n  /**\n   * Gets a placeholder component to use while the real component is loading\n   * \n   * @returns A placeholder component\n   */\n  private getPlaceholderComponent(): any {\n    // This could be a simple loading component\n    // For now, we'll just return a dummy object that won't cause errors\n    return { \n      __isPlaceholder: true,\n      __componentType: 'placeholder'\n    };\n  }\n\n  /**\n   * Registers the default widget plugins\n   */\n  private registerDefaultPlugins(): void {\n    // Register EChart plugin\n    this.registerPlugin({\n      type: 'echart',\n      displayName: 'Chart',\n      description: 'Displays data using ECharts visualizations',\n      icon: 'chart-bar',\n      component: this.getPlaceholderComponent(), // Will be lazy loaded\n      defaultConfig: {\n        options: {}\n      },\n      supportsFiltering: true,\n      canBeFilterSource: true\n    });\n\n    // Register Filter plugin\n    this.registerPlugin({\n      type: 'filter',\n      displayName: 'Filter',\n      description: 'Provides filtering capabilities for the dashboard',\n      icon: 'filter',\n      component: this.getPlaceholderComponent(), // Will be lazy loaded\n      defaultConfig: {\n        options: {\n          values: []\n        }\n      },\n      supportsFiltering: false,\n      canBeFilterSource: false\n    });\n\n    // Register Table plugin\n    this.registerPlugin({\n      type: 'table',\n      displayName: 'Table',\n      description: 'Displays data in a tabular format',\n      icon: 'table',\n      component: this.getPlaceholderComponent(), // Will be lazy loaded\n      defaultConfig: {\n        options: {}\n      },\n      supportsFiltering: true,\n      canBeFilterSource: true\n    });\n\n    // Register Tile plugin\n    this.registerPlugin({\n      type: 'tile',\n      displayName: 'Tile',\n      description: 'Displays simple metric tiles',\n      icon: 'square',\n      component: this.getPlaceholderComponent(), // Will be lazy loaded\n      defaultConfig: {\n        options: {}\n      },\n      supportsFiltering: false,\n      canBeFilterSource: false\n    });\n\n    // Register Markdown Cell plugin\n    this.registerPlugin({\n      type: 'markdownCell',\n      displayName: 'Markdown',\n      description: 'Displays markdown content',\n      icon: 'markdown',\n      component: this.getPlaceholderComponent(), // Will be lazy loaded\n      defaultConfig: {\n        options: {\n          content: ''\n        }\n      },\n      supportsFiltering: false,\n      canBeFilterSource: false\n    });\n\n    // Register Code Cell plugin\n    this.registerPlugin({\n      type: 'codeCell',\n      displayName: 'Code',\n      description: 'Displays code snippets',\n      icon: 'code',\n      component: this.getPlaceholderComponent(), // Will be lazy loaded\n      defaultConfig: {\n        options: {\n          code: '',\n          language: 'javascript'\n        }\n      },\n      supportsFiltering: false,\n      canBeFilterSource: false\n    });\n\n    // Preload commonly used components\n    this.loadComponentForType('echart');\n    this.loadComponentForType('filter');\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { IWidget } from '../entities/IWidget';\n\n/**\n * Event types supported by the event bus\n */\nexport enum EventType {\n  DATA_LOAD = 'DATA_LOAD',\n  FILTER_UPDATE = 'FILTER_UPDATE',\n  WIDGET_UPDATE = 'WIDGET_UPDATE',\n  DASHBOARD_CHANGE = 'DASHBOARD_CHANGE',\n  WIDGET_RESIZE = 'WIDGET_RESIZE',\n  WIDGET_MOVE = 'WIDGET_MOVE',\n  ERROR = 'ERROR'\n}\n\n/**\n * Interface for events published through the event bus\n */\nexport interface Event {\n  type: EventType;\n  payload: any;\n  source?: string;\n  timestamp?: number;\n}\n\n/**\n * Service for handling events in the dashboard framework\n * \n * This service provides a decoupled approach for communication between components\n * using a publish-subscribe pattern.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class EventBusService {\n  private eventSubject = new Subject<Event>();\n  \n  /**\n   * Publishes an event to the event bus\n   * \n   * @param type - The type of event\n   * @param payload - The event payload\n   * @param source - Optional source identifier\n   */\n  publish(type: EventType, payload: any, source?: string): void {\n    this.eventSubject.next({\n      type,\n      payload,\n      source,\n      timestamp: Date.now()\n    });\n  }\n  \n  /**\n   * Subscribes to events of a specific type\n   * \n   * @param type - The type of events to subscribe to\n   * @returns An observable of events of the specified type\n   */\n  on(type: EventType): Observable<Event> {\n    return this.eventSubject.asObservable().pipe(\n      filter(event => event.type === type)\n    );\n  }\n  \n  /**\n   * Subscribes to all events\n   * \n   * @returns An observable of all events\n   */\n  onAll(): Observable<Event> {\n    return this.eventSubject.asObservable();\n  }\n  \n  /**\n   * Publishes a data load event\n   * \n   * @param widget - The widget that needs data\n   * @param source - Optional source identifier\n   */\n  publishDataLoad(widget: IWidget, source?: string): void {\n    this.publish(EventType.DATA_LOAD, widget, source);\n  }\n  \n  /**\n   * Subscribes to data load events\n   * \n   * @returns An observable of data load events\n   */\n  onDataLoad(): Observable<IWidget> {\n    return this.on(EventType.DATA_LOAD).pipe(\n      map(event => event.payload as IWidget)\n    );\n  }\n  \n  /**\n   * Publishes a filter update event\n   * \n   * @param filterData - The updated filter data\n   * @param source - Optional source identifier\n   */\n  publishFilterUpdate(filterData: any, source?: string): void {\n    this.publish(EventType.FILTER_UPDATE, filterData, source);\n  }\n  \n  /**\n   * Subscribes to filter update events\n   * \n   * @returns An observable of filter update events\n   */\n  onFilterUpdate(): Observable<any> {\n    return this.on(EventType.FILTER_UPDATE).pipe(\n      map(event => event.payload)\n    );\n  }\n  \n  /**\n   * Publishes a widget update event\n   * \n   * @param widget - The updated widget\n   * @param source - Optional source identifier\n   */\n  publishWidgetUpdate(widget: IWidget, source?: string): void {\n    this.publish(EventType.WIDGET_UPDATE, widget, source);\n  }\n  \n  /**\n   * Subscribes to widget update events\n   * \n   * @returns An observable of widget update events\n   */\n  onWidgetUpdate(): Observable<IWidget> {\n    return this.on(EventType.WIDGET_UPDATE).pipe(\n      map(event => event.payload as IWidget)\n    );\n  }\n  \n  /**\n   * Publishes an error event\n   * \n   * @param error - The error that occurred\n   * @param source - Optional source identifier\n   */\n  publishError(error: any, source?: string): void {\n    this.publish(EventType.ERROR, error, source);\n  }\n  \n  /**\n   * Subscribes to error events\n   * \n   * @returns An observable of error events\n   */\n  onError(): Observable<any> {\n    return this.on(EventType.ERROR).pipe(\n      map(event => event.payload)\n    );\n  }\n}","@if(widget?.error) {\r\n    <div [style]=\"{ height: '20vh' }\" class=\"widget-error\">\r\n        <div class=\"error-container\">\r\n            <div class=\"error-icon\">⚠️</div>\r\n            <div class=\"error-message\">\r\n                <h3>Error loading widget</h3>\r\n                <p>{{ widget.error?.message || 'An unknown error occurred' }}</p>\r\n            </div>\r\n            <button (click)=\"retryLoad()\" class=\"retry-button\">Retry</button>\r\n        </div>\r\n    </div>\r\n} @else if(widget?.loading) {\r\n    <div [style]=\"{ height: '20vh' }\" class=\"widget-loading\">\r\n        <div class=\"loading-container\">\r\n            <div class=\"loading-spinner\"></div>\r\n            <div class=\"loading-text\">Loading...</div>\r\n        </div>\r\n    </div>\r\n} @else if(isEchartComponent) {\r\n    <div [style]=\"{ height: '20vh' }\">\r\n        <ng-container \r\n            *ngComponentOutlet=\"currentWidget.component; inputs: currentWidget.inputs\">\r\n        </ng-container>\r\n    </div>\r\n} @else {\r\n    <div [style]=\"{ height: '20vh' }\">\r\n        <ng-container \r\n            *ngComponentOutlet=\"currentWidget.component; inputs: currentWidget.inputs\">\r\n        </ng-container>\r\n    </div>\r\n}\r\n","import {Component, EventEmitter, Input, Output} from '@angular/core';\r\nimport {NgComponentOutlet} from '@angular/common';\r\nimport {IWidget} from '../../entities/IWidget';\r\nimport {WidgetPluginService} from '../../services/widget-plugin.service';\r\nimport {EventBusService} from '../../services/event-bus.service';\r\n\r\n/**\r\n * A dynamic widget component that renders different widget types based on configuration\r\n */\r\n@Component({\r\n  selector: 'vis-widget',\r\n  standalone: true,\r\n  templateUrl:'./widget.component.html',\r\n  imports: [NgComponentOutlet],\r\n  styles: [`\r\n    .widget-error {\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n      height: 100%;\r\n      background-color: rgba(255, 0, 0, 0.05);\r\n      border: 1px solid rgba(255, 0, 0, 0.2);\r\n      border-radius: 4px;\r\n    }\r\n\r\n    .error-container {\r\n      display: flex;\r\n      flex-direction: column;\r\n      align-items: center;\r\n      padding: 16px;\r\n      text-align: center;\r\n    }\r\n\r\n    .error-icon {\r\n      font-size: 24px;\r\n      margin-bottom: 8px;\r\n    }\r\n\r\n    .error-message h3 {\r\n      margin: 0 0 8px 0;\r\n      color: #d32f2f;\r\n    }\r\n\r\n    .error-message p {\r\n      margin: 0 0 16px 0;\r\n      color: #666;\r\n    }\r\n\r\n    .retry-button {\r\n      padding: 8px 16px;\r\n      background-color: #f44336;\r\n      color: white;\r\n      border: none;\r\n      border-radius: 4px;\r\n      cursor: pointer;\r\n    }\r\n\r\n    .retry-button:hover {\r\n      background-color: #d32f2f;\r\n    }\r\n\r\n    .widget-loading {\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n      height: 100%;\r\n      background-color: rgba(0, 0, 0, 0.02);\r\n    }\r\n\r\n    .loading-container {\r\n      display: flex;\r\n      flex-direction: column;\r\n      align-items: center;\r\n    }\r\n\r\n    .loading-spinner {\r\n      width: 32px;\r\n      height: 32px;\r\n      border: 3px solid rgba(0, 0, 0, 0.1);\r\n      border-radius: 50%;\r\n      border-top-color: #3498db;\r\n      animation: spin 1s ease-in-out infinite;\r\n      margin-bottom: 8px;\r\n    }\r\n\r\n    @keyframes spin {\r\n      to { transform: rotate(360deg); }\r\n    }\r\n\r\n    .loading-text {\r\n      color: #666;\r\n    }\r\n  `]\r\n})\r\nexport class WidgetComponent {\r\n  /** The widget configuration */\r\n  @Input() widget!: IWidget;\r\n\r\n  /** Event emitted when data needs to be loaded for the widget */\r\n  @Output() onDataLoad: EventEmitter<IWidget> = new EventEmitter();\r\n\r\n  /** Event emitted when filter values are updated */\r\n  @Output() onUpdateFilter: EventEmitter<any> = new EventEmitter();\r\n\r\n  constructor(\r\n    private widgetPluginService: WidgetPluginService,\r\n    private eventBus: EventBusService\r\n  ) {}\r\n\r\n  /**\r\n   * Gets the current widget component and its inputs\r\n   * @returns An object containing the component type and inputs\r\n   */\r\n  get currentWidget() {\r\n    return {\r\n      component: this.widgetPluginService.getComponentForType(this.widget?.config?.component || ''),\r\n      inputs: {\r\n        widget: this.widget,\r\n        onDataLoad: this.onDataLoad,\r\n        onUpdateFilter: this.onUpdateFilter,\r\n      },\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Checks if the current widget is an EChart component\r\n   * @returns True if the current widget is an EChart component\r\n   */\r\n  get isEchartComponent(): boolean {\r\n    return this.widget?.config?.component === 'echart';\r\n  }\r\n\r\n  /**\r\n   * Retries loading the widget data after an error\r\n   */\r\n  retryLoad(): void {\r\n    if (!this.widget) {\r\n      return;\r\n    }\r\n\r\n    // Clear the error state\r\n    this.widget.error = null;\r\n\r\n    // Set loading state\r\n    this.widget.loading = true;\r\n\r\n    // Emit the data load event\r\n    this.onDataLoad.emit(this.widget);\r\n\r\n    // Also publish through the event bus\r\n    this.eventBus.publishDataLoad(this.widget, this.widget.id);\r\n  }\r\n}\r\n","import {Component, EventEmitter, inject, Input, Output} from '@angular/core';\r\nimport {FormGroup, FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport {IWidget} from '../entities/IWidget';\r\nimport {TabMenuModule} from 'primeng/tabmenu';\r\nimport {ScrollPanelModule} from 'primeng/scrollpanel';\r\nimport {ButtonModule} from 'primeng/button';\r\nimport {ToastModule} from 'primeng/toast';\r\nimport {CommonModule} from '@angular/common';\r\nimport {MenuItem, MessageService} from 'primeng/api';\r\nimport {merge} from \"rxjs\";\r\n\r\n@Component({\r\n  selector: 'vis-widget-config',\r\n  standalone: true,\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    TabMenuModule,\r\n    ScrollPanelModule,\r\n    ButtonModule,\r\n    ToastModule,\r\n  ],\r\n  providers: [MessageService],\r\n  templateUrl: './widget-config.component.html',\r\n  styleUrls: ['./widget-config.component.scss'],\r\n})\r\nexport class WidgetConfigComponent {\r\n\r\n  sidebarVisible: boolean = true;\r\n  private _widget!: IWidget | undefined;\r\n  @Output() onUpdate: EventEmitter<IWidget> = new EventEmitter();\r\n  @Input() selectedDashboardId:any;\r\n  @Input() set widget(value: IWidget | undefined) {\r\n    this._widget = value;\r\n\r\n    // Use ngZone.runOutsideAngular to avoid triggering change detection\r\n    // This ensures the form is patched after the component is fully initialized\r\n    queueMicrotask(() => {\r\n      this.formWidgetOptions.patchValue({\r\n        position: value?.position,\r\n        config: value?.config,\r\n      });\r\n    });\r\n  }\r\n\r\n  formModel: any = {};\r\n\r\n  items: MenuItem[] = [\r\n    {label: 'Positions', value: 0},\r\n    {label: 'Options', value: 1},\r\n    {label: 'Data Options', value: 2},\r\n  ];\r\n\r\n  get title() {\r\n    return this.widget?.config?.header?.title;\r\n  }\r\n\r\n  activeItem: MenuItem = this.items[0];\r\n  formWidgetOptions = new FormGroup({});\r\n  form = new FormGroup({});\r\n  formSeriesOptions = new FormGroup({});\r\n\r\n  ngOnInit() {\r\n    this.formModel = {};\r\n  }\r\n\r\n  onActiveTabItemChange(event: MenuItem) {\r\n    this.activeItem = event;\r\n  }\r\n\r\n  onWidgetSave() {\r\n    // const newOptions = merge(this._widget, this.formModel);\r\n    // set(newOptions, 'config.options.series', this.formModel.series);\r\n    // this.onUpdate.emit(newOptions);\r\n    //\r\n    // if(this._widget && this._widget){\r\n    //   if(this._widget.series && this._widget.series.length < 1){\r\n    //     this._widget.series?.push({});\r\n    //   }\r\n    // }\r\n    //\r\n    // const payload = {\r\n    //   name: (this._widget?.config?.header?.title ?? this._widget?.id) ?? 'New Widget',\r\n    //   category: this._widget?.config.component ?? 'BarChartVisual',\r\n    //   description: this._widget?.config.component ?? 'BarChartVisual',\r\n    //   placementOptions: JSON.stringify(this._widget?.position),\r\n    //   chartOptions: JSON.stringify(this._widget?.config),\r\n    //   otherOptions: JSON.stringify(this._widget?.series),\r\n    // };\r\n\r\n    // // Call the API to save the widget\r\n    // this.dashboardApi.updateByQuery(`${this.selectedDashboardId}/${this._widget?.id}/visualization`, payload)\r\n    // .subscribe({\r\n    //   next: (res: any) => {\r\n    //     if(res && this._widget) {\r\n    //       this._widget.id = res.id;\r\n    //     }\r\n    //   },\r\n    //   error: (error) => {\r\n    //     console.error('Error saving visualization:', error);\r\n    //     this.messageService.add({\r\n    //       severity: 'error',\r\n    //       summary: 'ERROR',\r\n    //       detail: 'Error saving visualization',\r\n    //       key: 'br',\r\n    //       life: 3000\r\n    //     });\r\n    //   },\r\n    //   complete: () => {\r\n    //     this.messageService.add({\r\n    //       severity: 'success',\r\n    //       summary: 'SUCCESS',\r\n    //       detail: 'Visualization saved successfully',\r\n    //       key: 'br',\r\n    //       life: 3000\r\n    //     });\r\n    //   }\r\n    // });\r\n  }\r\n\r\n}\r\n","<div id=\"panelId\" style=\"height:100%; overflow-y: visible;\">\r\n  <div class=\"form-buttons\">\r\n    <!-- Buttons in Footer -->\r\n    <div class=\"form-button\">\r\n      <p-button [outlined]=\"true\" type=\"button\" label=\"Save\" (click)=\"onWidgetSave()\"></p-button>\r\n    </div>\r\n    <div class=\"form-button\">\r\n      <p-button [outlined]=\"true\" type=\"button\" label=\"Edit\" class=\"ui-button-warning ml-2 mr-2\"></p-button>\r\n    </div>\r\n    <div class=\"form-button\">\r\n      <p-button [outlined]=\"true\" type=\"reset\" label=\"Reset\" class=\"ui-button-danger\"></p-button>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n<!-- Toast Message -->\r\n<p-toast position=\"bottom-right\" key=\"br\" />","<p-panel [header]=\"title\">\r\n  <ng-template pTemplate=\"icons\">\r\n    @if (onEditMode) {\r\n      <p-button *hasClaim=\"['PROJECT_WRITE','PROJECT_UPDATE','PROJECTUSERS_DELETE']\" [outlined]=\"true\" class=\"p-button-sm mr-2\" type=\"button\" (click)=\"onDeleteWidgetClicked($event)\"\r\n                [outlined]=\"true\"\r\n                icon=\"pi pi-trash\"></p-button>\r\n\r\n      <p-button [outlined]=\"true\" class=\"p-button-sm\" type=\"button\" (click)=\"sidebarVisible = true\" [outlined]=\"true\"\r\n                icon=\"pi pi-cog\"></p-button>\r\n    }\r\n  </ng-template>\r\n</p-panel>\r\n<p-sidebar [(visible)]=\"sidebarVisible\" position=\"right\" model=\"false\" [appendTo]=\"'body'\" [style]=\"{\r\n      'width': '30%',\r\n      height: '100%',\r\n      padding: '0px',\r\n      'padding-right': '2px',\r\n    }\">\r\n  <ng-template pTemplate=\"header\">\r\n    <div class=\"font-bold ml-3 mb-3 text-lg\">\r\n      {{ title }} Settings\r\n    </div>\r\n  </ng-template>\r\n  <ng-template pTemplate=\"content\">\r\n    <vis-widget-config [selectedDashboardId]=\"dashboardId\" [widget]=\"widget\" (onUpdate)=\"onUpdateOptions($event)\"/>\r\n  </ng-template>\r\n</p-sidebar>\r\n","import {Component, EventEmitter, Input, Output, input} from '@angular/core';\r\nimport {FormGroup, FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport {IWidget} from '../entities/IWidget';\r\nimport {PanelModule} from 'primeng/panel';\r\nimport {SidebarModule} from 'primeng/sidebar';\r\nimport {WidgetConfigComponent} from '../widget-config/widget-config.component';\r\nimport {CommonModule} from '@angular/common';\r\nimport {WidgetComponent} from '../widgets/widget/widget.component';\r\nimport {Button} from \"primeng/button\";\r\n\r\n@Component({\r\n  selector: 'vis-widget-header',\r\n  standalone: true,\r\n  imports: [\r\n    CommonModule,\r\n    SidebarModule,\r\n    PanelModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    WidgetConfigComponent,\r\n    Button\r\n  ],\r\n  templateUrl: './widget-header.component.html',\r\n  styleUrls: ['./widget-header.component.css'],\r\n})\r\nexport class WidgetHeaderComponent {\r\n  @Input() widget!: IWidget;\r\n  @Output() onUpdateWidget: EventEmitter<IWidget> = new EventEmitter();\r\n  @Output() onDeleteWidget: EventEmitter<IWidget> = new EventEmitter();\r\n  @Input() onEditMode: boolean = true;\r\n  @Input() dashboardId:any;\r\n\r\n  sidebarVisible: boolean = false;\r\n\r\n  get title() {\r\n    return this.widget?.config?.header?.title;\r\n  }\r\n\r\n  onUpdateOptions(data: IWidget) {\r\n    this.onUpdateWidget.emit(data);\r\n    this.sidebarVisible = false;\r\n  }\r\n\r\n  onEditModeClicked() {\r\n    this.onEditMode = !this.onEditMode;\r\n  }\r\n\r\n  onDeleteWidgetClicked(event: any) {\r\n    this.onDeleteWidget.emit(this.widget);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\n\n/**\n * Service for handling complex calculations related to dashboard widgets\n * \n * This service extracts calculation logic from components to improve maintainability\n * and reusability across the application.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class CalculationService {\n  /** Default chart height in pixels */\n  readonly defaultChartHeight: number = 300;\n\n  /**\n   * Calculates the appropriate chart height based on grid dimensions\n   * \n   * @param cols - Number of columns in the grid\n   * @param rows - Number of rows in the grid\n   * @param flag - Optional flag to adjust height calculation\n   * @param baseHeight - Base height to use for calculation (defaults to defaultChartHeight)\n   * @returns The calculated chart height in pixels\n   */\n  public calculateChartHeight(cols: number, rows: number, flag: boolean = false, baseHeight: number = this.defaultChartHeight): number {\n    // Base height for a standard container\n    const baseContainerHeight = baseHeight;\n\n    // Calculate aspect ratio\n    const aspectRatio = cols / rows;\n    const area = cols * rows;\n\n    // Adjust zoom based on area\n    // Larger area = more zoom out (smaller zoom number)\n    const zoomAdjustment = Math.log(area) / Math.log(2); // logarithmic scaling\n\n    // Apply margin reduction (2.5% top and bottom = 5% total)\n    const marginReduction = 0.95; // 100% - 5%\n\n    // Adjust height based on an aspect ratio:\n    // - Taller containers (rows > cols) get proportionally more height\n    // - Wider containers (cols > rows) maintain base height\n    let heightAdjustment = aspectRatio < 1 \n      ? 1 / aspectRatio\n      : 1;\n\n    if(flag) {\n      heightAdjustment = heightAdjustment * aspectRatio;\n    }\n\n    return Math.round(baseContainerHeight * heightAdjustment * marginReduction);\n  }\n\n  /**\n   * Calculates the appropriate map center coordinates based on grid dimensions\n   * \n   * @param cols - Number of columns in the grid\n   * @param rows - Number of rows in the grid\n   * @returns An array of [longitude, latitude] for the map center\n   */\n  public calculateMapCenter(cols: number, rows: number): number[] {\n    // Base center for a USA map\n    const baseLongitude = -95;\n    const baseLatitude = 38;\n\n    // Adjust center based on an aspect ratio\n    const aspectRatio = cols / rows;\n\n    // Adjust longitude more for wider containers\n    const longitudeAdjustment = (aspectRatio > 1) ? (aspectRatio - 1) * 5 : 0;\n\n    // Adjust latitude more for taller containers\n    const latitudeAdjustment = (aspectRatio < 1) ? ((1 / aspectRatio) - 1) * 2 : 0;\n\n    return [\n      baseLongitude + longitudeAdjustment,\n      baseLatitude + latitudeAdjustment\n    ];\n  }\n\n  /**\n   * Calculates the appropriate map zoom level based on grid dimensions\n   * \n   * @param cols - Number of columns in the grid\n   * @param rows - Number of rows in the grid\n   * @returns The calculated zoom level for the map\n   */\n  public calculateMapZoom(cols: number, rows: number): number {\n    // Base zoom level\n    const baseZoom = 4.0;\n\n    // Calculate area of grid\n    const area = cols * rows;\n\n    // Adjust zoom based on area\n    // Larger area = more zoom out (smaller zoom number)\n    const zoomAdjustment = Math.log(area) / Math.log(2); // logarithmic scaling\n\n    // Calculate aspect ratio adjustment\n    const aspectRatio = cols / rows;\n    const aspectAdjustment = Math.abs(1 - aspectRatio) * 0.5;\n\n    return baseZoom - (zoomAdjustment * 0.1) - aspectAdjustment;\n  }\n}","import { Injectable } from '@angular/core';\nimport { IFilterValues } from '../entities/IFilterValues';\nimport { IWidget } from '../entities/IWidget';\nimport { IFilterOptions } from '../entities/IFilterOptions';\nimport buildQuery from 'odata-query';\n\n/**\n * Service for handling filter-related operations in dashboards\n * \n * This service extracts filter logic from components to improve maintainability\n * and reusability across the application.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class FilterService {\n  /**\n   * Builds OData query parameters from the current filter values\n   * \n   * @param filterValues - The current filter values to convert to OData parameters\n   * @returns A string containing the OData query parameters\n   */\n  public getFilterParams(filterValues: IFilterValues[]): string {\n    let params = '';\n    if (filterValues.length !== 0) {\n      const filtersParams: any = [];\n      filterValues.map((item) => {\n        filtersParams.push({\n          [item.accessor]: item[item.accessor]\n        });\n      });\n      const filter = {and: filtersParams};\n      params = buildQuery({filter});\n      params = params.replace('?$', '').replace('=', '') + '/';\n    }\n    return params;\n  }\n\n  /**\n   * Finds the filter widget in the dashboard\n   * \n   * @param widgets - Array of all widgets in the dashboard\n   * @returns The filter widget if found, undefined otherwise\n   */\n  public findFilterWidget(widgets: IWidget[]): IWidget | undefined {\n    return widgets.find(\n      (item: IWidget) => item.config.component === 'filter'\n    );\n  }\n\n  /**\n   * Gets the current filter values from the filter widget\n   * \n   * @param widgets - Array of all widgets in the dashboard\n   * @returns Array of filter values if filter widget exists, empty array otherwise\n   */\n  public getFilterValues(widgets: IWidget[]): IFilterValues[] {\n    const filterWidget = this.findFilterWidget(widgets);\n    return (filterWidget?.config?.options as IFilterOptions)?.values || [];\n  }\n\n  /**\n   * Updates a filter widget with new filter values\n   * \n   * @param filterWidget - The filter widget to update\n   * @param filterEvent - The filter event containing the new filter values\n   * @returns The updated filter widget\n   */\n  public updateFilterWidget(filterWidget: IWidget, filterEvent: any): IWidget {\n    const newFilterWidget = {...filterWidget};\n    \n    if (Array.isArray(filterEvent)) {\n      (newFilterWidget.config.options as IFilterOptions).values = filterEvent;\n    } else if ((newFilterWidget?.config?.options as IFilterOptions).values) {\n      (newFilterWidget.config.options as IFilterOptions).values.push({\n        accessor: filterEvent.widget.config.state.accessor,\n        ...filterEvent.value\n      });\n    }\n    \n    return newFilterWidget;\n  }\n}","import { Injectable } from '@angular/core';\nimport { IWidget } from '../entities/IWidget';\nimport { IFilterValues } from '../entities/IFilterValues';\n\n/**\n * Service for caching widget data to improve performance\n * \n * This service provides methods for caching and retrieving widget data,\n * reducing the need for repeated data fetching.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class WidgetDataCacheService {\n  private cache: Map<string, { data: any, timestamp: number, filters?: string }> = new Map();\n\n  // Cache expiration time in milliseconds (default: 5 minutes)\n  private cacheExpirationTime = 5 * 60 * 1000;\n\n  constructor() {}\n\n  /**\n   * Sets the cache expiration time\n   * \n   * @param timeInMs - The cache expiration time in milliseconds\n   */\n  setCacheExpirationTime(timeInMs: number): void {\n    this.cacheExpirationTime = timeInMs;\n  }\n\n  /**\n   * Gets the cache key for a widget and optional filters\n   * \n   * @param widget - The widget to get the cache key for\n   * @param filters - Optional filter values\n   * @returns The cache key\n   */\n  private getCacheKey(widget: IWidget, filters?: string | IFilterValues[]): string {\n    const widgetId = widget.id || '';\n    const filterString = this.getFilterString(filters);\n    return `${widgetId}:${filterString}`;\n  }\n\n  /**\n   * Converts filters to a string for use in cache keys\n   * \n   * @param filters - The filters to convert\n   * @returns A string representation of the filters\n   */\n  private getFilterString(filters?: string | IFilterValues[]): string {\n    if (!filters) {\n      return '';\n    }\n\n    if (typeof filters === 'string') {\n      return filters;\n    }\n\n    return JSON.stringify(filters);\n  }\n\n  /**\n   * Gets data from the cache for a widget and filters\n   * \n   * @param widget - The widget to get data for\n   * @param filters - Optional filter values\n   * @returns The cached data if available and not expired, undefined otherwise\n   */\n  getData(widget: IWidget, filters?: string | IFilterValues[]): any {\n    const key = this.getCacheKey(widget, filters);\n    const cachedItem = this.cache.get(key);\n\n    if (!cachedItem) {\n      return undefined;\n    }\n\n    // Check if the cache has expired\n    const now = Date.now();\n    if (now - cachedItem.timestamp > this.cacheExpirationTime) {\n      this.cache.delete(key);\n      return undefined;\n    }\n\n    return cachedItem.data;\n  }\n\n  /**\n   * Stores data in the cache for a widget and filters\n   * \n   * @param widget - The widget to store data for\n   * @param data - The data to store\n   * @param filters - Optional filter values\n   */\n  setData(widget: IWidget, data: any, filters?: string | IFilterValues[]): void {\n    const key = this.getCacheKey(widget, filters);\n    this.cache.set(key, {\n      data,\n      timestamp: Date.now(),\n      filters: this.getFilterString(filters)\n    });\n  }\n\n  /**\n   * Clears the cache for a specific widget\n   * \n   * @param widget - The widget to clear the cache for\n   */\n  clearWidgetCache(widget: IWidget): void {\n    const widgetId = widget.id || '';\n\n    // Delete all cache entries for this widget\n    for (const key of this.cache.keys()) {\n      if (key.startsWith(`${widgetId}:`)) {\n        this.cache.delete(key);\n      }\n    }\n  }\n\n  /**\n   * Clears the entire cache\n   */\n  clearAllCache(): void {\n    this.cache.clear();\n  }\n\n  /**\n   * Determines if a widget's data should be reloaded based on filter changes\n   * \n   * @param widget - The widget to check\n   * @param oldFilters - The old filter values\n   * @param newFilters - The new filter values\n   * @returns True if the widget should be reloaded, false otherwise\n   */\n  shouldReloadWidget(widget: IWidget, oldFilters: IFilterValues[], newFilters: IFilterValues[]): boolean {\n    // If the widget doesn't support filtering, it doesn't need to be reloaded\n    if (widget.config?.state?.supportsFiltering === false) {\n      return false;\n    }\n\n    // If the widget has dependencies on specific filters, check if those have changed\n    const dependencies = widget.config?.state?.filterDependencies;\n    if (dependencies && Array.isArray(dependencies) && dependencies.length > 0) {\n      // Check if any of the dependent filters have changed\n      return dependencies.some(dep => {\n        const oldFilter = oldFilters.find(f => f['id'] === dep);\n        const newFilter = newFilters.find(f => f['id'] === dep);\n\n        if (!oldFilter && !newFilter) {\n          return false;\n        }\n\n        if (!oldFilter || !newFilter) {\n          return true;\n        }\n\n        return JSON.stringify(oldFilter['value']) !== JSON.stringify(newFilter['value']);\n      });\n    }\n\n    // By default, reload if any filter has changed\n    if (oldFilters.length !== newFilters.length) {\n      return true;\n    }\n\n    return JSON.stringify(oldFilters) !== JSON.stringify(newFilters);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { IWidget } from '../entities/IWidget';\n\n/**\n * Service for implementing virtual scrolling for large dashboards\n * \n * This service provides methods for determining which widgets should be\n * rendered based on their position and the current viewport.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class VirtualScrollService {\n  // Default viewport height in rows\n  private viewportHeight = 20;\n  \n  // Buffer size in rows (widgets this many rows outside the viewport will still be rendered)\n  private bufferSize = 5;\n  \n  constructor() {}\n  \n  /**\n   * Sets the viewport height\n   * \n   * @param rows - The viewport height in rows\n   */\n  setViewportHeight(rows: number): void {\n    this.viewportHeight = rows;\n  }\n  \n  /**\n   * Sets the buffer size\n   * \n   * @param rows - The buffer size in rows\n   */\n  setBufferSize(rows: number): void {\n    this.bufferSize = rows;\n  }\n  \n  /**\n   * Determines which widgets should be rendered based on the current scroll position\n   * \n   * @param widgets - All widgets in the dashboard\n   * @param scrollTop - The current scroll position in rows\n   * @returns The widgets that should be rendered\n   */\n  getVisibleWidgets(widgets: IWidget[], scrollTop: number): IWidget[] {\n    if (!widgets || widgets.length === 0) {\n      return [];\n    }\n    \n    // Calculate the visible range with buffer\n    const visibleRangeStart = Math.max(0, scrollTop - this.bufferSize);\n    const visibleRangeEnd = scrollTop + this.viewportHeight + this.bufferSize;\n    \n    // Filter widgets to only include those in the visible range\n    return widgets.filter(widget => {\n      if (!widget.position) {\n        return true; // Include widgets without position info\n      }\n      \n      const widgetTop = widget.position.y;\n      const widgetBottom = widget.position.y + widget.position.rows;\n      \n      // Widget is visible if any part of it is in the visible range\n      return (\n        (widgetTop >= visibleRangeStart && widgetTop <= visibleRangeEnd) || // Top edge in range\n        (widgetBottom >= visibleRangeStart && widgetBottom <= visibleRangeEnd) || // Bottom edge in range\n        (widgetTop <= visibleRangeStart && widgetBottom >= visibleRangeEnd) // Widget spans the entire range\n      );\n    });\n  }\n  \n  /**\n   * Calculates the total height of the dashboard in rows\n   * \n   * @param widgets - All widgets in the dashboard\n   * @returns The total height in rows\n   */\n  getTotalHeight(widgets: IWidget[]): number {\n    if (!widgets || widgets.length === 0) {\n      return 0;\n    }\n    \n    // Find the widget with the highest bottom edge\n    return widgets.reduce((maxBottom, widget) => {\n      if (!widget.position) {\n        return maxBottom;\n      }\n      \n      const bottom = widget.position.y + widget.position.rows;\n      return Math.max(maxBottom, bottom);\n    }, 0);\n  }\n  \n  /**\n   * Creates placeholder widgets for the virtual scroll\n   * \n   * @param totalHeight - The total height of the dashboard in rows\n   * @returns A placeholder widget that takes up the required space\n   */\n  createPlaceholders(totalHeight: number): IWidget {\n    return {\n      id: 'virtual-scroll-placeholder',\n      position: {\n        x: 0,\n        y: 0,\n        cols: 12,\n        rows: totalHeight\n      },\n      config: {\n        component: 'placeholder',\n        header: {\n          title: 'Virtual Scroll Placeholder'\n        },\n        options: {}\n      }\n    };\n  }\n}","<div class=\"gridster-container\" (scroll)=\"onDashboardScroll($event)\">\r\n  <gridster class=\"mt-2 dashboard-gridster\" [options]=\"options\">\r\n    <div id=\"dashboard\" class=\"print-body\" [style.height.px]=\"totalDashboardHeight * 50\">\r\n      @for (item of visibleWidgets; track item.id; let i = $index) {\r\n\r\n        <gridster-item \r\n            [item]=\"item.position\" \r\n            (itemResize)=\"updateString('[Edit Mode - Pending Changes]')\"\r\n            (itemChange)=\"updateString('[Edit Mode - Pending Changes]')\">\r\n\r\n            @if (item.config.header) {\r\n              <vis-widget-header \r\n                  [dashboardId]=\"dashboardId\" \r\n                  [widget]=\"item\" \r\n                  (onUpdateWidget)=\"onUpdateWidget($event)\"\r\n                  (onDeleteWidget)=\"onDeleteWidget($event)\" \r\n                  [onEditMode]=\"isEditMode\"/>\r\n            }\r\n\r\n            <vis-widget \r\n                [widget]=\"item\" \r\n                (onDataLoad)=\"onDataLoad($event)\" \r\n                (onUpdateFilter)=\"onUpdateFilter($event)\"/>\r\n\r\n        </gridster-item>\r\n\r\n      }\r\n    </div>\r\n  </gridster>\r\n</div>\r\n\r\n<!-- Virtual Scrolling Status -->\r\n<div class=\"virtual-scroll-status\" *ngIf=\"widgets.length > visibleWidgets.length\">\r\n  Showing {{ visibleWidgets.length }} of {{ widgets.length }} widgets\r\n</div>\r\n\r\n<!-- Toast Message -->\r\n<p-toast position=\"bottom-right\" key=\"br\" />\r\n","import {\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  Output,\r\n  ChangeDetectionStrategy\r\n} from '@angular/core';\r\nimport {\r\n  GridType,\r\n  GridsterComponent,\r\n  GridsterConfig,\r\n  GridsterItem,\r\n  GridsterItemComponent,\r\n  GridsterItemComponentInterface,\r\n} from 'angular-gridster2';\r\nimport * as echarts from 'echarts';\r\nimport {CommonModule} from '@angular/common';\r\nimport {FormGroup, FormsModule} from '@angular/forms';\r\nimport {IWidget} from '../entities/IWidget';\r\nimport {WidgetComponent} from '../widgets/widget/widget.component';\r\nimport {WidgetHeaderComponent} from '../widget-header/widget-header.component';\r\nimport {IFilterOptions} from '../entities/IFilterOptions';\r\nimport {IFilterValues} from '../entities/IFilterValues';\r\nimport {NgxPrintModule} from 'ngx-print';\r\nimport {Toast} from 'primeng/toast';\r\nimport {CalculationService} from '../services/calculation.service';\r\nimport {FilterService} from '../services/filter.service';\r\nimport {EventBusService, EventType} from '../services/event-bus.service';\r\nimport {WidgetDataCacheService} from '../services/widget-data-cache.service';\r\nimport {VirtualScrollService} from '../services/virtual-scroll.service';\r\n\r\n/**\r\n * A container component for dashboard widgets.\r\n * \r\n * This component provides a grid-based layout for dashboard widgets using angular-gridster2.\r\n * It handles widget positioning, resizing, data loading, and filtering.\r\n */\r\n@Component({\r\n  selector: 'vis-dashboard-container',\r\n  standalone: true,\r\n  templateUrl: './dashboard-container.component.html',\r\n  styleUrls: ['./dashboard-container.component.scss'],\r\n  styles: [`\r\n    .gridster-container {\r\n      height: 100%;\r\n      overflow-y: auto;\r\n      overflow-x: hidden;\r\n    }\r\n\r\n    .virtual-scroll-status {\r\n      position: fixed;\r\n      bottom: 10px;\r\n      left: 10px;\r\n      background-color: rgba(0, 0, 0, 0.7);\r\n      color: white;\r\n      padding: 5px 10px;\r\n      border-radius: 4px;\r\n      font-size: 12px;\r\n      z-index: 1000;\r\n      opacity: 0.7;\r\n      transition: opacity 0.3s;\r\n    }\r\n\r\n    .virtual-scroll-status:hover {\r\n      opacity: 1;\r\n    }\r\n  `],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    GridsterComponent,\r\n    GridsterItemComponent,\r\n    WidgetComponent,\r\n    WidgetHeaderComponent,\r\n    NgxPrintModule,\r\n    Toast\r\n  ],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class DashboardContainerComponent {\r\n\r\n  /** Array of widgets to display in the dashboard */\r\n  @Input() widgets!: IWidget[];\r\n\r\n  /** Current filter values applied to the dashboard */\r\n  @Input() filterValues: IFilterValues[] = [];\r\n\r\n  /** Current chart height in pixels */\r\n  chartHeight: number = 300;\r\n\r\n  // Virtual scrolling properties\r\n  private currentScrollPosition = 0;\r\n  visibleWidgets: IWidget[] = [];\r\n  totalDashboardHeight = 0;\r\n\r\n  constructor(\r\n    private calculationService: CalculationService,\r\n    private filterService: FilterService,\r\n    private eventBus: EventBusService,\r\n    private widgetDataCache: WidgetDataCacheService,\r\n    private virtualScrollService: VirtualScrollService\r\n  ) {\r\n    // Subscribe to events from the event bus\r\n    this.subscribeToEvents();\r\n  }\r\n\r\n  /**\r\n   * Lifecycle hook that is called after the component is initialized\r\n   */\r\n  ngOnInit(): void {\r\n    // Initialize virtual scrolling\r\n    this.initVirtualScrolling();\r\n  }\r\n\r\n  /**\r\n   * Initializes virtual scrolling for the dashboard\r\n   */\r\n  private initVirtualScrolling(): void {\r\n    // Set initial viewport height based on screen size\r\n    const viewportHeight = Math.floor(window.innerHeight / 50); // Approximate row height\r\n    this.virtualScrollService.setViewportHeight(viewportHeight);\r\n\r\n    // Update visible widgets whenever widgets array changes\r\n    this.updateVisibleWidgets();\r\n  }\r\n\r\n  /**\r\n   * Updates the list of visible widgets based on the current scroll position\r\n   */\r\n  private updateVisibleWidgets(): void {\r\n    if (!this.widgets || this.widgets.length === 0) {\r\n      this.visibleWidgets = [];\r\n      this.totalDashboardHeight = 0;\r\n      return;\r\n    }\r\n\r\n    // Calculate total dashboard height\r\n    this.totalDashboardHeight = this.virtualScrollService.getTotalHeight(this.widgets);\r\n\r\n    // Get visible widgets\r\n    this.visibleWidgets = this.virtualScrollService.getVisibleWidgets(\r\n      this.widgets,\r\n      this.currentScrollPosition\r\n    );\r\n\r\n    console.log(`Rendering ${this.visibleWidgets.length} of ${this.widgets.length} widgets`);\r\n  }\r\n\r\n  /**\r\n   * Handles scroll events in the dashboard\r\n   * \r\n   * @param event - The scroll event\r\n   */\r\n  onDashboardScroll(event: any): void {\r\n    // Calculate current scroll position in rows\r\n    const scrollTop = event.target.scrollTop;\r\n    const rowHeight = 50; // Approximate row height in pixels\r\n    this.currentScrollPosition = Math.floor(scrollTop / rowHeight);\r\n\r\n    // Update visible widgets\r\n    this.updateVisibleWidgets();\r\n  }\r\n\r\n  /**\r\n   * Subscribes to events from the event bus\r\n   */\r\n  private subscribeToEvents(): void {\r\n    // Subscribe to data load events\r\n    this.eventBus.onDataLoad().subscribe(widget => {\r\n      this.onDataLoad(widget);\r\n    });\r\n\r\n    // Subscribe to filter update events\r\n    this.eventBus.onFilterUpdate().subscribe(filterData => {\r\n      this.onUpdateFilter(filterData);\r\n    });\r\n\r\n    // Subscribe to widget update events\r\n    this.eventBus.onWidgetUpdate().subscribe(widget => {\r\n      this.onUpdateWidget(widget);\r\n    });\r\n\r\n    // Subscribe to error events\r\n    this.eventBus.onError().subscribe(error => {\r\n      console.error('Dashboard error:', error);\r\n      // TODO: Add error handling UI\r\n    });\r\n  }\r\n\r\n  /** Event emitted when the container is touched/modified */\r\n  @Output() containerTouchChanged: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  /** Event emitted when the edit mode string changes */\r\n  @Output() editModeStringChange: EventEmitter<string> = new EventEmitter<string>();\r\n\r\n  /** Event emitted when changes are made to the dashboard */\r\n  @Output() changesMade: EventEmitter<string> = new EventEmitter<string>();\r\n\r\n  /** Available dashboards for selection */\r\n  availableDashboards: any[] = [];\r\n\r\n  /** ID of the current dashboard */\r\n  @Input() dashboardId: any;\r\n\r\n  /** Initial widget data */\r\n  initialWidgetData: any;\r\n\r\n  /** Whether the dashboard is in edit mode */\r\n  @Input() isEditMode: boolean = false;\r\n\r\n  /** Whether to show confirmation dialog */\r\n  onShowConfirmation: any = false;\r\n\r\n  /** Whether to show new dashboard dialog */\r\n  onShowNewDashboardDialog = false;\r\n\r\n  /** Whether the container has been touched/modified */\r\n  containerTouched: boolean = false;\r\n\r\n  /** String representation of the current edit mode state */\r\n  editModeString: string = '';\r\n\r\n  /** Form for creating a new dashboard */\r\n  newDashboardForm!: FormGroup;\r\n\r\n\r\n  /** \r\n   * Gridster configuration options for the dashboard layout\r\n   * @see https://github.com/tiberiuzuld/angular-gridster2\r\n   */\r\n  @Input() options: GridsterConfig = {\r\n    gridType: GridType.ScrollVertical,\r\n    draggable: {\r\n      enabled: false,\r\n    },\r\n    pushItems: false,\r\n    margin: 4,\r\n    maxCols: 12,\r\n    minCols: 12,\r\n    rowHeightRatio: 0.15,\r\n    swap: false,\r\n    resizable: {\r\n      enabled: false,\r\n    },\r\n    itemResizeCallback: (item, itemComponent) => this.onWidgetResize(item, itemComponent),\r\n    itemChangeCallback: (item, itemComponent) => this.onWidgetChange(item, itemComponent)\r\n  };\r\n\r\n\r\n  /**\r\n   * Loads data for a widget and applies any filters\r\n   * \r\n   * @param widget - The widget to load data for\r\n   */\r\n  async onDataLoad(widget: IWidget) {\r\n    if (!widget) {\r\n      console.error('Cannot load data for undefined widget');\r\n      this.eventBus.publishError(new Error('Cannot load data for undefined widget'), 'dashboard-container');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Set widget to loading state if possible\r\n      widget.loading = true;\r\n      widget.error = null;\r\n\r\n      // Get the filter widget and update filter values\r\n      const filterWidget = this.filterService.findFilterWidget(this.widgets);\r\n      this.filterValues = this.filterService.getFilterValues(this.widgets);\r\n\r\n      // Determine which filter format to use\r\n      const filter = widget.config?.state?.isOdataQuery === true \r\n        ? this.getFilterParams() \r\n        : this.filterValues;\r\n\r\n      // Check if we have cached data for this widget and filter combination\r\n      const cachedData = this.widgetDataCache.getData(widget, filter);\r\n      if (cachedData) {\r\n        console.log(`Using cached data for widget ${widget.id}`);\r\n\r\n        // Apply cached data to the widget\r\n        if (widget.chartInstance) {\r\n          widget.chartInstance.setOption(cachedData);\r\n        }\r\n\r\n        // Set widget to not loading state\r\n        widget.loading = false;\r\n        return;\r\n      }\r\n\r\n      // Process widget data if available\r\n      if (widget.config?.options) {\r\n        let widgetData: any = (widget.config.options as echarts.EChartsOption).series;\r\n        if (widgetData) {\r\n          if (widgetData.series) {\r\n            widgetData.map((item: any) => {\r\n              if (!item || !item.encode) return {};\r\n\r\n              return {\r\n                x: {\r\n                  table: {\r\n                    id: item.encode?.x?.split('.')?.[0] ?? '',\r\n                    name: item.encode?.x?.split('.')?.[1] ?? '',\r\n                  },\r\n                  column: {\r\n                    id: item.encode?.x?.split('.')?.[2] ?? '',\r\n                    name: item.encode?.x?.split('.')?.[3] ?? '',\r\n                  },\r\n                },\r\n                y: {\r\n                  table: {\r\n                    id: item.encode?.y?.split('.')?.[0] ?? '',\r\n                    name: item.encode?.y?.split('.')?.[1] ?? '',\r\n                  },\r\n                  column: {\r\n                    id: item.encode?.y?.split('.')?.[2] ?? '',\r\n                    name: item.encode?.y?.split('.')?.[3] ?? '',\r\n                  },\r\n                },\r\n              };\r\n            });\r\n          } else {\r\n            widgetData.seriesData = {};\r\n          }\r\n        }\r\n      }\r\n\r\n      // Show loading indicator\r\n      if (widget.chartInstance) {\r\n        widget.chartInstance.showLoading();\r\n      }\r\n\r\n      // Call onChartOptions event handler if available\r\n      if (widget.config?.events?.onChartOptions) {\r\n        widget.config.events.onChartOptions(widget, widget.chartInstance ?? undefined, filter);\r\n\r\n        // Cache the widget data if available\r\n        if (widget.chartInstance) {\r\n          const chartOptions = widget.chartInstance.getOption();\r\n          this.widgetDataCache.setData(widget, chartOptions, filter);\r\n        }\r\n      }\r\n\r\n      // Publish widget update event\r\n      this.eventBus.publishWidgetUpdate(widget, 'dashboard-container');\r\n\r\n      // Set widget to not loading state\r\n      widget.loading = false;\r\n    } catch (error) {\r\n      console.error(`Error loading data for widget ${widget.id}:`, error);\r\n\r\n      // Set error state on widget\r\n      widget.loading = false;\r\n      widget.error = error;\r\n\r\n      // Hide loading indicator if it was shown\r\n      if (widget.chartInstance) {\r\n        widget.chartInstance.hideLoading();\r\n      }\r\n\r\n      // Publish error event\r\n      this.eventBus.publishError(error, 'dashboard-container');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Builds OData query parameters from the current filter values\r\n   * \r\n   * @returns A string containing the OData query parameters\r\n   */\r\n  getFilterParams() {\r\n    return this.filterService.getFilterParams(this.filterValues);\r\n  }\r\n\r\n  /**\r\n   * Updates a widget in the dashboard and reloads data for all widgets\r\n   * \r\n   * @param widget - The updated widget\r\n   */\r\n  onUpdateWidget(widget: IWidget) {\r\n    if (!widget) {\r\n      console.error('Cannot update undefined widget');\r\n      this.eventBus.publishError(new Error('Cannot update undefined widget'), 'dashboard-container');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Update the widget in the widgets array\r\n      const widgetsWithNewOptions = this.widgets.map((item) =>\r\n        item.id === widget.id ? {...widget} : item\r\n      );\r\n      this.widgets = widgetsWithNewOptions;\r\n\r\n      // Update visible widgets for virtual scrolling\r\n      this.updateVisibleWidgets();\r\n\r\n      // Reload data for all widgets\r\n      this.widgets.forEach(widget => {\r\n        if (widget) {\r\n          this.onDataLoad(widget);\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.error(`Error updating widget ${widget.id}:`, error);\r\n      this.eventBus.publishError(error, 'dashboard-container');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Callback when a widget is resized\r\n   * \r\n   * @param item - The gridster item being resized\r\n   * @param itemComponent - The gridster item component\r\n   */\r\n  onWidgetResize(\r\n    item: GridsterItem,\r\n    itemComponent: GridsterItemComponentInterface\r\n  ) {\r\n    this.containerTouched = true;\r\n    this.editModeString = '[Edit Mode - Pending Changes]';\r\n    this.editModeStringChange.emit(this.editModeString);\r\n    this.containerTouchChanged.emit(this.containerTouched);\r\n  }\r\n\r\n  /**\r\n   * Callback when a widget is moved or changed\r\n   * \r\n   * @param item - The gridster item being changed\r\n   * @param itemComponent - The gridster item component\r\n   */\r\n  onWidgetChange(\r\n    item: GridsterItem,\r\n    itemComponent: GridsterItemComponentInterface\r\n  ) {\r\n    this.containerTouched = true;\r\n    this.editModeString = '[Edit Mode - Pending Changes]';\r\n    this.editModeStringChange.emit(this.editModeString);\r\n    this.containerTouchChanged.emit(this.containerTouched);\r\n  }\r\n\r\n  /**\r\n   * Updates the edit mode string and emits the change\r\n   * \r\n   * @param editModeString - The new edit mode string\r\n   */\r\n  updateString(editModeString: string) {\r\n    this.editModeString = editModeString;\r\n    this.editModeStringChange.emit(this.editModeString);\r\n  }\r\n\r\n  /**\r\n   * Gets the current edit mode string\r\n   * \r\n   * @returns The current edit mode string\r\n   */\r\n  getEditModeString(): string {\r\n    return this.editModeString;\r\n  }\r\n\r\n  /**\r\n   * Updates the filter widget with new filter values\r\n   * \r\n   * @param $event - The filter event containing the new filter values\r\n   */\r\n  onUpdateFilter($event: any) {\r\n    try {\r\n      // Find the filter widget\r\n      const filterWidget = this.filterService.findFilterWidget(this.widgets);\r\n\r\n      if (filterWidget) {\r\n        // Store the old filter values for comparison\r\n        const oldFilterValues = [...this.filterValues];\r\n\r\n        // Update the filter widget with the new values\r\n        const newFilterWidget = this.filterService.updateFilterWidget(filterWidget, $event);\r\n\r\n        // Update the widget in the dashboard\r\n        this.updateWidgetWithoutReload(newFilterWidget);\r\n\r\n        // Get the new filter values\r\n        this.filterValues = this.filterService.getFilterValues(this.widgets);\r\n\r\n        // Only reload widgets that are affected by the filter change\r\n        this.widgets.forEach(widget => {\r\n          if (widget.id !== filterWidget.id && \r\n              this.widgetDataCache.shouldReloadWidget(widget, oldFilterValues, this.filterValues)) {\r\n            console.log(`Reloading widget ${widget.id} due to filter change`);\r\n            this.onDataLoad(widget);\r\n          }\r\n        });\r\n\r\n        // Publish filter update event\r\n        this.eventBus.publishFilterUpdate($event, 'dashboard-container');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error updating filter:', error);\r\n      this.eventBus.publishError(error, 'dashboard-container');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Updates a widget in the dashboard without reloading data\r\n   * \r\n   * @param widget - The updated widget\r\n   */\r\n  private updateWidgetWithoutReload(widget: IWidget) {\r\n    if (!widget) {\r\n      console.error('Cannot update undefined widget');\r\n      this.eventBus.publishError(new Error('Cannot update undefined widget'), 'dashboard-container');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Update the widget in the widgets array\r\n      this.widgets = this.widgets.map((item) =>\r\n        item.id === widget.id ? {...widget} : item\r\n      );\r\n\r\n      // Publish widget update event\r\n      this.eventBus.publishWidgetUpdate(widget, 'dashboard-container');\r\n    } catch (error) {\r\n      console.error(`Error updating widget ${widget.id}:`, error);\r\n      this.eventBus.publishError(error, 'dashboard-container');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handles dashboard selection changes\r\n   * \r\n   * @param $event - The selection change event\r\n   */\r\n  onDashboardSelectionChanged($event: any) {\r\n    return;\r\n  }\r\n\r\n  /**\r\n   * Deletes a widget from the dashboard\r\n   * Only available in edit mode\r\n   * \r\n   * @param widget - The widget to delete\r\n   */\r\n  onDeleteWidget(widget: IWidget) {\r\n    if (!widget) {\r\n      console.error('Cannot delete undefined widget');\r\n      this.eventBus.publishError(new Error('Cannot delete undefined widget'), 'dashboard-container');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const index = this.widgets.indexOf(widget);\r\n      if (index !== -1) {\r\n        this.widgets.splice(index, 1);\r\n\r\n        // Update visible widgets for virtual scrolling\r\n        this.updateVisibleWidgets();\r\n\r\n        // Clear the widget from cache\r\n        this.widgetDataCache.clearWidgetCache(widget);\r\n      } else {\r\n        console.warn(`Widget with id ${widget.id} not found in dashboard`);\r\n      }\r\n    } catch (error) {\r\n      console.error(`Error deleting widget ${widget.id}:`, error);\r\n      this.eventBus.publishError(error, 'dashboard-container');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Calculates the appropriate chart height based on grid dimensions\r\n   * \r\n   * @param cols - Number of columns in the grid\r\n   * @param rows - Number of rows in the grid\r\n   * @param flag - Optional flag to adjust height calculation\r\n   * @param baseHeight - Base height to use for calculation\r\n   * @returns The calculated chart height in pixels\r\n   */\r\n  public calculateChartHeight(cols: number, rows: number, flag: boolean = false, baseHeight?: number): number {\r\n    return this.calculationService.calculateChartHeight(cols, rows, flag, baseHeight);\r\n  }\r\n\r\n  /**\r\n   * Calculates the appropriate map center coordinates based on grid dimensions\r\n   * \r\n   * @param cols - Number of columns in the grid\r\n   * @param rows - Number of rows in the grid\r\n   * @returns An array of [longitude, latitude] for the map center\r\n   */\r\n  public calculateMapCenter(cols: number, rows: number): number[] {\r\n    return this.calculationService.calculateMapCenter(cols, rows);\r\n  }\r\n\r\n  /**\r\n   * Calculates the appropriate map zoom level based on grid dimensions\r\n   * \r\n   * @param cols - Number of columns in the grid\r\n   * @param rows - Number of rows in the grid\r\n   * @returns The calculated zoom level for the map\r\n   */\r\n  public calculateMapZoom(cols: number, rows: number): number {\r\n    return this.calculationService.calculateMapZoom(cols, rows);\r\n  }\r\n}\r\n","import { Component, EventEmitter, Input, OnDestroy, OnInit } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { IWidget } from '../../entities/IWidget';\nimport { EventBusService, EventType } from '../../services/event-bus.service';\n\n/**\n * Base component for all widget types\n * \n * This component provides common functionality for all widget types,\n * reducing code duplication and improving maintainability.\n */\n@Component({\n  template: '',\n})\nexport abstract class BaseWidgetComponent implements OnInit, OnDestroy {\n  /** The widget configuration */\n  @Input() widget!: IWidget;\n  \n  /** Event emitted when data needs to be loaded for the widget */\n  @Input() onDataLoad!: EventEmitter<IWidget>;\n  \n  /** Event emitted when filter values are updated */\n  @Input() onUpdateFilter!: EventEmitter<any>;\n  \n  /** Subject for handling component destruction */\n  protected destroy$ = new Subject<void>();\n  \n  /** Loading state of the widget */\n  protected loading = false;\n  \n  /** Error state of the widget */\n  protected error: any = null;\n  \n  constructor(protected eventBus: EventBusService) {}\n  \n  /**\n   * Initializes the component\n   */\n  ngOnInit(): void {\n    // Subscribe to relevant events\n    this.subscribeToEvents();\n  }\n  \n  /**\n   * Cleans up resources when the component is destroyed\n   */\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n  \n  /**\n   * Subscribes to relevant events from the event bus\n   */\n  protected subscribeToEvents(): void {\n    // Subscribe to widget update events for this widget\n    this.eventBus.onWidgetUpdate()\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(updatedWidget => {\n        if (updatedWidget.id === this.widget.id) {\n          this.widget = updatedWidget;\n          this.onWidgetUpdated();\n        }\n      });\n      \n    // Subscribe to filter update events\n    this.eventBus.onFilterUpdate()\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(filterData => {\n        this.onFilterUpdated(filterData);\n      });\n  }\n  \n  /**\n   * Loads data for the widget\n   */\n  protected loadData(): void {\n    this.loading = true;\n    this.error = null;\n    \n    try {\n      // Use the event bus to publish a data load event\n      this.eventBus.publishDataLoad(this.widget, this.widget.id);\n      \n      // Also emit the legacy event for backward compatibility\n      this.onDataLoad?.emit(this.widget);\n    } catch (err) {\n      this.handleError(err);\n    }\n  }\n  \n  /**\n   * Handles errors that occur during data loading\n   * \n   * @param error - The error that occurred\n   */\n  protected handleError(error: any): void {\n    this.error = error;\n    this.loading = false;\n    this.eventBus.publishError(error, this.widget.id);\n    console.error(`Error in widget ${this.widget.id}:`, error);\n  }\n  \n  /**\n   * Called when the widget is updated\n   * Override in derived classes to handle widget updates\n   */\n  protected onWidgetUpdated(): void {\n    // To be overridden by derived classes\n  }\n  \n  /**\n   * Called when filters are updated\n   * Override in derived classes to handle filter updates\n   * \n   * @param filterData - The updated filter data\n   */\n  protected onFilterUpdated(filterData: any): void {\n    // To be overridden by derived classes\n  }\n  \n  /**\n   * Updates a filter value\n   * \n   * @param value - The new filter value\n   */\n  protected updateFilter(value: any): void {\n    const filterData = {\n      value,\n      widget: this.widget,\n    };\n    \n    // Use the event bus to publish a filter update event\n    this.eventBus.publishFilterUpdate(filterData, this.widget.id);\n    \n    // Also emit the legacy event for backward compatibility\n    this.onUpdateFilter?.emit(filterData);\n  }\n}","export const formOptions = [\r\n  {\r\n    type: 'tabs',\r\n    fieldGroup: [\r\n      {\r\n        props: {\r\n          label: 'Position',\r\n        },\r\n        fieldGroup: [\r\n          {\r\n            key: 'position.x',\r\n            type: 'number',\r\n            templateOptions: {\r\n              label: 'X-axis',\r\n              required: true,\r\n              attributes: {\r\n                style: 'display:grid; width: 100%; margin-bottom:1rem',\r\n              },\r\n            },\r\n          },\r\n          {\r\n            key: 'position.y',\r\n            type: 'number',\r\n            templateOptions: {\r\n              label: 'Y-axis',\r\n              required: true,\r\n              attributes: {\r\n                style: 'display:grid; width: 100%; margin-bottom:1rem',\r\n              },\r\n            },\r\n          },\r\n          {\r\n            key: 'position.cols',\r\n            type: 'number',\r\n            templateOptions: {\r\n              label: 'Columns',\r\n              required: true,\r\n              attributes: {\r\n                style: 'display:grid; width: 100%; margin-bottom:1rem',\r\n              },\r\n            },\r\n          },\r\n          {\r\n            key: 'position.rows',\r\n            type: 'number',\r\n            templateOptions: {\r\n              label: 'Rows',\r\n              required: true,\r\n              attributes: {\r\n                style: 'display:grid; width: 100%; margin-bottom:1rem',\r\n              },\r\n            },\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        props: {\r\n          label: 'Config',\r\n        },\r\n        fieldGroup: [\r\n          {\r\n            key: 'config.component',\r\n            type: 'select',\r\n            templateOptions: {\r\n              label: 'Component',\r\n              options: [\r\n                {label: 'ScatterChartVisual', value: 'ScatterChartVisual'},\r\n                {label: 'PieChartVisual', value: 'PieChartVisual'},\r\n                {label: 'BarChartVisual', value: 'BarChartVisual'},\r\n                {label: 'EChart', value: 'echart'},\r\n                {label: 'NoteBook', value: 'react'}\r\n              ],\r\n              attributes: {\r\n                style: 'display:grid; width: 100%; margin-bottom:1rem',\r\n                appendTo: 'body',\r\n              },\r\n            },\r\n          },\r\n          {\r\n            key: 'config.header',\r\n            type: 'accordion',\r\n            templateOptions: {\r\n              label: 'Header Options',\r\n            },\r\n            fieldGroup: [\r\n              {\r\n                key: 'title',\r\n                type: 'input',\r\n                templateOptions: {\r\n                  type: 'text',\r\n                  label: 'Title',\r\n                  placeholder: 'Enter the title',\r\n                  attributes: {\r\n                    style: 'display:grid; width: 100%; margin-bottom:1rem',\r\n                  },\r\n                },\r\n              },\r\n              {\r\n                key: 'options',\r\n                type: 'input',\r\n                templateOptions: {\r\n                  label: 'Options',\r\n                  attributes: {\r\n                    style: 'display:grid; width: 100%; margin-bottom:1rem',\r\n                  },\r\n                },\r\n              },\r\n            ],\r\n          },\r\n          {\r\n            key: 'config.options',\r\n            type: 'accordion',\r\n            templateOptions: {\r\n              label: 'Input Fields',\r\n            },\r\n            fieldGroup: [\r\n              {\r\n                key: 'xAxis',\r\n                type: 'accordion',\r\n                templateOptions: {\r\n                  label: 'XAxis Options',\r\n                },\r\n                fieldGroup: [\r\n                  {\r\n                    key: 'type',\r\n                    type: 'select',\r\n                    templateOptions: {\r\n                      label: 'XAxis Type',\r\n                      placeholder: '',\r\n                      options: [\r\n                        {label: 'value', value: 'value'},\r\n                        {label: 'category', value: 'category'},\r\n                        {label: 'time', value: 'time'},\r\n                        {label: 'log', value: 'log'},\r\n                      ],\r\n                      attributes: {\r\n                        style: 'display:grid; width: 100%; margin-bottom:1rem',\r\n                      },\r\n                    },\r\n                  },\r\n                  {\r\n                    key: 'data',\r\n                    type: 'input',\r\n                    templateOptions: {\r\n                      label: 'Data',\r\n                      placeholder: '[]',\r\n                      attributes: {\r\n                        style: 'display:grid; width: 100%; margin-bottom:1rem',\r\n                      },\r\n                    },\r\n                  },\r\n                ],\r\n              },\r\n              {\r\n                key: 'yAxis',\r\n                type: 'accordion',\r\n                templateOptions: {\r\n                  label: 'YAxis Options',\r\n                },\r\n                fieldGroup: [\r\n                  {\r\n                    key: 'type',\r\n                    type: 'select',\r\n                    templateOptions: {\r\n                      label: 'Y Axis Type',\r\n                      placeholder: '',\r\n                      options: [\r\n                        {label: 'value', value: 'value'},\r\n                        {label: 'category', value: 'category'},\r\n                        {label: 'time', value: 'time'},\r\n                        {label: 'log', value: 'log'},\r\n                      ],\r\n                      attributes: {\r\n                        style: 'display:grid; width: 100%; margin-bottom:1rem',\r\n                      },\r\n                    },\r\n                  },\r\n                  {\r\n                    key: 'data',\r\n                    type: 'input',\r\n                    templateOptions: {\r\n                      label: 'Data',\r\n                      placeholder: '[]',\r\n                      attributes: {\r\n                        style: 'display:grid; width: 100%; margin-bottom:1rem',\r\n                      },\r\n                    },\r\n                  },\r\n                ],\r\n              },\r\n            ],\r\n          },\r\n          {\r\n            key: 'series',\r\n            type: 'series-accordion',\r\n            templateOptions: {\r\n              label: 'Series',\r\n            },\r\n            fieldArray: {\r\n              fieldGroup: [\r\n                {\r\n                  key: 'type',\r\n                  type: 'select',\r\n                  templateOptions: {\r\n                    label: 'Chart Type',\r\n                    placeholder: '',\r\n                    options: [\r\n                      {label: 'bar', value: 'bar'},\r\n                      {label: 'pie', value: 'pie'},\r\n                      {label: 'scatter', value: 'scatter'},\r\n                    ],\r\n                    attributes: {\r\n                      style: 'display:grid; width: 100%; margin-bottom:1rem',\r\n                    },\r\n                  },\r\n                },\r\n                {\r\n                  key: 'data',\r\n                  type: 'input',\r\n                  templateOptions: {\r\n                    label: 'Data',\r\n                    placeholder: '[]',\r\n                    attributes: {\r\n                      style: 'display:grid; width: 100%; margin-bottom:1rem',\r\n                    },\r\n                  },\r\n                },\r\n                {\r\n                  key: 'encode',\r\n                  type: 'accordion',\r\n                  templateOptions: {\r\n                    label: 'Encode',\r\n                  },\r\n                  fieldGroup: [\r\n                    {\r\n                      key: 'x',\r\n                      type: 'series-encode',\r\n                      templateOptions: {\r\n                        label: 'Encode X',\r\n                        placeholder: '',\r\n                        attributes: {\r\n                          style:\r\n                            'display:grid; width: 100%; margin-bottom:1rem',\r\n                        },\r\n                      },\r\n                    },\r\n                    {\r\n                      key: 'y',\r\n                      type: 'series-encode',\r\n                      templateOptions: {\r\n                        label: 'Encode Y',\r\n                        placeholder: '',\r\n                        attributes: {\r\n                          style:\r\n                            'display:grid; width: 100%; margin-bottom:1rem',\r\n                        },\r\n                      },\r\n                    },\r\n                  ],\r\n                },\r\n              ],\r\n            },\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        props: {\r\n          label: 'Code'\r\n        },\r\n        fieldGroup: [\r\n          {\r\n            key: 'code',\r\n            type: 'textarea',\r\n            templateOptions: {\r\n              label: 'Code',\r\n              required: true,\r\n              rows: 10,\r\n              attributes: {\r\n                style: 'display:grid; width: 100%; height:30rem; margin-bottom:1rem',\r\n              },\r\n            },\r\n          },\r\n        ]\r\n      },\r\n    ],\r\n  },\r\n];\r\n","export const dataOptions = [\r\n  {\r\n    key: 'series',\r\n    type: 'series-accordion',\r\n    templateOptions: {\r\n      label: 'Series',\r\n    },\r\n    fieldArray: {\r\n      fieldGroup: [\r\n        {\r\n          key: 'type',\r\n          type: 'select',\r\n          templateOptions: {\r\n            label: 'Chart Type',\r\n            placeholder: '',\r\n            options: [\r\n              {label: 'bar', value: 'bar'},\r\n              {label: 'pie', value: 'pie'},\r\n              {label: 'scatter', value: 'scatter'},\r\n            ],\r\n            attributes: {\r\n              style: 'display:grid; width: 100%; margin-bottom:1rem',\r\n            },\r\n          },\r\n        },\r\n        {\r\n          key: 'id',\r\n          type: 'input',\r\n          templateOptions: {\r\n            label: 'Id',\r\n            placeholder: '',\r\n            attributes: {\r\n              style: 'display:grid; width: 100%; margin-bottom:1rem',\r\n            },\r\n          },\r\n        },\r\n        {\r\n          key: 'name',\r\n          type: 'input',\r\n          templateOptions: {\r\n            label: 'Name',\r\n            placeholder: '',\r\n            attributes: {\r\n              style: 'display:grid; width: 100%; margin-bottom:1rem',\r\n            },\r\n          },\r\n        },\r\n        {\r\n          key: 'colorBy',\r\n          type: 'select',\r\n          templateOptions: {\r\n            label: 'Color By',\r\n            placeholder: '',\r\n            options: [\r\n              {label: 'Series', value: 'series'},\r\n              {label: 'Data', value: 'data'},\r\n            ],\r\n            attributes: {\r\n              style: 'display:grid; width: 100%; margin-bottom:1rem',\r\n            },\r\n          },\r\n        },\r\n        {\r\n          key: 'legendHoverLink',\r\n          type: 'radio',\r\n          templateOptions: {\r\n            label: 'Legend Hover',\r\n            options: [\r\n              {label: 'True', value: true},\r\n              {label: 'False', value: false},\r\n            ],\r\n            attributes: {\r\n              style: 'display:grid; width: 100%; margin-bottom:1rem',\r\n            },\r\n          },\r\n        },\r\n        {\r\n          key: 'coordinateSystem',\r\n          type: 'select',\r\n          templateOptions: {\r\n            label: 'Co-Ordinate System',\r\n            options: [\r\n              {label: 'cartesian2d', value: 'cartesian2d'},\r\n              {label: 'polar', value: 'polar'},\r\n            ],\r\n            attributes: {\r\n              style: 'display:grid; width: 100%; margin-bottom:1rem',\r\n            },\r\n          },\r\n        },\r\n        {\r\n          key: 'roundedCap',\r\n          type: 'radio',\r\n          templateOptions: {\r\n            label: 'Rounded Cap',\r\n            options: [\r\n              {label: 'True', value: true},\r\n              {label: 'False', value: false},\r\n            ],\r\n            attributes: {\r\n              style: 'display:grid; width: 100%; margin-bottom:1rem',\r\n            },\r\n          },\r\n        },\r\n        {\r\n          key: 'realtimeSort',\r\n          type: 'radio',\r\n          templateOptions: {\r\n            label: 'Real-Time Sort',\r\n            options: [\r\n              {label: 'True', value: true},\r\n              {label: 'False', value: false},\r\n            ],\r\n            attributes: {\r\n              style: 'display:grid; width: 100%; margin-bottom:1rem',\r\n            },\r\n          },\r\n        },\r\n        {\r\n          key: 'showBackground',\r\n          type: 'radio',\r\n          templateOptions: {\r\n            label: 'Show Background',\r\n            options: [\r\n              {label: 'True', value: true},\r\n              {label: 'False', value: false},\r\n            ],\r\n            attributes: {\r\n              style: 'display:grid; width: 100%; margin-bottom:1rem',\r\n            },\r\n          },\r\n        },\r\n        {\r\n          key: 'backgroundStyle',\r\n          type: 'accordion',\r\n          templateOptions: {\r\n            label: 'Background Style',\r\n          },\r\n          fieldGroup: [\r\n            {\r\n              key: 'color',\r\n              type: 'input',\r\n              templateOptions: {\r\n                label: 'Color',\r\n                placeHhlder: '#fff',\r\n                attributes: {\r\n                  style: 'display:grid; width: 100%; margin-bottom:1rem',\r\n                },\r\n              },\r\n            },\r\n            {\r\n              key: 'borderColor',\r\n              type: 'input',\r\n              templateOptions: {\r\n                label: 'Border Color',\r\n                placeholder: '#fff',\r\n                attributes: {\r\n                  style: 'display:grid; width: 100%; margin-bottom:1rem',\r\n                },\r\n              },\r\n            },\r\n            {\r\n              key: 'borderWidth',\r\n              type: 'input',\r\n              templateOptions: {\r\n                label: 'Border Width',\r\n                placeHolder: '',\r\n                attributes: {\r\n                  style: 'display:grid; width: 100%; margin-bottom:1rem',\r\n                },\r\n              },\r\n            },\r\n            {\r\n              key: 'borderType',\r\n              type: 'select',\r\n              templateOptions: {\r\n                label: 'Border Type',\r\n                options: [\r\n                  {label: 'Solid', value: 'solid'},\r\n                  {label: 'Dashed', value: 'dashed'},\r\n                  {label: 'Dotted', value: 'dotted'},\r\n                ],\r\n                attributes: {\r\n                  style: 'display:grid; width: 100%; margin-bottom:1rem',\r\n                },\r\n              },\r\n            },\r\n            {\r\n              key: 'borderRadius',\r\n              type: 'input',\r\n              templateOptions: {\r\n                label: 'Border Radius',\r\n                placeholder: '',\r\n                attributes: {\r\n                  style: 'display:grid; width: 100%; margin-bottom:1rem',\r\n                },\r\n              },\r\n            },\r\n            {\r\n              key: 'opacity',\r\n              type: 'input',\r\n              templateOptions: {\r\n                label: 'Opacity',\r\n                placeholder: '',\r\n                attributes: {\r\n                  style: 'display:grid; width: 100%; margin-bottom:1rem',\r\n                },\r\n              },\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          key: 'label',\r\n          type: 'accordion',\r\n          templateOptions: {\r\n            label: 'Label',\r\n          },\r\n          fieldGroup: [\r\n            {\r\n              key: 'show',\r\n              type: 'radio',\r\n              templateOptions: {\r\n                label: 'Show Label',\r\n                options: [\r\n                  {label: 'True', value: true},\r\n                  {label: 'False', value: false},\r\n                ],\r\n                attributes: {\r\n                  style: 'display:grid; width: 100%; margin-bottom:1rem',\r\n                },\r\n              },\r\n            },\r\n            {\r\n              key: 'formatter',\r\n              type: 'input',\r\n              templateOptions: {\r\n                label: 'formatter',\r\n                placeholder: '{ }',\r\n                attributes: {\r\n                  style: 'display:grid; width: 100%; margin-bottom:1rem',\r\n                },\r\n              },\r\n            },\r\n            {\r\n              key: 'color',\r\n              type: 'input',\r\n              templateOptions: {\r\n                label: 'Color',\r\n                placeholder: '#fff',\r\n                attributes: {\r\n                  style: 'display:grid; width: 100%; margin-bottom:1rem',\r\n                },\r\n              },\r\n            },\r\n            {\r\n              key: 'fontStyle',\r\n              type: 'select',\r\n              templateOptions: {\r\n                label: 'Font Style',\r\n                options: [\r\n                  {label: 'normal', value: 'normal'},\r\n                  {label: 'italic', value: 'italic'},\r\n                  {label: 'oblique', value: 'oblique'},\r\n                ],\r\n                attributes: {\r\n                  style: 'display:grid; width: 100%; margin-bottom:1rem',\r\n                },\r\n              },\r\n            },\r\n            {\r\n              key: 'fontWeight',\r\n              type: 'select',\r\n              templateOptions: {\r\n                label: 'Font Weight',\r\n                options: [\r\n                  {label: 'normal', value: 'normal'},\r\n                  {label: 'bold', value: 'bold'},\r\n                  {label: 'lighter', value: 'lighter'},\r\n                ],\r\n                attributes: {\r\n                  style: 'display:grid; width: 100%; margin-bottom:1rem',\r\n                },\r\n              },\r\n            },\r\n            {\r\n              key: 'fontSize',\r\n              type: 'input',\r\n              templateOptions: {\r\n                label: 'Font Size',\r\n                attributes: {\r\n                  style: 'display:grid; width: 100%; margin-bottom:1rem',\r\n                },\r\n              },\r\n            },\r\n            {\r\n              key: 'align',\r\n              type: 'select',\r\n              templateOptions: {\r\n                label: 'Align',\r\n                options: [\r\n                  {label: 'left', value: 'left'},\r\n                  {label: 'center', value: 'center'},\r\n                  {label: 'right', value: 'right'},\r\n                ],\r\n                attributes: {\r\n                  style: 'display:grid; width: 100%; margin-bottom:1rem',\r\n                },\r\n              },\r\n            },\r\n            {\r\n              key: 'verticalAlign',\r\n              type: 'select',\r\n              templateOptions: {\r\n                label: 'Vertical Align',\r\n                options: [\r\n                  {label: 'top', value: 'top'},\r\n                  {label: 'middle', value: 'middle'},\r\n                  {label: 'bottom', value: 'bottom'},\r\n                ],\r\n                attributes: {\r\n                  style: 'display:grid; width: 100%; margin-bottom:1rem',\r\n                },\r\n              },\r\n            },\r\n            {\r\n              key: 'backgroundColor',\r\n              type: 'input',\r\n              templateOptions: {\r\n                label: 'Background Color',\r\n                placeholder: '#fff',\r\n                attributes: {\r\n                  style: 'display:grid; width: 100%; margin-bottom:1rem',\r\n                },\r\n              },\r\n            },\r\n            {\r\n              key: 'borderColor',\r\n              type: 'input',\r\n              templateOptions: {\r\n                label: 'Border Color',\r\n                placeholder: '#fff',\r\n                attributes: {\r\n                  style: 'display:grid; width: 100%; margin-bottom:1rem',\r\n                },\r\n              },\r\n            },\r\n            {\r\n              key: 'borderWidth',\r\n              type: 'input',\r\n              templateOptions: {\r\n                label: 'Border Width',\r\n                placeholder: '',\r\n                attributes: {\r\n                  style: 'display:grid; width: 100%; margin-bottom:1rem',\r\n                },\r\n              },\r\n            },\r\n            {\r\n              key: 'borderType',\r\n              type: 'select',\r\n              templateOptions: {\r\n                label: 'Border Type',\r\n                options: [\r\n                  {label: 'Solid', value: 'solid'},\r\n                  {label: 'Dashed', value: 'dashed'},\r\n                  {label: 'Dotted', value: 'dotted'},\r\n                ],\r\n                attributes: {\r\n                  style: 'display:grid; width: 100%; margin-bottom:1rem',\r\n                },\r\n              },\r\n            },\r\n            {\r\n              key: 'borderRadius',\r\n              type: 'input',\r\n              templateOptions: {\r\n                label: 'Border Radius',\r\n                placeholder: '',\r\n                attributes: {\r\n                  style: 'display:grid; width: 100%; margin-bottom:1rem',\r\n                },\r\n              },\r\n            },\r\n            {\r\n              key: 'padding',\r\n              type: 'input',\r\n              templateOptions: {\r\n                label: 'Padding',\r\n                placeholder: '',\r\n                attributes: {\r\n                  style: 'display:grid; width: 100%; margin-bottom:1rem',\r\n                },\r\n              },\r\n            },\r\n            {\r\n              key: 'overFlow',\r\n              type: 'select',\r\n              templateOptions: {\r\n                label: 'OverFlow',\r\n                options: [\r\n                  {label: 'Truncate', value: 'truncate'},\r\n                  {label: 'Break', value: 'break'},\r\n                  {label: 'BreakAll', value: 'breakAll'},\r\n                ],\r\n                attributes: {\r\n                  style: 'display:grid; width: 100%; margin-bottom:1rem',\r\n                },\r\n              },\r\n            },\r\n            {\r\n              key: 'position',\r\n              type: 'select',\r\n              templateOptions: {\r\n                label: 'Label Position',\r\n                placeholder: '',\r\n                options: [\r\n                  {label: 'top', value: 'top'},\r\n                  {label: 'left', value: 'left'},\r\n                  {label: 'right', value: 'right'},\r\n                  {label: 'bottom', value: 'bottom'},\r\n                  {label: 'inside', value: 'inside'},\r\n                  {label: 'insideLeft', value: 'insideLeft'},\r\n                  {label: 'insideRight', value: 'insideRight'},\r\n                  {label: 'insideTop', value: 'insideTop'},\r\n                  {label: 'insideBottom', value: 'insideBottom'},\r\n                  {label: 'insideTopLeft', value: 'insideTopLeft'},\r\n                  {label: 'insideBottomLeft', value: 'insideBottomLeft'},\r\n                  {label: 'insideTopRight', value: 'insideTopRight'},\r\n                  {label: 'insideBottomRight', value: 'insideBottomRight'},\r\n                ],\r\n                attributes: {\r\n                  style: 'display:grid; width: 100%; margin-bottom:1rem',\r\n                },\r\n              },\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          key: 'labelLine',\r\n          type: 'accordion',\r\n          templateOptions: {\r\n            label: 'Label Line',\r\n          },\r\n          fieldGroup: [\r\n            {\r\n              key: 'show',\r\n              type: 'radio',\r\n              templateOptions: {\r\n                label: 'Show Label',\r\n                options: [\r\n                  {label: 'True', value: true},\r\n                  {label: 'False', value: false},\r\n                ],\r\n                attributes: {\r\n                  style: 'display:grid; width: 100%; margin-bottom:1rem',\r\n                },\r\n              },\r\n            },\r\n            {\r\n              key: 'lineStyle',\r\n              type: 'accordion',\r\n              templateOptions: {\r\n                label: 'Line Style',\r\n              },\r\n              fieldGroup: [\r\n                {\r\n                  key: 'color',\r\n                  type: 'input',\r\n                  templateOptions: {\r\n                    label: 'Color',\r\n                    placeholder: '#fff',\r\n                    attributes: {\r\n                      style: 'display:grid; width: 100%; margin-bottom:1rem',\r\n                    },\r\n                  },\r\n                },\r\n                {\r\n                  key: 'width',\r\n                  type: 'input',\r\n                  templateOptions: {\r\n                    label: 'Width',\r\n                    placeholder: '',\r\n                    attributes: {\r\n                      style: 'display:grid; width: 100%; margin-bottom:1rem',\r\n                    },\r\n                  },\r\n                },\r\n                {\r\n                  key: 'type',\r\n                  type: 'select',\r\n                  templateOptions: {\r\n                    label: 'Type',\r\n                    options: [\r\n                      {label: 'Solid', value: 'solid'},\r\n                      {label: 'Dashed', value: 'dashed'},\r\n                      {label: 'Dotted', value: 'dotted'},\r\n                    ],\r\n                    attributes: {\r\n                      style: 'display:grid; width: 100%; margin-bottom:1rem',\r\n                    },\r\n                  },\r\n                },\r\n                {\r\n                  key: 'cap',\r\n                  type: 'select',\r\n                  templateOptions: {\r\n                    label: 'Cap',\r\n                    options: [\r\n                      {label: 'butt', value: 'butt'},\r\n                      {label: 'round', value: 'round'},\r\n                      {label: 'square', value: 'square'},\r\n                    ],\r\n                    attributes: {\r\n                      style: 'display:grid; width: 100%; margin-bottom:1rem',\r\n                    },\r\n                  },\r\n                },\r\n                {\r\n                  key: 'join',\r\n                  type: 'select',\r\n                  templateOptions: {\r\n                    label: 'Join',\r\n                    options: [\r\n                      {label: 'bevel', value: 'bevel'},\r\n                      {label: 'round', value: 'round'},\r\n                      {label: 'miter', value: 'miter'},\r\n                    ],\r\n                    attributes: {\r\n                      style: 'display:grid; width: 100%; margin-bottom:1rem',\r\n                    },\r\n                  },\r\n                },\r\n              ],\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          key: 'itemStyle',\r\n          type: 'accordion',\r\n          templateOptions: {\r\n            label: 'Item Style',\r\n          },\r\n          fieldGroup: [\r\n            {\r\n              key: 'color',\r\n              type: 'input',\r\n              templateOptions: {\r\n                label: 'Color',\r\n                placeHhlder: '#fff',\r\n                attributes: {\r\n                  style: 'display:grid; width: 100%; margin-bottom:1rem',\r\n                },\r\n              },\r\n            },\r\n            {\r\n              key: 'borderColor',\r\n              type: 'input',\r\n              templateOptions: {\r\n                label: 'Border Color',\r\n                placeholder: '#fff',\r\n                attributes: {\r\n                  style: 'display:grid; width: 100%; margin-bottom:1rem',\r\n                },\r\n              },\r\n            },\r\n            {\r\n              key: 'borderWidth',\r\n              type: 'input',\r\n              templateOptions: {\r\n                label: 'Border Width',\r\n                placeHolder: '',\r\n                attributes: {\r\n                  style: 'display:grid; width: 100%; margin-bottom:1rem',\r\n                },\r\n              },\r\n            },\r\n            {\r\n              key: 'borderType',\r\n              type: 'select',\r\n              templateOptions: {\r\n                label: 'Border Type',\r\n                options: [\r\n                  {label: 'Solid', value: 'solid'},\r\n                  {label: 'Dashed', value: 'dashed'},\r\n                  {label: 'Dotted', value: 'dotted'},\r\n                ],\r\n                attributes: {\r\n                  style: 'display:grid; width: 100%; margin-bottom:1rem',\r\n                },\r\n              },\r\n            },\r\n            {\r\n              key: 'borderRadius',\r\n              type: 'input',\r\n              templateOptions: {\r\n                label: 'Border Radius',\r\n                placeholder: '',\r\n                attributes: {\r\n                  style: 'display:grid; width: 100%; margin-bottom:1rem',\r\n                },\r\n              },\r\n            },\r\n            {\r\n              key: 'opacity',\r\n              type: 'input',\r\n              templateOptions: {\r\n                label: 'Opacity',\r\n                placeholder: '',\r\n                attributes: {\r\n                  style: 'display:grid; width: 100%; margin-bottom:1rem',\r\n                },\r\n              },\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          key: 'labelLayout',\r\n          type: 'accordion',\r\n          templateOptions: {\r\n            label: 'labelLayout',\r\n          },\r\n          fieldGroup: [],\r\n        },\r\n        {\r\n          key: 'emphasis',\r\n          type: 'accordion',\r\n          templateOptions: {\r\n            label: 'Emphasis',\r\n          },\r\n          fieldGroup: [\r\n            {\r\n              key: 'disabled',\r\n              type: 'radio',\r\n              templateOptions: {\r\n                label: 'Disabled',\r\n                options: [\r\n                  {label: 'True', value: true},\r\n                  {label: 'False', value: false},\r\n                ],\r\n                attributes: {\r\n                  style: 'display:grid; width: 100%; margin-bottom:1rem',\r\n                },\r\n              },\r\n            },\r\n            {\r\n              key: 'focus',\r\n              type: 'select',\r\n              templateOptions: {\r\n                label: 'Focus',\r\n                options: [\r\n                  {label: 'none', value: 'none'},\r\n                  {label: 'self', value: 'self'},\r\n                  {label: 'series', value: 'series'},\r\n                ],\r\n                attributes: {\r\n                  style: 'display:grid; width: 100%; margin-bottom:1rem',\r\n                },\r\n              },\r\n            },\r\n            {\r\n              key: 'blurScope',\r\n              type: 'select',\r\n              templateOptions: {\r\n                label: 'Blur Scope',\r\n                options: [\r\n                  {label: 'coordinateSystem', value: 'coordinateSystem'},\r\n                  {label: 'series', value: 'series'},\r\n                  {label: 'global', value: 'global'},\r\n                ],\r\n                attributes: {\r\n                  style: 'display:grid; width: 100%; margin-bottom:1rem',\r\n                },\r\n              },\r\n            },\r\n            {\r\n              key: 'label',\r\n              type: 'accordion',\r\n              templateOptions: {\r\n                label: 'Label',\r\n              },\r\n              fieldGroup: [\r\n                {\r\n                  key: 'show',\r\n                  type: 'radio',\r\n                  templateOptions: {\r\n                    label: 'Show Label',\r\n                    options: [\r\n                      {label: 'True', value: true},\r\n                      {label: 'False', value: false},\r\n                    ],\r\n                    attributes: {\r\n                      style: 'display:grid; width: 100%; margin-bottom:1rem',\r\n                    },\r\n                  },\r\n                },\r\n                {\r\n                  key: 'formatter',\r\n                  type: 'input',\r\n                  templateOptions: {\r\n                    label: 'formatter',\r\n                    placeholder: '{ }',\r\n                    attributes: {\r\n                      style: 'display:grid; width: 100%; margin-bottom:1rem',\r\n                    },\r\n                  },\r\n                },\r\n                {\r\n                  key: 'color',\r\n                  type: 'input',\r\n                  templateOptions: {\r\n                    label: 'Color',\r\n                    placeholder: '#fff',\r\n                    attributes: {\r\n                      style: 'display:grid; width: 100%; margin-bottom:1rem',\r\n                    },\r\n                  },\r\n                },\r\n                {\r\n                  key: 'fontStyle',\r\n                  type: 'select',\r\n                  templateOptions: {\r\n                    label: 'Font Style',\r\n                    options: [\r\n                      {label: 'normal', value: 'normal'},\r\n                      {label: 'italic', value: 'italic'},\r\n                      {label: 'oblique', value: 'oblique'},\r\n                    ],\r\n                    attributes: {\r\n                      style: 'display:grid; width: 100%; margin-bottom:1rem',\r\n                    },\r\n                  },\r\n                },\r\n                {\r\n                  key: 'fontWeight',\r\n                  type: 'select',\r\n                  templateOptions: {\r\n                    label: 'Font Weight',\r\n                    options: [\r\n                      {label: 'normal', value: 'normal'},\r\n                      {label: 'bold', value: 'bold'},\r\n                      {label: 'lighter', value: 'lighter'},\r\n                    ],\r\n                    attributes: {\r\n                      style: 'display:grid; width: 100%; margin-bottom:1rem',\r\n                    },\r\n                  },\r\n                },\r\n                {\r\n                  key: 'fontSize',\r\n                  type: 'input',\r\n                  templateOptions: {\r\n                    label: 'Font Size',\r\n                    attributes: {\r\n                      style: 'display:grid; width: 100%; margin-bottom:1rem',\r\n                    },\r\n                  },\r\n                },\r\n                {\r\n                  key: 'align',\r\n                  type: 'select',\r\n                  templateOptions: {\r\n                    label: 'Align',\r\n                    options: [\r\n                      {label: 'left', value: 'left'},\r\n                      {label: 'center', value: 'center'},\r\n                      {label: 'right', value: 'right'},\r\n                    ],\r\n                    attributes: {\r\n                      style: 'display:grid; width: 100%; margin-bottom:1rem',\r\n                    },\r\n                  },\r\n                },\r\n                {\r\n                  key: 'verticalAlign',\r\n                  type: 'select',\r\n                  templateOptions: {\r\n                    label: 'Vertical Align',\r\n                    options: [\r\n                      {label: 'top', value: 'top'},\r\n                      {label: 'middle', value: 'middle'},\r\n                      {label: 'bottom', value: 'bottom'},\r\n                    ],\r\n                    attributes: {\r\n                      style: 'display:grid; width: 100%; margin-bottom:1rem',\r\n                    },\r\n                  },\r\n                },\r\n                {\r\n                  key: 'backgroundColor',\r\n                  type: 'input',\r\n                  templateOptions: {\r\n                    label: 'Background Color',\r\n                    placeholder: '#fff',\r\n                    attributes: {\r\n                      style: 'display:grid; width: 100%; margin-bottom:1rem',\r\n                    },\r\n                  },\r\n                },\r\n                {\r\n                  key: 'borderColor',\r\n                  type: 'input',\r\n                  templateOptions: {\r\n                    label: 'Border Color',\r\n                    placeholder: '#fff',\r\n                    attributes: {\r\n                      style: 'display:grid; width: 100%; margin-bottom:1rem',\r\n                    },\r\n                  },\r\n                },\r\n                {\r\n                  key: 'borderWidth',\r\n                  type: 'input',\r\n                  templateOptions: {\r\n                    label: 'Border Width',\r\n                    placeholder: '',\r\n                    attributes: {\r\n                      style: 'display:grid; width: 100%; margin-bottom:1rem',\r\n                    },\r\n                  },\r\n                },\r\n                {\r\n                  key: 'borderType',\r\n                  type: 'select',\r\n                  templateOptions: {\r\n                    label: 'Border Type',\r\n                    options: [\r\n                      {label: 'Solid', value: 'solid'},\r\n                      {label: 'Dashed', value: 'dashed'},\r\n                      {label: 'Dotted', value: 'dotted'},\r\n                    ],\r\n                    attributes: {\r\n                      style: 'display:grid; width: 100%; margin-bottom:1rem',\r\n                    },\r\n                  },\r\n                },\r\n                {\r\n                  key: 'borderRadius',\r\n                  type: 'input',\r\n                  templateOptions: {\r\n                    label: 'Border Radius',\r\n                    placeholder: '',\r\n                    attributes: {\r\n                      style: 'display:grid; width: 100%; margin-bottom:1rem',\r\n                    },\r\n                  },\r\n                },\r\n                {\r\n                  key: 'padding',\r\n                  type: 'input',\r\n                  templateOptions: {\r\n                    label: 'Padding',\r\n                    placeholder: '',\r\n                    attributes: {\r\n                      style: 'display:grid; width: 100%; margin-bottom:1rem',\r\n                    },\r\n                  },\r\n                },\r\n                {\r\n                  key: 'overFlow',\r\n                  type: 'select',\r\n                  templateOptions: {\r\n                    label: 'OverFlow',\r\n                    options: [\r\n                      {label: 'Truncate', value: 'truncate'},\r\n                      {label: 'Break', value: 'break'},\r\n                      {label: 'BreakAll', value: 'breakAll'},\r\n                    ],\r\n                    attributes: {\r\n                      style: 'display:grid; width: 100%; margin-bottom:1rem',\r\n                    },\r\n                  },\r\n                },\r\n                {\r\n                  key: 'position',\r\n                  type: 'select',\r\n                  templateOptions: {\r\n                    label: 'Label Position',\r\n                    placeholder: '',\r\n                    options: [\r\n                      {label: 'top', value: 'top'},\r\n                      {label: 'left', value: 'left'},\r\n                      {label: 'right', value: 'right'},\r\n                      {label: 'bottom', value: 'bottom'},\r\n                      {label: 'inside', value: 'inside'},\r\n                      {label: 'insideLeft', value: 'insideLeft'},\r\n                      {label: 'insideRight', value: 'insideRight'},\r\n                      {label: 'insideTop', value: 'insideTop'},\r\n                      {label: 'insideBottom', value: 'insideBottom'},\r\n                      {label: 'insideTopLeft', value: 'insideTopLeft'},\r\n                      {label: 'insideBottomLeft', value: 'insideBottomLeft'},\r\n                      {label: 'insideTopRight', value: 'insideTopRight'},\r\n                      {\r\n                        label: 'insideBottomRight',\r\n                        value: 'insideBottomRight',\r\n                      },\r\n                    ],\r\n                    attributes: {\r\n                      style: 'display:grid; width: 100%; margin-bottom:1rem',\r\n                    },\r\n                  },\r\n                },\r\n              ],\r\n            },\r\n            {\r\n              key: 'labelLine',\r\n              type: 'accordion',\r\n              templateOptions: {\r\n                label: 'Label Line',\r\n              },\r\n              fieldGroup: [\r\n                {\r\n                  key: 'show',\r\n                  type: 'radio',\r\n                  templateOptions: {\r\n                    label: 'Show Label',\r\n                    options: [\r\n                      {label: 'True', value: true},\r\n                      {label: 'False', value: false},\r\n                    ],\r\n                    attributes: {\r\n                      style: 'display:grid; width: 100%; margin-bottom:1rem',\r\n                    },\r\n                  },\r\n                },\r\n                {\r\n                  key: 'lineStyle',\r\n                  type: 'accordion',\r\n                  templateOptions: {\r\n                    label: 'Line Style',\r\n                  },\r\n                  fieldGroup: [\r\n                    {\r\n                      key: 'color',\r\n                      type: 'input',\r\n                      templateOptions: {\r\n                        label: 'Color',\r\n                        placeholder: '#fff',\r\n                        attributes: {\r\n                          style:\r\n                            'display:grid; width: 100%; margin-bottom:1rem',\r\n                        },\r\n                      },\r\n                    },\r\n                    {\r\n                      key: 'width',\r\n                      type: 'input',\r\n                      templateOptions: {\r\n                        label: 'Width',\r\n                        placeholder: '',\r\n                        attributes: {\r\n                          style:\r\n                            'display:grid; width: 100%; margin-bottom:1rem',\r\n                        },\r\n                      },\r\n                    },\r\n                    {\r\n                      key: 'type',\r\n                      type: 'select',\r\n                      templateOptions: {\r\n                        label: 'Type',\r\n                        options: [\r\n                          {label: 'Solid', value: 'solid'},\r\n                          {label: 'Dashed', value: 'dashed'},\r\n                          {label: 'Dotted', value: 'dotted'},\r\n                        ],\r\n                        attributes: {\r\n                          style:\r\n                            'display:grid; width: 100%; margin-bottom:1rem',\r\n                        },\r\n                      },\r\n                    },\r\n                    {\r\n                      key: 'cap',\r\n                      type: 'select',\r\n                      templateOptions: {\r\n                        label: 'Cap',\r\n                        options: [\r\n                          {label: 'butt', value: 'butt'},\r\n                          {label: 'round', value: 'round'},\r\n                          {label: 'square', value: 'square'},\r\n                        ],\r\n                        attributes: {\r\n                          style:\r\n                            'display:grid; width: 100%; margin-bottom:1rem',\r\n                        },\r\n                      },\r\n                    },\r\n                    {\r\n                      key: 'join',\r\n                      type: 'select',\r\n                      templateOptions: {\r\n                        label: 'Join',\r\n                        options: [\r\n                          {label: 'bevel', value: 'bevel'},\r\n                          {label: 'round', value: 'round'},\r\n                          {label: 'miter', value: 'miter'},\r\n                        ],\r\n                        attributes: {\r\n                          style:\r\n                            'display:grid; width: 100%; margin-bottom:1rem',\r\n                        },\r\n                      },\r\n                    },\r\n                  ],\r\n                },\r\n              ],\r\n            },\r\n            {\r\n              key: 'itemStyle',\r\n              type: 'accordion',\r\n              templateOptions: {\r\n                label: 'Item Style',\r\n              },\r\n              fieldGroup: [\r\n                {\r\n                  key: 'color',\r\n                  type: 'input',\r\n                  templateOptions: {\r\n                    label: 'Color',\r\n                    placeHhlder: '#fff',\r\n                    attributes: {\r\n                      style: 'display:grid; width: 100%; margin-bottom:1rem',\r\n                    },\r\n                  },\r\n                },\r\n                {\r\n                  key: 'borderColor',\r\n                  type: 'input',\r\n                  templateOptions: {\r\n                    label: 'Border Color',\r\n                    placeholder: '#fff',\r\n                    attributes: {\r\n                      style: 'display:grid; width: 100%; margin-bottom:1rem',\r\n                    },\r\n                  },\r\n                },\r\n                {\r\n                  key: 'borderWidth',\r\n                  type: 'input',\r\n                  templateOptions: {\r\n                    label: 'Border Width',\r\n                    placeHolder: '',\r\n                    attributes: {\r\n                      style: 'display:grid; width: 100%; margin-bottom:1rem',\r\n                    },\r\n                  },\r\n                },\r\n                {\r\n                  key: 'borderType',\r\n                  type: 'select',\r\n                  templateOptions: {\r\n                    label: 'Border Type',\r\n                    options: [\r\n                      {label: 'Solid', value: 'solid'},\r\n                      {label: 'Dashed', value: 'dashed'},\r\n                      {label: 'Dotted', value: 'dotted'},\r\n                    ],\r\n                    attributes: {\r\n                      style: 'display:grid; width: 100%; margin-bottom:1rem',\r\n                    },\r\n                  },\r\n                },\r\n                {\r\n                  key: 'borderRadius',\r\n                  type: 'input',\r\n                  templateOptions: {\r\n                    label: 'Border Radius',\r\n                    placeholder: '',\r\n                    attributes: {\r\n                      style: 'display:grid; width: 100%; margin-bottom:1rem',\r\n                    },\r\n                  },\r\n                },\r\n                {\r\n                  key: 'opacity',\r\n                  type: 'input',\r\n                  templateOptions: {\r\n                    label: 'Opacity',\r\n                    placeholder: '',\r\n                    attributes: {\r\n                      style: 'display:grid; width: 100%; margin-bottom:1rem',\r\n                    },\r\n                  },\r\n                },\r\n              ],\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          key: 'blur',\r\n          type: 'accordion',\r\n          templateOptions: {\r\n            label: 'Blur',\r\n          },\r\n          fieldGroup: [\r\n            {\r\n              key: 'label',\r\n              type: 'accordion',\r\n              templateOptions: {\r\n                label: 'Label',\r\n              },\r\n              fieldGroup: [\r\n                {\r\n                  key: 'show',\r\n                  type: 'radio',\r\n                  templateOptions: {\r\n                    label: 'Show Label',\r\n                    options: [\r\n                      {label: 'True', value: true},\r\n                      {label: 'False', value: false},\r\n                    ],\r\n                    attributes: {\r\n                      style: 'display:grid; width: 100%; margin-bottom:1rem',\r\n                    },\r\n                  },\r\n                },\r\n                {\r\n                  key: 'formatter',\r\n                  type: 'input',\r\n                  templateOptions: {\r\n                    label: 'formatter',\r\n                    placeholder: '{ }',\r\n                    attributes: {\r\n                      style: 'display:grid; width: 100%; margin-bottom:1rem',\r\n                    },\r\n                  },\r\n                },\r\n                {\r\n                  key: 'color',\r\n                  type: 'input',\r\n                  templateOptions: {\r\n                    label: 'Color',\r\n                    placeholder: '#fff',\r\n                    attributes: {\r\n                      style: 'display:grid; width: 100%; margin-bottom:1rem',\r\n                    },\r\n                  },\r\n                },\r\n                {\r\n                  key: 'fontStyle',\r\n                  type: 'select',\r\n                  templateOptions: {\r\n                    label: 'Font Style',\r\n                    options: [\r\n                      {label: 'normal', value: 'normal'},\r\n                      {label: 'italic', value: 'italic'},\r\n                      {label: 'oblique', value: 'oblique'},\r\n                    ],\r\n                    attributes: {\r\n                      style: 'display:grid; width: 100%; margin-bottom:1rem',\r\n                    },\r\n                  },\r\n                },\r\n                {\r\n                  key: 'fontWeight',\r\n                  type: 'select',\r\n                  templateOptions: {\r\n                    label: 'Font Weight',\r\n                    options: [\r\n                      {label: 'normal', value: 'normal'},\r\n                      {label: 'bold', value: 'bold'},\r\n                      {label: 'lighter', value: 'lighter'},\r\n                    ],\r\n                    attributes: {\r\n                      style: 'display:grid; width: 100%; margin-bottom:1rem',\r\n                    },\r\n                  },\r\n                },\r\n                {\r\n                  key: 'fontSize',\r\n                  type: 'input',\r\n                  templateOptions: {\r\n                    label: 'Font Size',\r\n                    attributes: {\r\n                      style: 'display:grid; width: 100%; margin-bottom:1rem',\r\n                    },\r\n                  },\r\n                },\r\n                {\r\n                  key: 'align',\r\n                  type: 'select',\r\n                  templateOptions: {\r\n                    label: 'Align',\r\n                    options: [\r\n                      {label: 'left', value: 'left'},\r\n                      {label: 'center', value: 'center'},\r\n                      {label: 'right', value: 'right'},\r\n                    ],\r\n                    attributes: {\r\n                      style: 'display:grid; width: 100%; margin-bottom:1rem',\r\n                    },\r\n                  },\r\n                },\r\n                {\r\n                  key: 'verticalAlign',\r\n                  type: 'select',\r\n                  templateOptions: {\r\n                    label: 'Vertical Align',\r\n                    options: [\r\n                      {label: 'top', value: 'top'},\r\n                      {label: 'middle', value: 'middle'},\r\n                      {label: 'bottom', value: 'bottom'},\r\n                    ],\r\n                    attributes: {\r\n                      style: 'display:grid; width: 100%; margin-bottom:1rem',\r\n                    },\r\n                  },\r\n                },\r\n                {\r\n                  key: 'backgroundColor',\r\n                  type: 'input',\r\n                  templateOptions: {\r\n                    label: 'Background Color',\r\n                    placeholder: '#fff',\r\n                    attributes: {\r\n                      style: 'display:grid; width: 100%; margin-bottom:1rem',\r\n                    },\r\n                  },\r\n                },\r\n                {\r\n                  key: 'borderColor',\r\n                  type: 'input',\r\n                  templateOptions: {\r\n                    label: 'Border Color',\r\n                    placeholder: '#fff',\r\n                    attributes: {\r\n                      style: 'display:grid; width: 100%; margin-bottom:1rem',\r\n                    },\r\n                  },\r\n                },\r\n                {\r\n                  key: 'borderWidth',\r\n                  type: 'input',\r\n                  templateOptions: {\r\n                    label: 'Border Width',\r\n                    placeholder: '',\r\n                    attributes: {\r\n                      style: 'display:grid; width: 100%; margin-bottom:1rem',\r\n                    },\r\n                  },\r\n                },\r\n                {\r\n                  key: 'borderType',\r\n                  type: 'select',\r\n                  templateOptions: {\r\n                    label: 'Border Type',\r\n                    options: [\r\n                      {label: 'Solid', value: 'solid'},\r\n                      {label: 'Dashed', value: 'dashed'},\r\n                      {label: 'Dotted', value: 'dotted'},\r\n                    ],\r\n                    attributes: {\r\n                      style: 'display:grid; width: 100%; margin-bottom:1rem',\r\n                    },\r\n                  },\r\n                },\r\n                {\r\n                  key: 'borderRadius',\r\n                  type: 'input',\r\n                  templateOptions: {\r\n                    label: 'Border Radius',\r\n                    placeholder: '',\r\n                    attributes: {\r\n                      style: 'display:grid; width: 100%; margin-bottom:1rem',\r\n                    },\r\n                  },\r\n                },\r\n                {\r\n                  key: 'padding',\r\n                  type: 'input',\r\n                  templateOptions: {\r\n                    label: 'Padding',\r\n                    placeholder: '',\r\n                    attributes: {\r\n                      style: 'display:grid; width: 100%; margin-bottom:1rem',\r\n                    },\r\n                  },\r\n                },\r\n                {\r\n                  key: 'overFlow',\r\n                  type: 'select',\r\n                  templateOptions: {\r\n                    label: 'OverFlow',\r\n                    options: [\r\n                      {label: 'Truncate', value: 'truncate'},\r\n                      {label: 'Break', value: 'break'},\r\n                      {label: 'BreakAll', value: 'breakAll'},\r\n                    ],\r\n                    attributes: {\r\n                      style: 'display:grid; width: 100%; margin-bottom:1rem',\r\n                    },\r\n                  },\r\n                },\r\n                {\r\n                  key: 'position',\r\n                  type: 'select',\r\n                  templateOptions: {\r\n                    label: 'Label Position',\r\n                    placeholder: '',\r\n                    options: [\r\n                      {label: 'top', value: 'top'},\r\n                      {label: 'left', value: 'left'},\r\n                      {label: 'right', value: 'right'},\r\n                      {label: 'bottom', value: 'bottom'},\r\n                      {label: 'inside', value: 'inside'},\r\n                      {label: 'insideLeft', value: 'insideLeft'},\r\n                      {label: 'insideRight', value: 'insideRight'},\r\n                      {label: 'insideTop', value: 'insideTop'},\r\n                      {label: 'insideBottom', value: 'insideBottom'},\r\n                      {label: 'insideTopLeft', value: 'insideTopLeft'},\r\n                      {label: 'insideBottomLeft', value: 'insideBottomLeft'},\r\n                      {label: 'insideTopRight', value: 'insideTopRight'},\r\n                      {\r\n                        label: 'insideBottomRight',\r\n                        value: 'insideBottomRight',\r\n                      },\r\n                    ],\r\n                    attributes: {\r\n                      style: 'display:grid; width: 100%; margin-bottom:1rem',\r\n                    },\r\n                  },\r\n                },\r\n              ],\r\n            },\r\n            {\r\n              key: 'labelLine',\r\n              type: 'accordion',\r\n              templateOptions: {\r\n                label: 'Label Line',\r\n              },\r\n              fieldGroup: [\r\n                {\r\n                  key: 'show',\r\n                  type: 'radio',\r\n                  templateOptions: {\r\n                    label: 'Show Label',\r\n                    options: [\r\n                      {label: 'True', value: true},\r\n                      {label: 'False', value: false},\r\n                    ],\r\n                    attributes: {\r\n                      style: 'display:grid; width: 100%; margin-bottom:1rem',\r\n                    },\r\n                  },\r\n                },\r\n                {\r\n                  key: 'lineStyle',\r\n                  type: 'accordion',\r\n                  templateOptions: {\r\n                    label: 'Line Style',\r\n                  },\r\n                  fieldGroup: [\r\n                    {\r\n                      key: 'color',\r\n                      type: 'input',\r\n                      templateOptions: {\r\n                        label: 'Color',\r\n                        placeholder: '#fff',\r\n                        attributes: {\r\n                          style:\r\n                            'display:grid; width: 100%; margin-bottom:1rem',\r\n                        },\r\n                      },\r\n                    },\r\n                    {\r\n                      key: 'width',\r\n                      type: 'input',\r\n                      templateOptions: {\r\n                        label: 'Width',\r\n                        placeholder: '',\r\n                        attributes: {\r\n                          style:\r\n                            'display:grid; width: 100%; margin-bottom:1rem',\r\n                        },\r\n                      },\r\n                    },\r\n                    {\r\n                      key: 'type',\r\n                      type: 'select',\r\n                      templateOptions: {\r\n                        label: 'Type',\r\n                        options: [\r\n                          {label: 'Solid', value: 'solid'},\r\n                          {label: 'Dashed', value: 'dashed'},\r\n                          {label: 'Dotted', value: 'dotted'},\r\n                        ],\r\n                        attributes: {\r\n                          style:\r\n                            'display:grid; width: 100%; margin-bottom:1rem',\r\n                        },\r\n                      },\r\n                    },\r\n                    {\r\n                      key: 'cap',\r\n                      type: 'select',\r\n                      templateOptions: {\r\n                        label: 'Cap',\r\n                        options: [\r\n                          {label: 'butt', value: 'butt'},\r\n                          {label: 'round', value: 'round'},\r\n                          {label: 'square', value: 'square'},\r\n                        ],\r\n                        attributes: {\r\n                          style:\r\n                            'display:grid; width: 100%; margin-bottom:1rem',\r\n                        },\r\n                      },\r\n                    },\r\n                    {\r\n                      key: 'join',\r\n                      type: 'select',\r\n                      templateOptions: {\r\n                        label: 'Join',\r\n                        options: [\r\n                          {label: 'bevel', value: 'bevel'},\r\n                          {label: 'round', value: 'round'},\r\n                          {label: 'miter', value: 'miter'},\r\n                        ],\r\n                        attributes: {\r\n                          style:\r\n                            'display:grid; width: 100%; margin-bottom:1rem',\r\n                        },\r\n                      },\r\n                    },\r\n                  ],\r\n                },\r\n              ],\r\n            },\r\n            {\r\n              key: 'itemStyle',\r\n              type: 'accordion',\r\n              templateOptions: {\r\n                label: 'Item Style',\r\n              },\r\n              fieldGroup: [\r\n                {\r\n                  key: 'color',\r\n                  type: 'input',\r\n                  templateOptions: {\r\n                    label: 'Color',\r\n                    placeHhlder: '#fff',\r\n                    attributes: {\r\n                      style: 'display:grid; width: 100%; margin-bottom:1rem',\r\n                    },\r\n                  },\r\n                },\r\n                {\r\n                  key: 'borderColor',\r\n                  type: 'input',\r\n                  templateOptions: {\r\n                    label: 'Border Color',\r\n                    placeholder: '#fff',\r\n                    attributes: {\r\n                      style: 'display:grid; width: 100%; margin-bottom:1rem',\r\n                    },\r\n                  },\r\n                },\r\n                {\r\n                  key: 'borderWidth',\r\n                  type: 'input',\r\n                  templateOptions: {\r\n                    label: 'Border Width',\r\n                    placeHolder: '',\r\n                    attributes: {\r\n                      style: 'display:grid; width: 100%; margin-bottom:1rem',\r\n                    },\r\n                  },\r\n                },\r\n                {\r\n                  key: 'borderType',\r\n                  type: 'select',\r\n                  templateOptions: {\r\n                    label: 'Border Type',\r\n                    options: [\r\n                      {label: 'Solid', value: 'solid'},\r\n                      {label: 'Dashed', value: 'dashed'},\r\n                      {label: 'Dotted', value: 'dotted'},\r\n                    ],\r\n                    attributes: {\r\n                      style: 'display:grid; width: 100%; margin-bottom:1rem',\r\n                    },\r\n                  },\r\n                },\r\n                {\r\n                  key: 'borderRadius',\r\n                  type: 'input',\r\n                  templateOptions: {\r\n                    label: 'Border Radius',\r\n                    placeholder: '',\r\n                    attributes: {\r\n                      style: 'display:grid; width: 100%; margin-bottom:1rem',\r\n                    },\r\n                  },\r\n                },\r\n                {\r\n                  key: 'opacity',\r\n                  type: 'input',\r\n                  templateOptions: {\r\n                    label: 'Opacity',\r\n                    placeholder: '',\r\n                    attributes: {\r\n                      style: 'display:grid; width: 100%; margin-bottom:1rem',\r\n                    },\r\n                  },\r\n                },\r\n              ],\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          key: 'select',\r\n          type: 'accordion',\r\n          templateOptions: {\r\n            label: 'Select',\r\n          },\r\n          fieldGroup: [\r\n            {\r\n              key: 'disabled',\r\n              type: 'radio',\r\n              templateOptions: {\r\n                label: 'Disabled',\r\n                options: [\r\n                  {label: 'True', value: true},\r\n                  {label: 'False', value: false},\r\n                ],\r\n                attributes: {\r\n                  style: 'display:grid; width: 100%; margin-bottom:1rem',\r\n                },\r\n              },\r\n            },\r\n            {\r\n              key: 'label',\r\n              type: 'accordion',\r\n              templateOptions: {\r\n                label: 'Label',\r\n              },\r\n              fieldGroup: [\r\n                {\r\n                  key: 'show',\r\n                  type: 'radio',\r\n                  templateOptions: {\r\n                    label: 'Show Label',\r\n                    options: [\r\n                      {label: 'True', value: true},\r\n                      {label: 'False', value: false},\r\n                    ],\r\n                    attributes: {\r\n                      style: 'display:grid; width: 100%; margin-bottom:1rem',\r\n                    },\r\n                  },\r\n                },\r\n                {\r\n                  key: 'formatter',\r\n                  type: 'input',\r\n                  templateOptions: {\r\n                    label: 'formatter',\r\n                    placeholder: '{ }',\r\n                    attributes: {\r\n                      style: 'display:grid; width: 100%; margin-bottom:1rem',\r\n                    },\r\n                  },\r\n                },\r\n                {\r\n                  key: 'color',\r\n                  type: 'input',\r\n                  templateOptions: {\r\n                    label: 'Color',\r\n                    placeholder: '#fff',\r\n                    attributes: {\r\n                      style: 'display:grid; width: 100%; margin-bottom:1rem',\r\n                    },\r\n                  },\r\n                },\r\n                {\r\n                  key: 'fontStyle',\r\n                  type: 'select',\r\n                  templateOptions: {\r\n                    label: 'Font Style',\r\n                    options: [\r\n                      {label: 'normal', value: 'normal'},\r\n                      {label: 'italic', value: 'italic'},\r\n                      {label: 'oblique', value: 'oblique'},\r\n                    ],\r\n                    attributes: {\r\n                      style: 'display:grid; width: 100%; margin-bottom:1rem',\r\n                    },\r\n                  },\r\n                },\r\n                {\r\n                  key: 'fontWeight',\r\n                  type: 'select',\r\n                  templateOptions: {\r\n                    label: 'Font Weight',\r\n                    options: [\r\n                      {label: 'normal', value: 'normal'},\r\n                      {label: 'bold', value: 'bold'},\r\n                      {label: 'lighter', value: 'lighter'},\r\n                    ],\r\n                    attributes: {\r\n                      style: 'display:grid; width: 100%; margin-bottom:1rem',\r\n                    },\r\n                  },\r\n                },\r\n                {\r\n                  key: 'fontSize',\r\n                  type: 'input',\r\n                  templateOptions: {\r\n                    label: 'Font Size',\r\n                    attributes: {\r\n                      style: 'display:grid; width: 100%; margin-bottom:1rem',\r\n                    },\r\n                  },\r\n                },\r\n                {\r\n                  key: 'align',\r\n                  type: 'select',\r\n                  templateOptions: {\r\n                    label: 'Align',\r\n                    options: [\r\n                      {label: 'left', value: 'left'},\r\n                      {label: 'center', value: 'center'},\r\n                      {label: 'right', value: 'right'},\r\n                    ],\r\n                    attributes: {\r\n                      style: 'display:grid; width: 100%; margin-bottom:1rem',\r\n                    },\r\n                  },\r\n                },\r\n                {\r\n                  key: 'verticalAlign',\r\n                  type: 'select',\r\n                  templateOptions: {\r\n                    label: 'Vertical Align',\r\n                    options: [\r\n                      {label: 'top', value: 'top'},\r\n                      {label: 'middle', value: 'middle'},\r\n                      {label: 'bottom', value: 'bottom'},\r\n                    ],\r\n                    attributes: {\r\n                      style: 'display:grid; width: 100%; margin-bottom:1rem',\r\n                    },\r\n                  },\r\n                },\r\n                {\r\n                  key: 'backgroundColor',\r\n                  type: 'input',\r\n                  templateOptions: {\r\n                    label: 'Background Color',\r\n                    placeholder: '#fff',\r\n                    attributes: {\r\n                      style: 'display:grid; width: 100%; margin-bottom:1rem',\r\n                    },\r\n                  },\r\n                },\r\n                {\r\n                  key: 'borderColor',\r\n                  type: 'input',\r\n                  templateOptions: {\r\n                    label: 'Border Color',\r\n                    placeholder: '#fff',\r\n                    attributes: {\r\n                      style: 'display:grid; width: 100%; margin-bottom:1rem',\r\n                    },\r\n                  },\r\n                },\r\n                {\r\n                  key: 'borderWidth',\r\n                  type: 'input',\r\n                  templateOptions: {\r\n                    label: 'Border Width',\r\n                    placeholder: '',\r\n                    attributes: {\r\n                      style: 'display:grid; width: 100%; margin-bottom:1rem',\r\n                    },\r\n                  },\r\n                },\r\n                {\r\n                  key: 'borderType',\r\n                  type: 'select',\r\n                  templateOptions: {\r\n                    label: 'Border Type',\r\n                    options: [\r\n                      {label: 'Solid', value: 'solid'},\r\n                      {label: 'Dashed', value: 'dashed'},\r\n                      {label: 'Dotted', value: 'dotted'},\r\n                    ],\r\n                    attributes: {\r\n                      style: 'display:grid; width: 100%; margin-bottom:1rem',\r\n                    },\r\n                  },\r\n                },\r\n                {\r\n                  key: 'borderRadius',\r\n                  type: 'input',\r\n                  templateOptions: {\r\n                    label: 'Border Radius',\r\n                    placeholder: '',\r\n                    attributes: {\r\n                      style: 'display:grid; width: 100%; margin-bottom:1rem',\r\n                    },\r\n                  },\r\n                },\r\n                {\r\n                  key: 'padding',\r\n                  type: 'input',\r\n                  templateOptions: {\r\n                    label: 'Padding',\r\n                    placeholder: '',\r\n                    attributes: {\r\n                      style: 'display:grid; width: 100%; margin-bottom:1rem',\r\n                    },\r\n                  },\r\n                },\r\n                {\r\n                  key: 'overFlow',\r\n                  type: 'select',\r\n                  templateOptions: {\r\n                    label: 'OverFlow',\r\n                    options: [\r\n                      {label: 'Truncate', value: 'truncate'},\r\n                      {label: 'Break', value: 'break'},\r\n                      {label: 'BreakAll', value: 'breakAll'},\r\n                    ],\r\n                    attributes: {\r\n                      style: 'display:grid; width: 100%; margin-bottom:1rem',\r\n                    },\r\n                  },\r\n                },\r\n                {\r\n                  key: 'position',\r\n                  type: 'select',\r\n                  templateOptions: {\r\n                    label: 'Label Position',\r\n                    placeholder: '',\r\n                    options: [\r\n                      {label: 'top', value: 'top'},\r\n                      {label: 'left', value: 'left'},\r\n                      {label: 'right', value: 'right'},\r\n                      {label: 'bottom', value: 'bottom'},\r\n                      {label: 'inside', value: 'inside'},\r\n                      {label: 'insideLeft', value: 'insideLeft'},\r\n                      {label: 'insideRight', value: 'insideRight'},\r\n                      {label: 'insideTop', value: 'insideTop'},\r\n                      {label: 'insideBottom', value: 'insideBottom'},\r\n                      {label: 'insideTopLeft', value: 'insideTopLeft'},\r\n                      {label: 'insideBottomLeft', value: 'insideBottomLeft'},\r\n                      {label: 'insideTopRight', value: 'insideTopRight'},\r\n                      {\r\n                        label: 'insideBottomRight',\r\n                        value: 'insideBottomRight',\r\n                      },\r\n                    ],\r\n                    attributes: {\r\n                      style: 'display:grid; width: 100%; margin-bottom:1rem',\r\n                    },\r\n                  },\r\n                },\r\n              ],\r\n            },\r\n            {\r\n              key: 'labelLine',\r\n              type: 'accordion',\r\n              templateOptions: {\r\n                label: 'Label Line',\r\n              },\r\n              fieldGroup: [\r\n                {\r\n                  key: 'show',\r\n                  type: 'radio',\r\n                  templateOptions: {\r\n                    label: 'Show Label',\r\n                    options: [\r\n                      {label: 'True', value: true},\r\n                      {label: 'False', value: false},\r\n                    ],\r\n                    attributes: {\r\n                      style: 'display:grid; width: 100%; margin-bottom:1rem',\r\n                    },\r\n                  },\r\n                },\r\n                {\r\n                  key: 'lineStyle',\r\n                  type: 'accordion',\r\n                  templateOptions: {\r\n                    label: 'Line Style',\r\n                  },\r\n                  fieldGroup: [\r\n                    {\r\n                      key: 'color',\r\n                      type: 'input',\r\n                      templateOptions: {\r\n                        label: 'Color',\r\n                        placeholder: '#fff',\r\n                        attributes: {\r\n                          style:\r\n                            'display:grid; width: 100%; margin-bottom:1rem',\r\n                        },\r\n                      },\r\n                    },\r\n                    {\r\n                      key: 'width',\r\n                      type: 'input',\r\n                      templateOptions: {\r\n                        label: 'Width',\r\n                        placeholder: '',\r\n                        attributes: {\r\n                          style:\r\n                            'display:grid; width: 100%; margin-bottom:1rem',\r\n                        },\r\n                      },\r\n                    },\r\n                    {\r\n                      key: 'type',\r\n                      type: 'select',\r\n                      templateOptions: {\r\n                        label: 'Type',\r\n                        options: [\r\n                          {label: 'Solid', value: 'solid'},\r\n                          {label: 'Dashed', value: 'dashed'},\r\n                          {label: 'Dotted', value: 'dotted'},\r\n                        ],\r\n                        attributes: {\r\n                          style:\r\n                            'display:grid; width: 100%; margin-bottom:1rem',\r\n                        },\r\n                      },\r\n                    },\r\n                    {\r\n                      key: 'cap',\r\n                      type: 'select',\r\n                      templateOptions: {\r\n                        label: 'Cap',\r\n                        options: [\r\n                          {label: 'butt', value: 'butt'},\r\n                          {label: 'round', value: 'round'},\r\n                          {label: 'square', value: 'square'},\r\n                        ],\r\n                        attributes: {\r\n                          style:\r\n                            'display:grid; width: 100%; margin-bottom:1rem',\r\n                        },\r\n                      },\r\n                    },\r\n                    {\r\n                      key: 'join',\r\n                      type: 'select',\r\n                      templateOptions: {\r\n                        label: 'Join',\r\n                        options: [\r\n                          {label: 'bevel', value: 'bevel'},\r\n                          {label: 'round', value: 'round'},\r\n                          {label: 'miter', value: 'miter'},\r\n                        ],\r\n                        attributes: {\r\n                          style:\r\n                            'display:grid; width: 100%; margin-bottom:1rem',\r\n                        },\r\n                      },\r\n                    },\r\n                  ],\r\n                },\r\n              ],\r\n            },\r\n            {\r\n              key: 'itemStyle',\r\n              type: 'accordion',\r\n              templateOptions: {\r\n                label: 'Item Style',\r\n              },\r\n              fieldGroup: [\r\n                {\r\n                  key: 'color',\r\n                  type: 'input',\r\n                  templateOptions: {\r\n                    label: 'Color',\r\n                    placeHhlder: '#fff',\r\n                    attributes: {\r\n                      style: 'display:grid; width: 100%; margin-bottom:1rem',\r\n                    },\r\n                  },\r\n                },\r\n                {\r\n                  key: 'borderColor',\r\n                  type: 'input',\r\n                  templateOptions: {\r\n                    label: 'Border Color',\r\n                    placeholder: '#fff',\r\n                    attributes: {\r\n                      style: 'display:grid; width: 100%; margin-bottom:1rem',\r\n                    },\r\n                  },\r\n                },\r\n                {\r\n                  key: 'borderWidth',\r\n                  type: 'input',\r\n                  templateOptions: {\r\n                    label: 'Border Width',\r\n                    placeHolder: '',\r\n                    attributes: {\r\n                      style: 'display:grid; width: 100%; margin-bottom:1rem',\r\n                    },\r\n                  },\r\n                },\r\n                {\r\n                  key: 'borderType',\r\n                  type: 'select',\r\n                  templateOptions: {\r\n                    label: 'Border Type',\r\n                    options: [\r\n                      {label: 'Solid', value: 'solid'},\r\n                      {label: 'Dashed', value: 'dashed'},\r\n                      {label: 'Dotted', value: 'dotted'},\r\n                    ],\r\n                    attributes: {\r\n                      style: 'display:grid; width: 100%; margin-bottom:1rem',\r\n                    },\r\n                  },\r\n                },\r\n                {\r\n                  key: 'borderRadius',\r\n                  type: 'input',\r\n                  templateOptions: {\r\n                    label: 'Border Radius',\r\n                    placeholder: '',\r\n                    attributes: {\r\n                      style: 'display:grid; width: 100%; margin-bottom:1rem',\r\n                    },\r\n                  },\r\n                },\r\n                {\r\n                  key: 'opacity',\r\n                  type: 'input',\r\n                  templateOptions: {\r\n                    label: 'Opacity',\r\n                    placeholder: '',\r\n                    attributes: {\r\n                      style: 'display:grid; width: 100%; margin-bottom:1rem',\r\n                    },\r\n                  },\r\n                },\r\n              ],\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          key: 'encode',\r\n          type: 'accordion',\r\n          templateOptions: {\r\n            label: 'Encode',\r\n          },\r\n          fieldGroup: [\r\n            {\r\n              key: 'x',\r\n              type: 'series-encode',\r\n              templateOptions: {\r\n                label: 'Encode X',\r\n                placeholder: '',\r\n                attributes: {\r\n                  style: 'display:grid; width: 100%; margin-bottom:1rem',\r\n                },\r\n              },\r\n            },\r\n            {\r\n              key: 'y',\r\n              type: 'series-encode',\r\n              templateOptions: {\r\n                label: 'Encode Y',\r\n                placeholder: '',\r\n                attributes: {\r\n                  style: 'display:grid; width: 100%; margin-bottom:1rem',\r\n                },\r\n              },\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n  },\r\n];\r\n","import {Component, OnDestroy, AfterViewInit, ElementRef, ChangeDetectionStrategy} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {NgxEchartsDirective, provideEchartsCore} from 'ngx-echarts';\r\n// Import echarts using ES module import\r\nimport * as echarts from 'echarts';\r\nimport { BaseWidgetComponent } from '../base-widget/base-widget.component';\r\nimport { EventBusService } from '../../services/event-bus.service';\r\nimport { fromEvent, Subject } from 'rxjs';\r\nimport { debounceTime, takeUntil } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'vis-echart',\r\n  standalone: true,\r\n  template: `<div\r\n    echarts\r\n    [options]=\"chartOptions\"\r\n    (chartInit)=\"onChartInit($event)\"\r\n    (chartClick)=\"onClick($event)\"\r\n    (chartDblClick)=\"onChartDblClick($event)\"\r\n    [initOpts]=\"initOpts\"\r\n    class=\"echart-container\"\r\n  ></div>`,\r\n  styles: [`\r\n    .echart-container {\r\n      width: 100%;\r\n      height: 100%;\r\n    }\r\n  `],\r\n  imports: [CommonModule, NgxEchartsDirective],\r\n  providers: [provideEchartsCore({ echarts })],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class EchartComponent extends BaseWidgetComponent implements AfterViewInit, OnDestroy {\r\n  isSingleClick: boolean = true;\r\n  private resizeSubject = new Subject<void>();\r\n  private resizeObserver: ResizeObserver | null = null;\r\n\r\n  initOpts: any = {\r\n    height: 300,\r\n    rowHeightRatio: 0.25,\r\n    fixedRowHeight: 30,\r\n    width: 'auto',\r\n    locale: 'en',\r\n    renderer: 'canvas' // Use canvas renderer for better performance\r\n  };\r\n\r\n  constructor(\r\n    protected override eventBus: EventBusService,\r\n    private elementRef: ElementRef\r\n  ) {\r\n    super(eventBus);\r\n  }\r\n\r\n  /**\r\n   * Gets the chart options with dataset API if available\r\n   */\r\n  get chartOptions(): echarts.EChartsOption {\r\n    const options = (this.widget?.config?.options || {}) as echarts.EChartsOption;\r\n\r\n    // Convert to dataset API if possible\r\n    if (options.series && Array.isArray(options.series) && !options.dataset) {\r\n      this.convertToDatasetAPI(options);\r\n    }\r\n\r\n    return options;\r\n  }\r\n\r\n  /**\r\n   * Converts standard ECharts options to use the dataset API for better performance\r\n   * \r\n   * @param options - The ECharts options to convert\r\n   */\r\n  private convertToDatasetAPI(options: echarts.EChartsOption): void {\r\n    // Only convert if we have series data\r\n    if (!options.series || !Array.isArray(options.series) || options.series.length === 0) {\r\n      return;\r\n    }\r\n\r\n    // Check if the first series has data\r\n    const firstSeries = options.series[0] as any;\r\n    if (!firstSeries.data || !Array.isArray(firstSeries.data)) {\r\n      return;\r\n    }\r\n\r\n    // Create dataset from the first series data\r\n    options.dataset = {\r\n      source: firstSeries.data\r\n    };\r\n\r\n    // Update series to use the dataset\r\n    options.series = options.series.map((series: any) => {\r\n      const newSeries = { ...series };\r\n      delete newSeries.data;\r\n      return newSeries;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Lifecycle hook that is called after the component's view has been initialized\r\n   */\r\n  ngAfterViewInit(): void {\r\n    // Set up resize handling\r\n    this.setupResizeHandling();\r\n\r\n    // Set up window resize listener\r\n    fromEvent(window, 'resize')\r\n      .pipe(\r\n        debounceTime(200),\r\n        takeUntil(this.destroy$)\r\n      )\r\n      .subscribe(() => {\r\n        this.resizeChart();\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Lifecycle hook that is called when the component is destroyed\r\n   */\r\n  override ngOnDestroy(): void {\r\n    // Clean up resize observer\r\n    if (this.resizeObserver) {\r\n      this.resizeObserver.disconnect();\r\n      this.resizeObserver = null;\r\n    }\r\n\r\n    // Clean up resize subject\r\n    this.resizeSubject.complete();\r\n\r\n    // Call parent ngOnDestroy\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  /**\r\n   * Sets up resize handling for the chart\r\n   */\r\n  private setupResizeHandling(): void {\r\n    // Use ResizeObserver if available\r\n    if (typeof ResizeObserver !== 'undefined') {\r\n      this.resizeObserver = new ResizeObserver(entries => {\r\n        this.resizeSubject.next();\r\n      });\r\n\r\n      const container = this.elementRef.nativeElement.querySelector('.echart-container');\r\n      if (container) {\r\n        this.resizeObserver.observe(container);\r\n      }\r\n\r\n      // Debounce resize events\r\n      this.resizeSubject\r\n        .pipe(\r\n          debounceTime(100),\r\n          takeUntil(this.destroy$)\r\n        )\r\n        .subscribe(() => {\r\n          this.resizeChart();\r\n        });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Resizes the chart to fit its container\r\n   */\r\n  private resizeChart(): void {\r\n    if (this.widget?.chartInstance) {\r\n      this.widget.chartInstance.resize();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Initializes the chart instance\r\n   * \r\n   * @param instance - The ECharts instance\r\n   */\r\n  onChartInit(instance: any) {\r\n    if (this.widget && instance) {\r\n      this.widget.chartInstance = instance as echarts.ECharts;\r\n\r\n      // Set chart theme and renderer options\r\n      instance.setOption({\r\n        backgroundColor: 'transparent',\r\n        textStyle: {\r\n          fontFamily: 'Arial, sans-serif'\r\n        }\r\n      }, false, false);\r\n\r\n      // Load data after a short delay to ensure the chart is ready\r\n      setTimeout(() => {\r\n        this.loadData();\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handles double-click events on the chart\r\n   * \r\n   * @param e - The double-click event\r\n   */\r\n  onChartDblClick(e: any): void {\r\n    this.isSingleClick = false;\r\n  }\r\n\r\n  /**\r\n   * Handles click events on the chart\r\n   * \r\n   * @param e - The click event\r\n   */\r\n  onClick(e: any) {\r\n    this.isSingleClick = true;\r\n    setTimeout(() => {\r\n      if (!this.isSingleClick) return; // Ignore if it was part of a double-click\r\n\r\n      let selectedPoint = e.data;\r\n      if(e.seriesType === \"scatter\" && Array.isArray(e.data) && this.widget.config.state?.accessor) {\r\n        const scatterChartData = e.data.find(this.widget.config.state.accessor);\r\n        if (scatterChartData) {\r\n          selectedPoint = {\r\n            ...selectedPoint,\r\n            ...scatterChartData as object\r\n          };\r\n        }\r\n      }\r\n\r\n      // Use the base class method to update the filter\r\n      this.updateFilter(selectedPoint);\r\n    }, 250);\r\n  }\r\n\r\n  /**\r\n   * Called when the widget is updated\r\n   * Reloads data if necessary\r\n   */\r\n  protected override onWidgetUpdated(): void {\r\n    // Reload data when the widget is updated\r\n    this.loadData();\r\n\r\n    // Resize the chart to ensure it fits properly\r\n    setTimeout(() => {\r\n      this.resizeChart();\r\n    }, 0);\r\n  }\r\n\r\n  /**\r\n   * Called when filters are updated\r\n   * Reloads data if the widget supports filtering\r\n   * \r\n   * @param filterData - The updated filter data\r\n   */\r\n  protected override onFilterUpdated(filterData: any): void {\r\n    // Only reload data if this widget supports filtering\r\n    if (this.widget.config.state?.supportsFiltering !== false) {\r\n      this.loadData();\r\n    }\r\n  }\r\n}\r\n","@if (filterValues && filterValues.length > 0) {\r\n  <div class=\"filter-component\">\r\n    <span class=\"ml-1 mr-1\">Applied Filter(s):</span>\r\n\r\n    <span>\r\n      @for (item of filterValues; track item) {\r\n        <button class=\"btn-wide mt-1 mb-1 mr-1 btn btn-outline-primary btn-sm chip\"\r\n                (click)=\"clearFilter(item)\">\r\n              {{ item.accessor | uppercase }} = {{ item[item.accessor] | uppercase }}\r\n          <i class=\"pi pi-times-circle close-icon\"></i>\r\n          </button>\r\n      }\r\n    </span>\r\n    \r\n    <button class=\"btn-wide ml-2 mt-1 mb-1 mr-1 btn-outline-warning btn-sm chip\" \r\n      (click)=\"clearAllFilters(true)\">\r\n      Clear All\r\n    </button>\r\n    \r\n    <!-- <button class=\"btn-wide ml-1 mt-1 mb-1 mr-1 btn btn-outline-warning btn-sm chip\"\r\n            (click)=\"chartOptions.callBackFunc(filters)\">\r\n      Add Annotation\r\n    </button>\r\n\r\n    <button class=\"btn-wide ml-1 mt-1 mb-1 mr-1 btn btn-outline-warning btn-sm chip\"\r\n            (click)=\"chartOptions.onClickViewOdata(filters)\">\r\n      View Data\r\n    </button> -->\r\n    \r\n  </div>\r\n} @else {\r\n  <div class=\"filter-component pt-2 pb-1\">\r\n    Please click on any chart element to slice and dice data. You can use annotations to save a specific state of\r\n    dashboard after applying filters.\r\n  </div>\r\n}\r\n","import {Component, EventEmitter, Input, OnInit} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {IWidget} from '../../entities/IWidget';\r\nimport {IFilterValues} from '../../entities/IFilterValues';\r\nimport {IFilterOptions} from '../../entities/IFilterOptions';\r\n\r\n/**\r\n * Component for displaying and managing filter values\r\n */\r\n@Component({\r\n  selector: 'vis-filters',\r\n  templateUrl: './filter.component.html',\r\n  styleUrls: ['./filter.component.css'],\r\n  standalone: true,\r\n  imports: [CommonModule],\r\n})\r\nexport class FilterComponent implements OnInit {\r\n  /** The widget configuration */\r\n  @Input() widget!: IWidget;\r\n\r\n  /** Event emitter for filter updates */\r\n  @Input() onUpdateFilter!: EventEmitter<any>;\r\n\r\n  /** Internal storage for filter values to prevent infinite loops */\r\n  private _filterValues: IFilterValues[] = [];\r\n\r\n  /**\r\n   * Initializes the component\r\n   */\r\n  ngOnInit(): void {\r\n    // Initialize filter values from widget config\r\n    const filters = this.widget.config.options as IFilterOptions;\r\n    if (filters && filters.values && filters.values.length > 0) {\r\n      this._filterValues = [...filters.values as IFilterValues[]];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Gets the current filter values\r\n   * @returns Array of filter values\r\n   */\r\n  get filterValues(): IFilterValues[] {\r\n    return this._filterValues;\r\n  }\r\n\r\n  /**\r\n   * Sets the filter values and updates the widget configuration\r\n   * @param values - The new filter values\r\n   */\r\n  set filterValues(values: IFilterValues[]) {\r\n    if (values && values.length > 0) {\r\n      this._filterValues = [...values];\r\n      (this.widget.config.options as IFilterOptions).values = [...this._filterValues];\r\n    } else {\r\n      this._filterValues = [];\r\n      (this.widget.config.options as IFilterOptions).values = [];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Clears all filter values\r\n   * \r\n   * @param item - The item that triggered the clear action\r\n   */\r\n  clearAllFilters(item: any) {\r\n    if (item) {\r\n      this._filterValues = [];\r\n      (this.widget.config.options as IFilterOptions).values = [];\r\n      this.onUpdateFilter.emit([]);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Clears a specific filter value\r\n   * \r\n   * @param item - The filter value to clear\r\n   */\r\n  clearFilter(item: any) {\r\n    if (JSON.stringify(item).length > 0) {\r\n      const index = this._filterValues.indexOf(item);\r\n      if (index !== -1) {\r\n        this._filterValues.splice(index, 1);\r\n        (this.widget.config.options as IFilterOptions).values = [...this._filterValues];\r\n        this.onUpdateFilter.emit([...this._filterValues]);\r\n      }\r\n    }\r\n  }\r\n}\r\n","import {Component, Input} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {IWidget} from '../../entities/IWidget';\r\n\r\n@Component({\r\n  selector: 'vis-table',\r\n  templateUrl: './table.component.html',\r\n  styleUrls: ['./table.component.css'],\r\n  standalone: true,\r\n  imports: [CommonModule],\r\n})\r\nexport class TableComponent {\r\n  @Input() widget!: IWidget;\r\n}\r\n","import {Component, Input} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {IWidget} from '../../entities/IWidget';\r\n\r\n@Component({\r\n  selector: 'vis-tile',\r\n  templateUrl: './tile.component.html',\r\n  styleUrls: ['./tile.component.css'],\r\n  standalone: true,\r\n  imports: [CommonModule],\r\n})\r\nexport class TileComponent {\r\n  @Input() widget!: IWidget;\r\n}\r\n","import {Component, Input} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {IWidget} from '../../entities/IWidget';\r\n\r\n@Component({\r\n  selector: 'vis-markdown-cell',\r\n  templateUrl: './markdown-cell.component.html',\r\n  styleUrls: ['./markdown-cell.component.css'],\r\n  standalone: true,\r\n  imports: [CommonModule],\r\n})\r\nexport class MarkdownCellComponent {\r\n  @Input() widget!: IWidget;\r\n}\r\n","import {Component, Input} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {IWidget} from '../../entities/IWidget';\r\n\r\n@Component({\r\n  selector: 'vis-code-cell',\r\n  templateUrl: './code-cell.component.html',\r\n  styleUrls: ['./code-cell.component.css'],\r\n  standalone: true,\r\n  imports: [CommonModule],\r\n})\r\nexport class CodeCellComponent {\r\n  @Input() widget!: IWidget;\r\n}\r\n","/*\r\n * Public API Surface of dashboards\r\n */\r\n\r\n// Components\r\nexport * from './lib/widgets/widget/widget-builder';\r\nexport * from './lib/dashboard-container/dashboard-container.component';\r\nexport * from './lib/widget-header/widget-header.component';\r\nexport * from './lib/widget-config/widget-config.component';\r\nexport * from './lib/widgets/base-widget/base-widget.component';\r\n\r\n// Services\r\nexport * from './lib/services/calculation.service';\r\nexport * from './lib/services/filter.service';\r\nexport * from './lib/services/widget-plugin.service';\r\nexport * from './lib/services/event-bus.service';\r\n\r\n// Config\r\nexport * from './lib/formly-configs/form-options';\r\nexport * from './lib/formly-configs/series-options';\r\n\r\n// Entities\r\nexport * from './lib/entities/ICodeCellOptions';\r\nexport * from './lib/entities/IFilterOptions';\r\nexport * from './lib/entities/IFilterValues';\r\nexport * from './lib/entities/IMarkdownCellOptions';\r\nexport * from './lib/entities/IState';\r\nexport * from './lib/entities/ITableOptions';\r\nexport * from './lib/entities/ITileOptions';\r\nexport * from './lib/entities/IWidget';\r\nexport * from './lib/entities/IWidgetPlugin';\r\n\r\n// Widgets\r\nexport * from './lib/widgets/echarts/echart.component';\r\nexport * from './lib/widgets/filter/filter.component';\r\nexport * from './lib/widgets/table/table.component';\r\nexport * from './lib/widgets/tile/tile.component';\r\nexport * from './lib/widgets/markdown-cell/markdown-cell.component';\r\nexport * from './lib/widgets/code-cell/code-cell.component';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["_c0","i1.WidgetPluginService","i2.EventBusService","i1","i2","i1.CalculationService","i2.FilterService","i3.EventBusService","i4.WidgetDataCacheService","i5.VirtualScrollService","i1.EventBusService"],"mappings":"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"}