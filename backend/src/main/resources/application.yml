server:
  port: 8080

spring:
  application:
    name: moneyplant-trading-backend
  
  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      group-id: trading-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "*"
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      acks: all
      retries: 3

  datasource:
    url: jdbc:postgresql://localhost:5432/trading_db
    username: trading_user
    password: trading_password
    driver-class-name: org.postgresql.Driver

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true

# Spark Configuration
spark:
  app:
    name: trading-spark-app
  master: local[*]
  driver:
    memory: 2g
  executor:
    memory: 2g
  sql:
    adaptive:
      enabled: true
      coalescePartitions:
        enabled: true

# Trino Configuration
trino:
  url: jdbc:trino://localhost:8080
  user: admin
  catalog: hive
  schema: default

# Hudi Configuration
hudi:
  base:
    path: /tmp/hudi
  table:
    name: market_data
  record:
    key:
      field: timestamp
  partition:
    path:
      field: date

# Iceberg Configuration
iceberg:
  warehouse:
    path: /tmp/iceberg
  table:
    name: market_data
  format:
    version: 2
  write:
    delete:
      enabled: true

# Logging Configuration
logging:
  level:
    com.moneyplant.trading: INFO
    org.apache.kafka: WARN
    org.apache.spark: WARN
    org.apache.hudi: INFO
    org.apache.iceberg: INFO
    io.trino: INFO
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

# Management endpoints
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: always 