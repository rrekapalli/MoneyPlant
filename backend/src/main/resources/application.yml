spring:
  datasource:
    url: jdbc:postgresql://${DB_HOST:postgres.tailce422e.ts.net}:${DB_PORT:5432}/${DB_NAME:MoneyPlant}
    username: ${DB_USERNAME:postgres}
    password: ${DB_PASSWORD:}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 10
      minimum-idle: 5
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        jdbc:
          batch_size: 20
        order_inserts: true
        order_updates: true
        batch_versioned_data: true

  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID:}
            client-secret: ${GOOGLE_CLIENT_SECRET:}
            authorization-grant-type: authorization_code
            scope:
              - email
              - profile
            redirect-uri: "http://localhost:8080/login/oauth2/code/google"
            client-authentication-method: client_secret_post
            client-name: Google
          microsoft:
            client-id: ${MICROSOFT_CLIENT_ID:}
            client-secret: ${MICROSOFT_CLIENT_SECRET:}
            authorization-grant-type: authorization_code
            scope:
              - openid
              - profile
              - email
            redirect-uri: "http://localhost:8080/login/oauth2/code/microsoft"
            client-authentication-method: client_secret_basic
            client-name: Microsoft

        provider:
          google:
            authorization-uri: https://accounts.google.com/o/oauth2/auth
            token-uri: https://oauth2.googleapis.com/token
            user-info-uri: https://www.googleapis.com/oauth2/v3/userinfo
            user-name-attribute: sub
          microsoft:
            authorization-uri: https://login.microsoftonline.com/common/oauth2/v2.0/authorize
            token-uri: https://login.microsoftonline.com/common/oauth2/v2.0/token
            user-info-uri: https://graph.microsoft.com/oidc/userinfo
            user-name-attribute: sub
            jwk-set-uri: https://login.microsoftonline.com/common/discovery/v2.0/keys
  web:
    resources:
      cache:
        period: 0
      chain:
        cache: false

server:
  host: 0.0.0.0
  port: 8080

logging:
  level:
    root: info
    com.moneyplant: debug
    org.springframework.security: debug

# JWT Configuration
jwt:
  secret: ${JWT_SECRET:}
  expiration: 32400000  # 9 hours in milliseconds
  refresh-expiration: 604800000  # 7 days in milliseconds

# CORS Configuration
cors:
  allowed-origins: ${CORS_ALLOWED_ORIGINS:http://localhost:4200,https://your-frontend-domain.com}
  allowed-methods: GET,POST,PUT,DELETE,OPTIONS
  allowed-headers: "*"
  allow-credentials: true
  max-age: 3600

# OpenAPI Configuration
springdoc:
  swagger-ui:
    path: /swagger-ui.html
  api-docs:
    path: /v1/api-docs
openapi:
  service:
    title: MoneyPlant API
    description: REST API Documentation for MoneyPlant Application
    version: 1.0.0

# Management Endpoints
management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always
  health:
    db:
      enabled: true
    diskspace:
      enabled: true
    livenessstate:
      enabled: true
    readinessstate:
      enabled: true
    rabbit:
      enabled: false

# Apache Trino Configuration
trino:
  url: ${TRINO_URL:jdbc:trino://trino.tailce422e.ts.net:8080}
  catalog: ${TRINO_CATALOG:}
  schema: ${TRINO_SCHEMA:}
  user: ${TRINO_USER:'trino'}
  password: ${TRINO_PASSWORD:''}
  ssl:
    enabled: ${TRINO_SSL_ENABLED:false}
  postgres:
    host: ${TRINO_PG_HOST:postgres.tailce422e.ts.net}
    port: ${TRINO_PG_PORT:5432}
    database: ${TRINO_PG_DATABASE:MoneyPlant}
    user: ${TRINO_PG_USER:postgres}
    password: ${TRINO_PG_PASSWORD:} 