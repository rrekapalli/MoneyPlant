import{A as rt,B as ct,E as lt,G as dt,I as ht,M as gt,O as ut,R as pt,U as mt,X as ft,Y as bt,a as it,aa as Ct,ba as kt,ca as St,da as Dt,ia as yt,la as wt,oa as Tt,qa as xt,ra as vt,x as ot,y as nt,z as st}from"./chunk-GZZ7RVNA.js";import{a as K,b as Q,c as Ut,d as Et}from"./chunk-EYRVMGKT.js";import{A as v,c as at,d as Ft,e as Vt,l as E,r as f,s as It,t as Wt,u as Mt,v as Ot,w as Nt,x as Pt,y as b,z as At}from"./chunk-AQB7DBB2.js";import"./chunk-DMPMDD2A.js";import"./chunk-ESE62B67.js";import{a as Rt}from"./chunk-66GBNY6X.js";import{a as _t}from"./chunk-2EE42365.js";import"./chunk-SOYPA3PZ.js";import{b as tt,c as et}from"./chunk-XIRLSLUI.js";import{b as Ht}from"./chunk-33664Z76.js";import"./chunk-5QDLLTGU.js";import"./chunk-NBMXCGLL.js";import"./chunk-ZIWCRGVR.js";import"./chunk-4EIXSAPM.js";import"./chunk-E2A6ZCMF.js";import"./chunk-YETWNNB4.js";import{Ba as X}from"./chunk-IDZOVNAK.js";import"./chunk-6DF6NXBA.js";import"./chunk-RSWLFW5Q.js";import{i as Z}from"./chunk-AR7LHXST.js";import{Da as N,Ia as S,Jb as J,Oa as z,Ra as $,Uc as q,Wb as G,ca as D,da as y,jb as P,kb as A,lb as _,sc as j,tb as Y,vb as U,y as B}from"./chunk-53IN4TFO.js";import{a as C,b as V,g as w}from"./chunk-GAL4ENT6.js";function R(){let l={values:[]};return new at().setId("filter-widget").setComponent("filter").setPosition({x:0,y:1,cols:12,rows:1}).setFilterOptions(l).build()}function I(l,d){let k=d||[];l.config?.options&&(l.config.options.values=k)}function W(l){l.config?.options&&(l.config.options.values=[])}var zt=!1,Lt=l=>{try{l?.config?.options?l.config=V(C({},l.config),{options:C({},l.config.options)}):l?.config&&(l.config=C({},l.config)),l?.data&&(l.data=C({},l.data))}catch{}},$t=(l,d,k)=>w(null,null,function*(){if(!d||k?.connected===!0)return null;try{let t=yield d.getPreviousDayIndexData(l).toPromise();if(t&&t.indices&&t.indices.length>0)return t.indices[0]}catch(t){zt&&console.warn(`Failed to get fallback data for index ${l}:`,t)}return null}),M=l=>{try{return l?l.toString().toLowerCase().replace(/[^a-z0-9]/g,""):""}catch{return""}};function H(l){let{indexName:d,initialPrice:k=0,initialPercent:t=0,initialHigh:e=0,initialLow:a=0,currency:o="\u20B9",webSocketService:i,indicesService:n,matchToName:s}=l,r=s||d,c=v.createStockTile(k,t,d,e,a,o).setPosition({x:0,y:0,cols:2,rows:2}).build(),h=()=>{try{i.subscribeToIndex(r).subscribe({next:g=>{if(g&&(g.indexName||g.indexSymbol)){let u=g.indexSymbol||g.indexName||"";if((M(u)!==""&&M(r)!==""?M(u)===M(r):!1)&&c?.config?.options){let m=g.lastPrice||0,F=g.percentChange||0,T=g.variation||0,O=g.dayHigh||0,Bt=g.dayLow||0,x=c.config.options;x.value=Number(m).toLocaleString(),x.change=`${T>=0?"+":""}${Number(T).toFixed(2)}`,x.changeType=F>=0?"positive":"negative",x.highValue=Number(O).toLocaleString(),x.lowValue=Number(Bt).toLocaleString(),x.description=g.indexName||g.indexSymbol||d,Lt(c)}}},error:()=>{}})}catch{}};if(i)if(i.connected===!0)h();else{n&&$t(d,n,i).then(g=>{if(g&&c?.config?.options){let u=g.lastPrice||g.last||0,p=c.config.options;p.value=Number(u).toLocaleString(),p.change="Historical Data",p.changeType="neutral",p.highValue=Number(g.dayHigh||g.high||0).toLocaleString(),p.lowValue=Number(g.dayLow||g.low||0).toLocaleString(),Lt(c)}}).catch(()=>{});try{i.connectionState?.subscribe?.(g=>{g===K.CONNECTED&&h()})}catch{}}return c}function L(l,d,k,t){if(!l)return Yt(d,k,t);let e=l.length||0,a=l.filter(u=>(u.percentChange||0)<0).length,o=l.filter(u=>(u.percentChange||0)>0).length,i=l.filter(u=>(u.percentChange||0)===0).length,n=l.reduce((u,p)=>{let m=p.totalTradedValue||0;return isNaN(m)||!isFinite(m)?u:u+m},0)||0,s=l.reduce((u,p)=>{let m=p.totalTradedVolume||0;return isNaN(m)||!isFinite(m)?u:u+m},0)||0,r=isNaN(n)||!isFinite(n)?0:n,c=isNaN(s)||!isFinite(s)?0:s,h=[];if(d&&(d.indexName||d.index)&&(d.lastPrice!==void 0||d.last!==void 0)&&(d.lastPrice!==null||d.last!==null)&&(d.lastPrice!==0||d.last!==0)){let u=d.indexName||d.index||"Index",p=d.lastPrice||d.last||0,m=d.percentChange||0,F=d.dayHigh||d.high||0,T=d.dayLow||d.low||0;h.push(H({indexName:u,initialPrice:p,initialPercent:m,initialHigh:F,initialLow:T,currency:"",webSocketService:k,indicesService:t,matchToName:d.index||d.indexName||u}))}else h.push(H({indexName:"NIFTY 50",initialPrice:0,initialPercent:0,initialHigh:0,initialLow:0,currency:"\u20B9",webSocketService:k,indicesService:t,matchToName:"NIFTY 50"}));return h.push(b.createInfoTile("Declines",a.toString(),"Declining Stocks","fas fa-arrow-down","#dc2626").setBackgroundColor("#fecaca").setBorder("#f87171",1,8).setUpdateOnDataChange(!0).setPosition({x:2,y:0,cols:2,rows:2}).build(),b.createInfoTile("Advances",o.toString(),"Advancing Stocks","fas fa-arrow-up","#16a34a").setBackgroundColor("#bbf7d0").setBorder("#4ade80",1,8).setUpdateOnDataChange(!0).setPosition({x:4,y:0,cols:2,rows:2}).build(),b.createInfoTile("Unchanged",i.toString(),"Unchanged Stocks","fas fa-minus","#6b7280").setBackgroundColor("#e5e7eb").setBorder("#9ca3af",1,8).setUpdateOnDataChange(!0).setPosition({x:6,y:0,cols:2,rows:2}).build(),b.createFinancialTile(r,0,"Traded Value","\u20B9","fas fa-rupee-sign").setColor("#047857").setBackgroundColor("#a7f3d0").setBorder("#5eead4",1,8).setUpdateOnDataChange(!0).setPosition({x:8,y:0,cols:2,rows:2}).build(),b.createInfoTile("Traded Volume",c.toLocaleString(),"Total Volume","fas fa-chart-bar","#7c3aed").setBackgroundColor("#ddd6fe").setBorder("#a78bfa",1,8).setUpdateOnDataChange(!0).setPosition({x:10,y:0,cols:2,rows:2}).build()),h}function Yt(l,d,k){return[H({indexName:"NIFTY 50",initialPrice:0,initialPercent:0,initialHigh:0,initialLow:0,currency:"\u20B9",webSocketService:d,indicesService:k,matchToName:"NIFTY 50"}),b.createInfoTile("Declines","0","Declining Stocks","fas fa-arrow-down","#6b7280").setBackgroundColor("#f3f4f6").setBorder("#d1d5db",1,8).setUpdateOnDataChange(!0).setPosition({x:2,y:0,cols:2,rows:2}).build(),b.createInfoTile("Advances","0","Advancing Stocks","fas fa-arrow-up","#6b7280").setBackgroundColor("#f3f4f6").setBorder("#d1d5db",1,8).setUpdateOnDataChange(!0).setPosition({x:4,y:0,cols:2,rows:2}).build(),b.createInfoTile("Unchanged","0","Unchanged Stocks","fas fa-minus","#6b7280").setBackgroundColor("#f3f4f6").setBorder("#d1d5db",1,8).setUpdateOnDataChange(!0).setPosition({x:6,y:0,cols:2,rows:2}).build(),b.createFinancialTile(0,0,"Traded Value","\u20B9","fas fa-rupee-sign").setColor("#6b7280").setBackgroundColor("#f3f4f6").setBorder("#d1d5db",1,8).setUpdateOnDataChange(!0).setPosition({x:8,y:0,cols:2,rows:2}).build(),b.createInfoTile("Traded Volume","0","Total Volume","fas fa-chart-bar","#6b7280").setBackgroundColor("#f3f4f6").setBorder("#d1d5db",1,8).setUpdateOnDataChange(!0).setPosition({x:10,y:0,cols:2,rows:2}).build()]}var Jt=()=>({height:"100%",width:"100%","overflow-x":"hidden",overflow:"auto"});it([Dt,kt,ft,vt,xt,yt,Tt,bt,wt,St,Ct,st,nt,rt,ct,ht,pt,lt,dt,mt,gt,ut,ot]);import("./chunk-A4EIW3BP.js").then(l=>{E.registerMap("world",l.default||l)}).catch(l=>{});var Oe=(()=>{let d=class d extends Nt{constructor(t,e,a,o,i,n,s,r,c){super(t,e,a),this.componentCommunicationService=o,this.stockTicksService=i,this.stockService=n,this.indicesService=s,this.webSocketService=r,this.route=c,this.dashboardData=[],this.initialDashboardData=[],this.filteredDashboardData=[],this.appliedFilters=[],this.dashboardTitle="Stock Insights Dashboard",this.selectedStockSubscription=null,this.chartUpdateTimer=null,this.isRecreatingChart=!1,this.isUpdatingChart=!1,this.stockWebSocketSubscription=null,this.webSocketConnectionStateSubscription=null,this.currentSelectedStockData=null,this.selectedStockSymbol=null,this.historicalData=[],this.isWebSocketConnected=!1,this.currentSubscribedStock=null,this.isSubscribing=!1,this.subscribedTopics=new Set,this.allStocks=[],this.selectedTimeRange="1Y",this.enableDebugLogging=!1,this.lastPrevDayFetchStock=null}ngOnInit(){try{console.log("StockInsightsComponent ngOnInit called"),this.route.paramMap.subscribe(t=>{let e=t.get("symbol");e?(console.log("Stock symbol from route:",e),this.selectedStockSymbol=e,this.dashboardConfig?.widgets&&this.dashboardConfig.widgets.length>0&&(console.log("Dashboard already initialized, switching to new stock:",e),this.switchToStock(e))):console.log("No stock symbol in route, will load default")}),super.ngOnInit?.(),console.log("StockInsightsComponent ngOnInit completed")}catch(t){console.error("Error in StockInsightsComponent ngOnInit:",t)}}onChildInit(){try{console.log("StockInsightsComponent onChildInit called"),import("./chunk-A4EIW3BP.js").then(t=>{E.registerMap("world",t.default||t)}).catch(()=>{}),this.initializeWebSocket(),this.monitorWebSocketConnectionState(),this.selectedStockSubscription&&(this.selectedStockSubscription.unsubscribe(),this.selectedStockSubscription=null),this.appliedFilters=[],this.dashboardTitle="Stock Insights Dashboard",console.log("\u{1F525} Skipping sample data generation - will use real API data"),this.selectedStockSymbol?(console.log("\u{1F525} Loading stock from route parameter:",this.selectedStockSymbol),console.log("\u{1F525} Dashboard config exists:",!!this.dashboardConfig),console.log("\u{1F525} Dashboard widgets count:",this.dashboardConfig?.widgets?.length||0),this.loadStockDataForRoute(this.selectedStockSymbol)):(console.log("\u{1F525} No stock symbol from route, loading default stock"),this.loadDefaultStockData()),setTimeout(()=>{this.currentSelectedStockData?.symbol||(console.log("\u{1F525} No current stock data, loading default stock as fallback"),this.loadDefaultStockData())},100),this.loadAllStocksForSearch(),window.handleTimeRangeFilterClick=t=>{console.log("Global time range filter clicked:",t),this.onTimeRangeChange(t)},console.log("StockInsightsComponent onChildInit completed")}catch(t){console.error("Error in StockInsightsComponent onChildInit:",t)}}onChildDestroy(){this.chartUpdateTimer&&(clearTimeout(this.chartUpdateTimer),this.chartUpdateTimer=null),this.selectedStockSubscription&&(this.selectedStockSubscription.unsubscribe(),this.selectedStockSubscription=null),this.stockWebSocketSubscription&&(this.stockWebSocketSubscription.unsubscribe(),this.stockWebSocketSubscription=null),this.webSocketConnectionStateSubscription&&(this.webSocketConnectionStateSubscription.unsubscribe(),this.webSocketConnectionStateSubscription=null),this.webSocketService.disconnect(),this.dashboardData=[],this.filteredDashboardData=null,this.appliedFilters=[],this.currentSelectedStockData=null,this.historicalData=[],this.isWebSocketConnected=!1,this.currentSubscribedStock=null,this.isSubscribing=!1,this.subscribedTopics.clear()}loadDefaultStockData(){this.dashboardTitle="Stock Insights Dashboard - INFY (Infosys)";let t="INFY";console.log("\u{1F525} Loading default stock data for:",t),this.dashboardData=[],this.filteredDashboardData=[],this.historicalData=[],this.appliedFilters=[],this.currentSelectedStockData={symbol:t,lastPrice:0,priceChange:0,percentChange:0},this.dashboardTitle=`${t} - Stock Insights Dashboard`,console.log("\u{1F525} Skipping sample data generation for default stock - will use real API data"),this.loadStockTicksData(t),this.loadHistoricalData(t),console.log("\u{1F525} Default stock data loading initiated for:",t)}generateSampleHistoricalData(t){console.log("\u{1F525} Generating sample historical data for:",t);let e=[],a=1500,o=new Date;for(let i=29;i>=0;i--){let n=new Date(o);n.setDate(n.getDate()-i);let s=a+(Math.random()-.5)*100,r=s+(Math.random()-.5)*50,c=Math.max(s,r)+Math.random()*20,h=Math.min(s,r)-Math.random()*20,g=Math.floor(Math.random()*1e6)+5e5;e.push({date:n.toISOString().split("T")[0],open:Number(s.toFixed(2)),close:Number(r.toFixed(2)),high:Number(c.toFixed(2)),low:Number(h.toFixed(2)),volume:g,symbol:t})}this.historicalData=e,console.log("\u{1F525} Generated sample data:",e.length,"records"),console.log("\u{1F525} Sample data preview:",e.slice(0,3)),setTimeout(()=>{this.updateCandlestickChartWithRetry()},200)}loadStockTicksData(t){if(t&&t.trim()){let e="NIFTY 50";console.log(`Loading stock ticks data for index: ${e} (stock symbol: ${t})`),this.stockTicksService.getStockTicksByIndex(e).subscribe({next:a=>{this.dashboardData=a||[],this.appliedFilters=[],this.filteredDashboardData=this.dashboardData,this.updateMetricTilesWithFilters([]),this.populateWidgetsWithInitialData(),this.updateAllChartsWithFilteredData(),this.cdr.detectChanges()},error:a=>{console.warn("Failed to load stock ticks data for index:",e,":",a),this.dashboardData=[],this.filteredDashboardData=[],this.appliedFilters=[],this.updateMetricTilesWithFilters([]),this.updateAllChartsWithFilteredData(),this.cdr.detectChanges()}})}}loadHistoricalData(t){if(t&&t.trim()){console.log(`\u{1F504} loadHistoricalData called for stock: ${t}`);let e=new Date,o=new Date(e.getFullYear()-1,e.getMonth(),e.getDate()).toISOString().split("T")[0],i=e.toISOString().split("T")[0];console.log(`Loading historical data for ${t} from ${o} to ${i}`),this.stockService.getStockHistory(t,o,i).subscribe({next:n=>{console.log("\u{1F4CA} Historical data loaded:",n?.length||0,"records"),console.log("\u{1F4CA} Sample historical data:",n?.slice(0,3)),console.log("\u{1F4CA} Current selected stock:",this.currentSelectedStockData?.symbol),console.log("\u{1F4CA} API Response for stock:",t),console.log("\u{1F4CA} Data price range:",n?.length>0?{min:Math.min(...n.map(s=>s.low)),max:Math.max(...n.map(s=>s.high)),firstClose:n[0]?.close,lastClose:n[n.length-1]?.close}:"No data"),this.historicalData=n||[],console.log("\u{1F4CA} Updated this.historicalData length:",this.historicalData.length),console.log("\u{1F525} Calling simple chart update from loadHistoricalData"),this.simpleChartUpdate(),this.cdr.detectChanges(),setTimeout(()=>{console.log("\u{1F525} Delayed chart update from loadHistoricalData"),this.updateCandlestickChartWithRetry(),this.cdr.detectChanges()},500)},error:n=>{console.warn("\u274C Failed to load historical data for",t,":",n),this.historicalData=[],console.log("\u{1F525} Calling updateCandlestickChartWithRetry from loadHistoricalData error"),this.updateCandlestickChartWithRetry(),this.cdr.detectChanges()}})}}clearAllWidgetsData(){if(!this.dashboardConfig?.widgets)return;this.dashboardConfig.widgets.filter(e=>e.config?.component==="echart").forEach(e=>{this.updateEchartWidget(e,[])})}unsubscribeFromCurrentWebSocketTopic(){if(this.stockWebSocketSubscription&&(this.stockWebSocketSubscription.unsubscribe(),this.stockWebSocketSubscription=null),this.currentSubscribedStock){let e=`/topic/nse-stocks/${this.currentSubscribedStock.replace(/\s+/g,"-").toLowerCase()}`;this.subscribedTopics.delete(e)}this.currentSubscribedStock=null,this.isSubscribing=!1}updateDashboardWithSelectedStock(t){this.unsubscribeFromCurrentWebSocketTopic(),this.dashboardTitle=t.name||t.symbol||"Stock Insights Dashboard";let e=this.componentCommunicationService.transformToDashboardData(t);this.dashboardData=this.dashboardData.filter(i=>i.symbol!==e.symbol),this.dashboardData=[e,...this.dashboardData],this.currentSelectedStockData={symbol:t.symbol,lastPrice:t.lastPrice||0,variation:t.variation||0,percentChange:t.percentChange||0};let a=t.symbol;this.loadStockTicksData(a);let o=t.name||t.symbol;o&&(this.loadHistoricalData(o),this.subscribeToStockWebSocket(o).catch(i=>{console.error("Failed to subscribe to WebSocket:",i)})),this.forceMetricTilesRefresh(),o&&(this.lastPrevDayFetchStock=null,this.maybeFetchPreviousDay(o)),this.populateWidgetsWithInitialData(),this.cdr.detectChanges()}forceMetricTilesRefresh(){if(this.dashboardConfig?.widgets){this.dashboardConfig.widgets.filter(a=>a.config?.component==="tile"||a.config?.component==="stock-tile").forEach(a=>{let o=this.dashboardConfig.widgets.indexOf(a);o>-1&&this.dashboardConfig.widgets.splice(o,1)});let e=this.createMetricTiles(this.filteredDashboardData||this.dashboardData);this.dashboardConfig.widgets.unshift(...e)}this.updateMetricTilesWithFilters([]),this.cdr.detectChanges(),setTimeout(()=>{this.updateMetricTilesWithFilters([]),this.cdr.detectChanges()},100)}fetchAndUpdateCurrentStockData(){if(!this.currentSelectedStockData?.symbol)return;let t=this.currentSelectedStockData.symbol;console.log(`Previous-day data fetch not implemented for stock: ${t}`),this.updateMetricTilesWithFilters([]),this.cdr.detectChanges()}maybeFetchPreviousDay(t){t&&!this.isWebSocketConnected&&this.lastPrevDayFetchStock!==t&&(this.lastPrevDayFetchStock=t,this.fetchAndUpdateCurrentStockData())}createMetricTiles(t){return L(this.filteredDashboardData||this.dashboardData,this.currentSelectedStockData,this.webSocketService,this.indicesService)}updateMetricTilesWithFilters(t){if(!this.dashboardConfig?.widgets||this.dashboardConfig.widgets.length===0)return;let e=(this.dashboardConfig?.widgets||[]).filter(o=>o?.config?.component==="tile"||o?.config?.component==="stock-tile");if(!e.length)return;let a=this.createMetricTiles(this.filteredDashboardData||this.dashboardData);e.forEach((o,i)=>{if(i<a.length){let n=a[i];if(o?.config?.options?.updateOnDataChange!==!1){let c=n?.config?.options;if(o?.config?.component==="stock-tile"){let h={value:c?.value??"",change:c?.change??"",changeType:c?.changeType??"neutral",description:c?.description??"",icon:c?.icon??"",color:c?.color??"",backgroundColor:c?.backgroundColor??"",highValue:c?.highValue??"",lowValue:c?.lowValue??"",currency:c?.currency??"\u20B9"};v.updateData(o,h)}else{let h={value:c?.value??"",change:c?.change??"",changeType:c?.changeType??"neutral",description:c?.description??"",icon:c?.icon??"",color:c?.color??"",backgroundColor:c?.backgroundColor??"",title:c?.title??"",subtitle:c?.subtitle??c?.customData?.subtitle??""};b.updateData(o,h)}}}}),setTimeout(()=>{this.cdr?.detectChanges?.()},50)}initializeDashboardConfig(){try{console.log("StockInsightsComponent initializeDashboardConfig called"),console.log("\u{1F525} Historical data length during init:",this.historicalData.length),console.log("\u{1F525} Current selected stock:",this.currentSelectedStockData?.symbol),console.log("\u{1F525} Creating candlestick chart with data length:",this.historicalData.length);let t=f.create().setData([]).setHeader("Stock Historical Price Movement with Volume").setId("candlestick-chart").setEvents((i,n)=>{console.log("\u{1F525} Chart events setup - chart instance:",!!n),n&&(i.chartInstance=n,console.log("\u{1F525} Chart instance attached to widget"),i.componentRef=this,console.log("\u{1F525} Chart initialized, waiting for real data to load"))}).build();t&&t.timeRangeFilters&&(console.log("Time range filters added to candlestick chart:",t.timeRangeFilters),console.log("Time range filters ranges:",t.timeRangeFilters.ranges),console.log("Selected time range:",t.timeRangeFilters.selectedRange),console.log("1Y in ranges:",t.timeRangeFilters.ranges.includes("1Y"))),console.log("\u{1F525} Candlestick chart created successfully"),console.log("\u{1F525} Chart widget ID:",t.id),console.log("\u{1F525} Chart widget config:",t.config),console.log("\u{1F525} Chart widget options:",t.config?.options),console.log("\u{1F525} Chart widget component:",t.config?.component),console.log("\u{1F525} Filtered dashboard data:",this.filteredDashboardData?.length||0,"items");let e=At.create().setData([]).setStockPerformanceConfiguration().setHeader("Stock List").setCurrencyFormatter("INR","en-IN").setPredefinedPalette("finance").setAccessor("symbol").setFilterColumn("symbol",Vt.Value).setId("stock-list-widget").build();console.log("Stock list widget created successfully");let a=R(),o=this.createMetricTiles([]);a.position={x:0,y:2,cols:12,rows:1},t.position={x:0,y:3,cols:8,rows:12},e.position={x:8,y:3,cols:4,rows:16},this.dashboardConfig=Wt.createStandard().setDashboardId("overall-dashboard").enableFilterHighlighting(!0,{filteredOpacity:.25,highlightedOpacity:1,highlightColor:"#ff6b6b",filteredColor:"#e0e0e0"}).setWidgets([...o,a,t,e]).setEditMode(!1).build(),console.log("Dashboard config created successfully"),this.populateWidgetsWithInitialData(),this.historicalData.length>0&&(console.log("\u{1F525} Historical data available during init, updating candlestick chart"),setTimeout(()=>{this.updateCandlestickChartWithRetry()},500)),console.log("StockInsightsComponent initializeDashboardConfig completed")}catch(t){console.error("Error initializing dashboard config:",t)}}onDataLoad(t){return w(this,null,function*(){if(console.log("\u{1F525} onDataLoad called for widget:",t.id,t.config?.header?.title),console.log("\u{1F525} Widget component type:",t.config?.component),console.log("\u{1F525} Widget chart instance:",!!t.chartInstance),console.log("\u{1F525} Current selected stock:",this.currentSelectedStockData?.symbol),t.id==="candlestick-chart"){if(console.log("\u{1F525} Candlestick chart widget loaded"),console.log("\u{1F525} Historical data length:",this.historicalData.length),console.log("\u{1F525} Chart instance available:",!!t.chartInstance),console.log("\u{1F525} Chart instance type:",typeof t.chartInstance),t.chartInstance&&console.log("\u{1F525} Chart instance methods:",Object.getOwnPropertyNames(t.chartInstance)),t.chartInstance&&this.historicalData.length>0){console.log("\u{1F525} Direct chart update from onDataLoad - chart instance available"),console.log("\u{1F525} Historical data sample:",this.historicalData.slice(0,2));try{f.updateData(t,this.historicalData),console.log("\u2705 Direct chart update successful");return}catch(e){console.error("\u274C Direct chart update failed:",e)}}if(!t.chartInstance&&this.historicalData.length>0){console.log("\u{1F525} No chart instance on widget, trying to find it...");let e=this.findChartInstanceViaNgxEcharts(t)||this.findChartInstanceInDOM(t);if(e){console.log("\u2705 Found chart instance, attaching to widget"),t.chartInstance=e;try{f.updateData(t,this.historicalData),console.log("\u2705 Chart update successful after finding instance");return}catch(a){console.error("\u274C Chart update failed after finding instance:",a)}}}setTimeout(()=>{console.log("\u{1F525} Calling updateCandlestickChartWithRetry from onDataLoad"),this.updateCandlestickChartWithRetry()},100)}})}populateWidgetsWithInitialData(){if(!this.dashboardConfig?.widgets)return;console.log("\u{1F525} populateWidgetsWithInitialData called"),console.log("\u{1F525} Historical data length:",this.historicalData.length),console.log("\u{1F525} Dashboard data length:",this.dashboardData.length),this.dashboardConfig.widgets.filter(a=>a.config?.component==="echart").forEach(a=>{let o=a.config?.header?.title,i=null;o&&(i=this.getFilteredDataForWidget(o)),i||(i=this.getSummarizedDataByWidget(o)),i&&(o==="Stock Historical Price Movement with Volume"?(console.log("\u{1F525} Populating candlestick chart with historical data:",this.historicalData.length,"records"),setTimeout(()=>{this.updateCandlestickChartWithRetry()},200)):this.updateEchartWidget(a,i)),o==="Stock Historical Price Movement with Volume"&&setTimeout(()=>{this.addLineSeriesToCandlestickChart()},500)}),this.dashboardConfig.widgets.filter(a=>a.config?.component==="stock-list-table").forEach(a=>{let o=this.filteredDashboardData||this.dashboardData;o&&o.length>0?a.data?(a.data.stocks=o,a.data.isLoadingStocks=!1):a.data={stocks:o,isLoadingStocks:!1}:a.data?(a.data.stocks=[],a.data.isLoadingStocks=!1):a.data={stocks:[],isLoadingStocks:!1}}),this.updateMetricTilesWithFilters([]),this.triggerImmediateFallbackDataFetch(),setTimeout(()=>{this.cdr.detectChanges()},100)}triggerImmediateFallbackDataFetch(){if(!this.currentSelectedStockData||!this.currentSelectedStockData.lastPrice||this.currentSelectedStockData.lastPrice===0){if(this.isWebSocketConnected)return;let t=this.currentSelectedStockData?.symbol||"NIFTY 50";if(this.lastPrevDayFetchStock===t)return;try{if(typeof navigator<"u"&&"onLine"in navigator&&navigator.onLine===!1){this.enableDebugLogging&&console.warn("Offline detected, skipping previous-day fetch");return}}catch{}this.lastPrevDayFetchStock=t,console.log(`Previous-day data fetch not implemented for stock: ${t}`),this.updateMetricTilesWithFilters([]),this.cdr.detectChanges()}}loadAllStocksForSearch(){this.stockService.getAllStocks().subscribe({next:t=>{this.allStocks=t||[],this.cdr.detectChanges()},error:()=>{this.allStocks=[]}})}getSummarizedDataByWidget(t){let e=this.dashboardConfig.widgets.find(o=>o.config?.header?.title===t);if(!e||!e.config?.options?.series?.[0])return null;switch(t){case"Portfolio Distribution":return this.groupByAndSum(this.filteredDashboardData||this.dashboardData,"industry","totalTradedValue");case"Stock Historical Price Movement with Volume":if(this.historicalData.length>0)return console.log("\u{1F4CA} getSummarizedDataByWidget: Using historical data:",this.historicalData.length,"records"),this.historicalData;{console.log("\u{1F4CA} getSummarizedDataByWidget: No historical data, using fallback");let o=this.filteredDashboardData||this.dashboardData;if(!o||o.length===0)return console.warn("\u26A0\uFE0F No stock data available for fallback"),[];let i=o.map(n=>({date:n.lastUpdateTime?new Date(n.lastUpdateTime).toISOString().split("T")[0]:n.symbol||"Unknown",open:n.openPrice||0,close:n.lastPrice||0,low:n.dayLow||0,high:n.dayHigh||0,volume:n.totalTradedVolume||0,symbol:n.symbol||"Unknown"}));return console.log("\u{1F4CA} getSummarizedDataByWidget: Transformed stock data:",i.length,"records"),i}default:return null}}getFilteredDataForWidget(t,e){let a=e||this.filteredDashboardData||this.dashboardData;switch(t){case"Portfolio Distribution":if(!a)return[];let o=a.reduce((i,n)=>{let s=n.macro||"Unknown Macro",r=n.industry||"Unknown Industry",c=n.sector||"Unknown Sector",h=n.totalTradedValue||0;return i[s]||(i[s]={}),i[s][r]||(i[s][r]={}),i[s][r][c]||(i[s][r][c]=0),i[s][r][c]+=h,i},{});return Object.entries(o).map(([i,n])=>{let s=Object.entries(n).map(([c,h])=>{let g=Object.entries(h).map(([p,m])=>({name:p,value:m})),u=g.reduce((p,m)=>p+m.value,0);return{name:c,value:u,children:g}}),r=s.reduce((c,h)=>c+h.value,0);return{name:i,value:r,children:s}}).sort((i,n)=>n.value-i.value);case"Stock Historical Price Movement with Volume":if(this.historicalData.length>0)return console.log("\u{1F4CA} Using historical data for candlestick chart:",this.historicalData.length,"records"),this.historicalData;{if(console.log("\u{1F4CA} No historical data, using fallback stock data"),!a)return console.warn("\u26A0\uFE0F No source data available for fallback"),[];let i=a.map(n=>({date:n.lastUpdateTime?new Date(n.lastUpdateTime).toISOString().split("T")[0]:n.symbol||"Unknown",open:n.openPrice||0,close:n.lastPrice||0,low:n.dayLow||0,high:n.dayHigh||0,volume:n.totalTradedVolume||0,symbol:n.symbol||"Unknown"}));return console.log("\u{1F4CA} Transformed stock data:",i.length,"records"),i}default:return null}}applyEnhancedFilters(t){if(!this.dashboardConfig?.widgets)return;let e=this.dashboardData;if(t&&t.length>0){let a=t.map(o=>({property:o.filterColumn||"industry",operator:"equals",value:o.value}));e=Ft.applyFilters(e,a)}this.filteredDashboardData=e,this.updateAllChartsWithFilteredData(),setTimeout(()=>this.cdr.detectChanges(),100)}createStockTicksTreemapData(t){if(!t||t.length===0)return[];let e=new Map;return t.forEach(a=>{let o=a.macro||"Other";e.has(o)||e.set(o,[]),e.get(o).push(a)}),Array.from(e.entries()).map(([a,o])=>{let i=new Map;o.forEach(r=>{let c=r.industry||"Other";i.has(c)||i.set(c,[]),i.get(c).push(r)});let n=Array.from(i.entries()).map(([r,c])=>{let h=new Map;c.forEach(p=>{let m=p.sector||"Other";h.has(m)||h.set(m,[]),h.get(m).push(p)});let g=Array.from(h.entries()).map(([p,m])=>{let F=m.reduce((T,O)=>T+(O.lastPrice||0),0);return{name:p,value:F}}),u=g.reduce((p,m)=>p+m.value,0);return{name:r,value:u,children:g}}),s=n.reduce((r,c)=>r+c.value,0);return{name:a,value:s,children:n}})}applyFilters(){if(!this.dashboardData||this.dashboardData.length===0){this.filteredDashboardData=[],this.updateAllChartsWithFilteredData();return}if(this.appliedFilters.length===0){this.filteredDashboardData=[...this.dashboardData],this.updateAllChartsWithFilteredData();return}let t=[...this.dashboardData];for(let e of this.appliedFilters)t=this.applyIndividualFilter(t,e);this.filteredDashboardData=t,this.updateAllChartsWithFilteredData()}applyIndividualFilter(t,e){let a=e.operator||"equals";return t.filter(o=>{let i=o[e.field];switch(a){case"equals":return i===e.value;case"contains":return i&&i.toString().toLowerCase().includes(e.value.toString().toLowerCase());case"greaterThan":return i>e.value;case"lessThan":return i<e.value;default:return i===e.value}})}convertFilterCriteriaToIFilterValues(t){let e=typeof t.value=="number"?t.value.toString():t.value,o=`${this.getFieldDisplayName(t.field)}: '${t.value}'`,i=0;return typeof t.value=="string"&&(i=this.getAggregatedValueForCategory(t.field,t.value)),{accessor:t.field,filterColumn:t.field,category:e,value:e,numericValue:i.toString(),percentage:i.toString(),[t.field]:e,displayValue:o,source:t.source||"Unknown"}}getAggregatedValueForCategory(t,e){return!this.dashboardData||this.dashboardData.length===0?0:this.dashboardData.filter(a=>a[t]===e).reduce((a,o)=>a+(o.totalTradedValue||0),0)}getFieldDisplayName(t){switch(t){case"industry":return"Industry";case"sector":return"Sector";case"macro":return"Macro";case"symbol":return"Symbol";default:return t.charAt(0).toUpperCase()+t.slice(1)}}getFilterWidget(){return this.dashboardConfig?.widgets?.find(t=>t.id==="filter-widget"||t.config?.component==="filter")}updateFilterWidget(){let t=this.getFilterWidget();if(t){let e=this.appliedFilters.map(a=>this.convertFilterCriteriaToIFilterValues(a));I(t,e),this.cdr.detectChanges()}}addFilter(t){this.appliedFilters.some(a=>a.type===t.type&&a.field===t.field&&a.value===t.value)?this.appliedFilters=this.appliedFilters.filter(a=>!(a.type===t.type&&a.field===t.field&&a.value===t.value)):this.appliedFilters=this.appliedFilters.filter(a=>!(a.type===t.type&&a.field===t.field)),this.appliedFilters.push(t),this.applyFilters(),this.updateFilterWidget()}removeFilter(t,e){this.appliedFilters=this.appliedFilters.filter(a=>!(a.type===t&&a.field===e)),this.applyFilters(),this.updateFilterWidget()}clearAllFilters(){this.appliedFilters=[],this.filteredDashboardData=[...this.dashboardData||[]],this.applyFilters(),this.updateAllChartsWithFilteredData();let t=this.getFilterWidget();t&&W(t),this.cdr.detectChanges(),setTimeout(()=>{this.cdr.markForCheck(),this.cdr.detectChanges()},50),super.clearAllFilters()}onFilterValuesChanged(t){if(!t||t.length===0){this.appliedFilters=[],this.filteredDashboardData=[...this.dashboardData||[]],this.updateAllChartsWithFilteredData();let i=this.getFilterWidget();i&&W(i),this.cdr.detectChanges();return}let e=t.map(i=>i.category&&typeof i.category=="string"&&typeof i.value=="number"&&!isNaN(i.value)?V(C({},i),{value:i.category,category:i.category,numericValue:i.value}):i),a=this.getFilterWidget();a&&I(a,e);let o=[];e.forEach(i=>{let n=i.category||i.value;i.filterColumn==="sector"&&n&&typeof n=="string"&&isNaN(Number(n))?o.push({type:"sector",field:"sector",value:n,operator:"equals",source:"Filter Widget"}):i.filterColumn==="industry"&&n&&typeof n=="string"&&isNaN(Number(n))?o.push({type:"industry",field:"industry",value:n,operator:"equals",source:"Filter Widget"}):i.filterColumn==="symbol"&&n&&typeof n=="string"&&isNaN(Number(n))&&o.push({type:"symbol",field:"symbol",value:n,operator:"equals",source:"Filter Widget"})}),this.appliedFilters=o,this.applyFilters()}updateAllChartsWithFilteredData(){this.filteredDashboardData&&(this.chartUpdateTimer&&clearTimeout(this.chartUpdateTimer),this.chartUpdateTimer=setTimeout(()=>{this.historicalData.length>0?this.updateCandlestickChartWithRetry():this.updateCandlestickChartWithFilteredData(),this.updateStockListWithFilteredData(),this.updateMetricTilesWithFilters([]),this.cdr.detectChanges(),this.chartUpdateTimer=null},150))}filterChartsByMacro(t){!this.dashboardData||this.dashboardData.length===0||this.addFilter({type:"macro",field:"macro",value:t,operator:"equals",source:"Treemap Chart"})}filterChartsBySymbol(t){!this.dashboardData||this.dashboardData.length===0||typeof t!="string"||!isNaN(Number(t))||![...new Set(this.dashboardData.map(a=>a.symbol))].includes(t)||this.addFilter({type:"symbol",field:"symbol",value:t,operator:"equals",source:"Candlestick Chart"})}updateCandlestickChartWithRetry(){if(this.isUpdatingChart){console.log("\u{1F504} Chart update already in progress, skipping...");return}this.isUpdatingChart=!0;let t=3,e=0,a=200,o=()=>{if(console.log(`\u{1F504} Attempting candlestick chart update (attempt ${e+1}/${t})`),console.log(`\u{1F525} Current selected stock: ${this.currentSelectedStockData?.symbol}`),console.log(`\u{1F525} Historical data length: ${this.historicalData.length}`),!this.dashboardConfig?.widgets){console.warn("\u274C No dashboard config widgets found"),this.isUpdatingChart=!1;return}let i=this.dashboardConfig.widgets.findIndex(r=>r.config?.header?.title==="Stock Historical Price Movement with Volume"),n=i>=0?this.dashboardConfig.widgets[i]:null;if(!n){console.warn("\u26A0\uFE0F Candlestick widget not found"),e<t-1?(e++,setTimeout(o,a*e)):this.isUpdatingChart=!1;return}console.log("\u{1F4CA} Historical data length:",this.historicalData.length),console.log("\u{1F525} Chart instance available:",!!n.chartInstance),console.log("\u{1F525} Widget ID:",n.id),console.log("\u{1F525} Widget config:",n.config);let s=n.chartInstance;if(s||(console.log("\u{1F504} Chart instance not on widget, searching in DOM..."),s=this.findChartInstanceInDOM(n),s&&(console.log("\u2705 Found chart instance in DOM, attaching to widget"),n.chartInstance=s)),s||(console.log("\u{1F504} Chart instance not found, trying ngx-echarts directive..."),s=this.findChartInstanceViaNgxEcharts(n),s&&(console.log("\u2705 Found chart instance via ngx-echarts, attaching to widget"),n.chartInstance=s)),s&&typeof s.setOption=="function"&&typeof s.getOption=="function"){console.log("\u2705 Chart instance ready, updating data"),console.log("\u{1F525} Historical data sample:",this.historicalData.slice(0,2)),console.log("\u{1F525} Chart instance type:",typeof s),console.log("\u{1F525} Chart instance methods:",Object.getOwnPropertyNames(s));try{console.log("\u{1F525} About to update chart with data:",{length:this.historicalData.length,stock:this.currentSelectedStockData?.symbol,sampleData:this.historicalData.slice(0,2),priceRange:this.historicalData.length>0?{min:Math.min(...this.historicalData.map(r=>r.low)),max:Math.max(...this.historicalData.map(r=>r.high))}:"No data"}),f.updateData(n,this.historicalData),console.log("\u2705 Candlestick chart updated successfully"),this.isUpdatingChart=!1;return}catch(r){console.error("\u274C Error updating candlestick chart:",r),console.log("\u{1F504} Trying direct chart update as fallback...");try{this.updateChartDirectly(s,this.historicalData),console.log("\u2705 Direct chart update successful"),this.isUpdatingChart=!1;return}catch(c){console.error("\u274C Direct chart update also failed:",c)}}}else console.log("\u{1F504} Chart instance not ready, retrying..."),console.log("\u{1F525} Chart instance found:",!!s),s&&(console.log("\u{1F525} Chart instance type:",typeof s),console.log("\u{1F525} Chart instance methods:",Object.getOwnPropertyNames(s)));e<t-1?(e++,console.log(`\u{1F504} Retrying in ${a*e}ms...`),setTimeout(o,a*e)):(console.warn("\u26A0\uFE0F Max retries reached for candlestick chart update"),this.isUpdatingChart=!1,this.forceWidgetRecreation(i))};o()}updateCandlestickChartWithHistoricalData(){this.updateCandlestickChartWithRetry()}forceWidgetRecreation(t){if(console.log("\u{1F504} Forcing widget recreation at index:",t),!this.dashboardConfig?.widgets||this.historicalData.length===0){console.warn("\u274C Cannot recreate widget - no data or widgets");return}try{let e=this.dashboardConfig.widgets[t];if(!e){console.warn("\u274C Widget not found at index:",t);return}console.log("\u{1F504} Recreating candlestick widget with historical data"),console.log("\u{1F4CA} Sample historical data being used:",this.historicalData.slice(0,3));let a=f.create().setData(this.historicalData).setStockAnalysisConfiguration().setHeader("Stock Historical Price Movement with Volume").setCurrencyFormatter("INR","en-IN").setPredefinedPalette("finance").enableVolume(!0).enableAreaSeries(!0).enableTimeRangeFilters(["1D","5D","1M","3M","6M","YTD","1Y","3Y","5Y","MAX"],"1Y").setTimeRangeChangeCallback(o=>{console.log("\u{1F525} Time range changed:",o.range)}).setEvents((o,i)=>{console.log("\u{1F525} Setting up events for recreated chart"),i&&(console.log("\u{1F525} Chart instance available in events:",i),o.chartInstance=i,console.log("\u{1F525} Updating chart data immediately after instance is set"),f.updateData(o,this.historicalData))}).build();a.position=e.position,a.height=e.height,a.id="candlestick-chart",console.log("\u{1F504} New widget created:",{id:a.id,position:a.position,height:a.height,hasData:this.historicalData.length}),this.dashboardConfig.widgets[t]=a,console.log("\u2705 Widget replaced in dashboard configuration"),this.cdr.detectChanges(),this.waitForChartInitialization(a,t)}catch(e){console.error("Error forcing widget recreation:",e)}}waitForChartInitialization(t,e){console.log("\u{1F504} Waiting for chart initialization...");let a=10,o=0,i=()=>{if(o>=a){console.warn("\u26A0\uFE0F Chart initialization timeout after maximum attempts"),console.log("\u{1F504} Relying on onDataLoad event for chart update");return}if(o++,console.log(`\u{1F504} Chart initialization attempt ${o}/${a}`),t.chartInstance&&typeof t.chartInstance.setOption=="function"){console.log("\u2705 Chart instance found and ready!"),console.log("\u{1F525} Updating chart with historical data"),f.updateData(t,this.historicalData);return}let n=this.dashboardConfig?.widgets?.[e];if(n&&n.chartInstance&&typeof n.chartInstance.setOption=="function"){console.log("\u2705 Chart instance found in dashboard config!"),console.log("\u{1F525} Updating chart with historical data"),f.updateData(n,this.historicalData);return}this.cdr.detectChanges(),setTimeout(i,300)};setTimeout(i,200)}tryFindAndAttachChartInstance(t,e){console.log("\u{1F504} Trying to find and attach chart instance to widget");let a=10,o=0,i=()=>{if(o>=a){console.warn("\u26A0\uFE0F Could not find chart instance after maximum attempts");return}o++,console.log("\u{1F504} Attempt",o,"to find chart instance");let n=this.findChartInstanceInDOM(t);if(n){console.log("\u2705 Chart instance found and attached to widget"),t.chartInstance=n,f.updateData(t,this.historicalData);return}let s=document.querySelector(`[data-widget-id="${t.id}"]`);if(s){console.log("\u{1F504} Found widget DOM element, checking for chart instance");let r=s.__echarts_instance__;if(r){console.log("\u2705 Chart instance found on widget DOM element"),t.chartInstance=r,f.updateData(t,this.historicalData);return}}this.cdr.detectChanges(),setTimeout(i,200)};i()}updateChartDataDirectly(t){console.log("\u{1F504} Updating chart data directly by modifying widget configuration");try{let e=this.historicalData.map(i=>[Number(i.open)||0,Number(i.close)||0,Number(i.low)||0,Number(i.high)||0]),a=this.historicalData.map(i=>[i.date||"",Number(i.volume)||0]),o=this.historicalData.map(i=>i.date||"");if(console.log("\u{1F504} Transformed data:",{candlestickData:e.length,volumeData:a.length,xAxisLabels:o.length}),t.config&&t.config.options){let i=t.config.options;if(i.series&&i.series.length>0){i.series[0]&&(i.series[0].data=e),i.series[1]&&i.series[1].name==="Volume"&&(i.series[1].data=a);let n=i.series.findIndex(s=>s.name==="Close Price Area");if(n>=0){let s=e.map(r=>r[1]);i.series[n].data=s}}i.xAxis&&Array.isArray(i.xAxis)&&(i.xAxis[0].data=o,i.xAxis[1]&&(i.xAxis[1].data=o)),console.log("\u2705 Widget options updated with new data"),this.cdr.detectChanges(),setTimeout(()=>{this.tryUpdateChartInstanceAfterDataChange(t)},200)}else console.warn("\u26A0\uFE0F Widget config or options not found")}catch(e){console.error("Error updating chart data directly:",e)}}tryUpdateChartInstanceAfterDataChange(t){console.log("\u{1F504} Trying to update chart instance after data change");let e=this.findChartInstanceInDOM(t);e?(console.log("\u2705 Chart instance found after data change, updating"),t.chartInstance=e,f.updateData(t,this.historicalData)):(console.log("\u{1F504} Chart instance still not found, trying to trigger chart initialization"),t.data=this.historicalData,this.cdr.detectChanges(),setTimeout(()=>{let a=this.findChartInstanceInDOM(t);a?(console.log("\u2705 Chart instance found on second attempt"),t.chartInstance=a,f.updateData(t,this.historicalData)):console.warn("\u26A0\uFE0F Chart instance still not found after data change")},500))}recreateCandlestickChartWithData(){if(!this.dashboardConfig?.widgets||this.historicalData.length===0){console.warn("\u274C Cannot recreate chart - no data or widgets");return}if(this.isRecreatingChart){console.log("\u{1F504} Chart recreation already in progress, skipping...");return}this.isRecreatingChart=!0,console.log("\u{1F504} Recreating candlestick chart with",this.historicalData.length,"records"),console.log("\u{1F4CA} Sample historical data being used:",this.historicalData.slice(0,3));let t=this.dashboardConfig.widgets.findIndex(o=>o.config?.header?.title==="Stock Historical Price Movement with Volume");if(t===-1){console.warn("\u274C Candlestick widget not found");return}let e=f.create().setData(this.historicalData).transformData({dateField:"date",openField:"open",closeField:"close",lowField:"low",highField:"high",volumeField:"volume",sortBy:"date",sortOrder:"asc"}).setHeader("Stock Historical Price Movement with Volume").setId("candlestick-chart").setStockAnalysisConfiguration().setCurrencyFormatter("INR","en-IN").setPredefinedPalette("finance").enableAreaSeries(!0,.3).enableVolume(!0).enableLegend(!1).enableDataZoom(!0).enableTimeRangeFilters(["1D","5D","1M","3M","6M","YTD","1Y","3Y","5Y","MAX"],this.selectedTimeRange).setTimeRangeChangeCallback(o=>{this.handleTimeRangeChange(o)}).build();e.position={x:0,y:3,cols:8,rows:12};let a=this.dashboardConfig.widgets[t];a.chartInstance&&(console.log("\u{1F504} Disposing old chart instance"),a.chartInstance.dispose(),a.chartInstance=null),this.dashboardConfig.widgets[t]=e,console.log("\u2705 Candlestick chart recreated successfully"),this.cdr.detectChanges(),setTimeout(()=>{console.log("\u{1F504} Forcing chart reinitialization..."),this.cdr.detectChanges(),this.waitForChartInstanceAndUpdate(t,0)},100)}waitForChartInstanceAndUpdate(t,e){if(e>=30){console.warn("\u26A0\uFE0F Chart instance not available after maximum attempts, giving up"),this.isRecreatingChart=!1;return}let i=this.dashboardConfig.widgets[t];if(i&&i.chartInstance)console.log("\u2705 Chart instance found after",e,"attempts, updating data"),console.log("\u{1F525} Chart instance type:",typeof i.chartInstance),console.log("\u{1F525} Chart instance methods:",Object.getOwnPropertyNames(i.chartInstance)),this.historicalData.length>0&&(console.log("\u{1F504} Updating chart with historical data after recreation"),f.updateData(i,this.historicalData)),this.isRecreatingChart=!1;else{let n=this.findChartInstanceInDOM(i);if(n){console.log("\u2705 Chart instance found in DOM, attaching to widget"),i.chartInstance=n,this.historicalData.length>0&&(console.log("\u{1F504} Updating chart with historical data after DOM discovery"),f.updateData(i,this.historicalData)),this.isRecreatingChart=!1;return}console.log("\u{1F504} Chart instance not ready, attempt",e+1,"of",30),e%5===0&&(console.log("\u{1F504} Forcing change detection to trigger chart initialization"),this.cdr.detectChanges()),setTimeout(()=>{this.waitForChartInstanceAndUpdate(t,e+1)},100)}}findChartInstanceInDOM(t){try{let e=["[data-echarts-instance]",".echarts",'div[style*="width"]',"canvas",'[id*="chart"]','[class*="chart"]',"[data-widget-id]","ngx-echarts",'div[style*="height"]'];for(let o of e){let i=document.querySelectorAll(o);console.log("\u{1F50D} Found",i.length,"elements with selector:",o);for(let n=0;n<i.length;n++){let s=i[n],r=s.__echarts_instance__;if(r&&r.getOption)return console.log("\u{1F50D} Found chart instance in DOM with selector:",o,r),r;let c=s.parentElement;for(;c&&c!==document.body;){let h=c.__echarts_instance__;if(h&&h.getOption)return console.log("\u{1F50D} Found chart instance in parent element:",h),h;c=c.parentElement}}}if(t&&t.id){console.log("\u{1F50D} Looking for widget with ID:",t.id);let o=document.querySelector(`[data-widget-id="${t.id}"]`);if(o){console.log("\u{1F50D} Found widget element for ID:",t.id);let i=o.__echarts_instance__;if(i&&i.getOption)return console.log("\u{1F50D} Found chart instance on widget element:",i),i;let n=o.querySelectorAll("*");for(let s=0;s<n.length;s++){let c=n[s].__echarts_instance__;if(c&&c.getOption)return console.log("\u{1F50D} Found chart instance in widget child element:",c),c}}}let a=document.querySelectorAll("*");console.log("\u{1F50D} Checking all",a.length,"elements for chart instances");for(let o=0;o<Math.min(a.length,100);o++){let i=a[o],n=i.__echarts_instance__;if(n&&n.getOption)return console.log("\u{1F50D} Found chart instance in element:",i.tagName,n),n}return null}catch(e){return console.error("Error finding chart instance in DOM:",e),null}}findChartInstanceViaNgxEcharts(t){try{let e=document.querySelectorAll("ngx-echarts");console.log("\u{1F50D} Found",e.length,"ngx-echarts elements");for(let o=0;o<e.length;o++){let i=e[o],n=i.__echarts_instance__;if(n&&n.getOption)return console.log("\u{1F50D} Found chart instance on ngx-echarts element:",n),n;let s=i.querySelectorAll("*");for(let r=0;r<s.length;r++){let h=s[r].__echarts_instance__;if(h&&h.getOption)return console.log("\u{1F50D} Found chart instance in ngx-echarts child element:",h),h}}let a=document.querySelectorAll("[echarts]");console.log("\u{1F50D} Found",a.length,"elements with echarts directive");for(let o=0;o<a.length;o++){let n=a[o].__echarts_instance__;if(n&&n.getOption)return console.log("\u{1F50D} Found chart instance on echarts directive element:",n),n}return null}catch(e){return console.error("Error finding chart instance via ngx-echarts:",e),null}}findAllChartInstances(){try{console.log("\u{1F50D} Searching all elements for chart instances...");let t=document.querySelectorAll("*");console.log("\u{1F50D} Total elements to check:",t.length);let e=Math.min(t.length,200);for(let a=0;a<e;a++){let o=t[a],i=o.__echarts_instance__;if(i&&i.getOption&&i.setOption)return console.log("\u{1F50D} Found chart instance on element:",o.tagName,o.className,i),i;let n=Object.getOwnPropertyNames(o);for(let s of n)if(s.includes("echarts")||s.includes("chart")){let r=o[s];if(r&&typeof r=="object"&&r.getOption&&r.setOption)return console.log("\u{1F50D} Found chart instance in property:",s,r),r}}return console.log("\u{1F50D} No chart instances found in first",e,"elements"),null}catch(t){return console.error("Error finding all chart instances:",t),null}}simpleChartUpdate(){if(!this.historicalData||this.historicalData.length===0){console.log("\u{1F525} No historical data for chart update");return}console.log("\u{1F525} Simple chart update with",this.historicalData.length,"records"),console.log("\u{1F4CA} Sample data:",this.historicalData.slice(0,2));let t=this.dashboardConfig?.widgets?.find(a=>a.config?.header?.title==="Stock Historical Price Movement with Volume");if(!t){console.log("\u{1F525} Candlestick widget not found");return}let e=t.chartInstance;if(e||(e=this.findChartInstanceInDOM(t),e&&(t.chartInstance=e)),e&&typeof e.setOption=="function")try{let a=this.historicalData.map(s=>[Number(s.open)||0,Number(s.close)||0,Number(s.low)||0,Number(s.high)||0]),o=this.historicalData.map(s=>[s.date||"",Number(s.volume)||0]),i=this.historicalData.map(s=>s.date||""),n={series:[{name:"Candlestick",type:"candlestick",data:a,itemStyle:{color:"#00da3c",color0:"#ec0000",borderColor:"#00da3c",borderColor0:"#ec0000"}},{name:"Volume",type:"bar",data:o,yAxisIndex:1,itemStyle:{color:function(s){let r=s.dataIndex,c=n.series[0].data;return c[r]?c[r][1]>=c[r][0]?"#00da3c":"#ec0000":"#00da3c"}}}],xAxis:[{type:"category",data:i,boundaryGap:!1,axisLine:{onZero:!1},splitLine:{show:!1}},{type:"category",data:i,boundaryGap:!1,axisLine:{onZero:!1},splitLine:{show:!1}}],yAxis:[{scale:!0,splitArea:{show:!0}},{scale:!0,splitArea:{show:!0}}],grid:[{left:"10%",right:"8%",height:"50%"},{left:"10%",right:"8%",top:"63%",height:"16%"}],tooltip:{trigger:"axis",axisPointer:{type:"cross"}}};console.log("\u{1F525} Setting chart options with",a.length,"candlesticks"),e.setOption(n,!0),console.log("\u2705 Simple chart update successful")}catch(a){console.error("\u274C Simple chart update failed:",a)}else console.log("\u{1F525} Chart instance not available for simple update")}debugChartState(){console.log("\u{1F50D} === CHART STATE DEBUG ==="),console.log("\u{1F50D} Current selected stock:",this.currentSelectedStockData?.symbol),console.log("\u{1F50D} Historical data length:",this.historicalData.length),console.log("\u{1F50D} Historical data sample:",this.historicalData.slice(0,2));let t=this.dashboardConfig?.widgets?.find(e=>e.config?.header?.title==="Stock Historical Price Movement with Volume");if(t){if(console.log("\u{1F50D} Widget found:",!!t),console.log("\u{1F50D} Widget chart instance:",!!t.chartInstance),console.log("\u{1F50D} Widget data:",t.data),t.chartInstance)try{let e=t.chartInstance.getOption();console.log("\u{1F50D} Current chart options:",e),console.log("\u{1F50D} Chart series data length:",e?.series?.[0]?.data?.length||0),console.log("\u{1F50D} Chart series sample:",e?.series?.[0]?.data?.slice(0,2))}catch(e){console.log("\u{1F50D} Error getting chart options:",e)}}else console.log("\u{1F50D} Candlestick widget not found");console.log("\u{1F50D} === END CHART STATE DEBUG ===")}updateChartDirectlyIfPossible(){if(!this.historicalData||this.historicalData.length===0){console.log("\u{1F525} No historical data available for direct update");return}console.log("\u{1F525} Attempting direct chart update with",this.historicalData.length,"records"),console.log("\u{1F4CA} Sample data:",this.historicalData.slice(0,2));let t=this.dashboardConfig?.widgets?.find(a=>a.config?.header?.title==="Stock Historical Price Movement with Volume");if(!t){console.log("\u{1F525} Candlestick widget not found for direct update");return}let e=t.chartInstance;if(e||(e=this.findChartInstanceInDOM(t),e&&(t.chartInstance=e)),e&&typeof e.setOption=="function")try{this.updateChartDirectly(e,this.historicalData),console.log("\u2705 Direct chart update successful")}catch(a){console.error("\u274C Direct chart update failed:",a)}else console.log("\u{1F525} Chart instance not available for direct update")}updateChartDirectly(t,e){if(!t||!e||e.length===0){console.warn("\u26A0\uFE0F Cannot update chart directly - no instance or data");return}console.log("\u{1F504} Updating chart directly with",e.length,"records"),console.log("\u{1F4CA} Sample data:",e.slice(0,2));try{let a=e.map(s=>[Number(s.open)||0,Number(s.close)||0,Number(s.low)||0,Number(s.high)||0]),o=e.map(s=>[s.date||"",Number(s.volume)||0]),i=e.map(s=>s.date||""),n={series:[{type:"candlestick",data:a,name:"Candlestick"},{type:"bar",data:o,name:"Volume",yAxisIndex:1}],xAxis:[{type:"category",data:i},{type:"category",data:i}],yAxis:[{scale:!0,splitArea:{show:!0}},{scale:!0,splitArea:{show:!0}}],grid:[{left:"10%",right:"8%",height:"50%"},{left:"10%",right:"8%",top:"63%",height:"16%"}]};console.log("\u{1F504} Setting chart options:",n),t.setOption(n,!0),console.log("\u2705 Chart updated directly with new options")}catch(a){throw console.error("\u274C Error updating chart directly:",a),a}}updateCandlestickChartWithFilteredData(){if(!this.dashboardConfig?.widgets||!this.filteredDashboardData)return;let t=this.dashboardConfig.widgets.find(e=>e.config?.header?.title==="Stock Historical Price Movement with Volume");if(t){let e=this.filteredDashboardData.map(a=>({date:a.lastUpdateTime?new Date(a.lastUpdateTime).toISOString().split("T")[0]:a.symbol||"Unknown",open:a.openPrice||0,close:a.lastPrice||0,low:a.dayLow||0,high:a.dayHigh||0,volume:a.totalTradedVolume||0,symbol:a.symbol||"Unknown"}));console.log("Created transformed data:",e.length,"items"),console.log("Sample transformed data:",e.slice(0,3)),f.updateData(t,e),setTimeout(()=>{t.chartInstance&&typeof t.chartInstance.resize=="function"&&t.chartInstance.resize()},100)}}addLineSeriesToCandlestickChart(){if(!this.dashboardConfig?.widgets)return;let t=this.dashboardConfig.widgets.find(e=>e.config?.header?.title==="Stock Historical Price Movement with Volume");if(t&&t.chartInstance){let e=t.chartInstance.getOption(),o=(e?.series?.[0]?.data||[]).map(s=>s[1]),i=[...e?.series||[]];i.push({name:"Close Price Line",type:"line",data:o,smooth:!1,symbol:"circle",symbolSize:4,lineStyle:{width:2,color:"#ff6b6b"},itemStyle:{color:"#ff6b6b"},z:2,yAxisIndex:0,xAxisIndex:0});let n=V(C({},e),{series:i});t.chartInstance.setOption(n,!0),console.log("Added line series to candlestick chart")}}updateTreemapWithFilteredData(){if(!this.dashboardConfig?.widgets||!this.filteredDashboardData)return;let t=this.dashboardConfig.widgets.find(e=>e.config?.header?.title==="Portfolio Distribution");if(t){let e=this.createStockTicksTreemapData(this.filteredDashboardData);this.updateEchartWidget(t,e)}}updateStockListWithFilteredData(){if(!this.dashboardConfig?.widgets)return;let t=this.dashboardConfig.widgets.filter(e=>e.config?.component==="stock-list-table");t.forEach(e=>{let o=[...this.filteredDashboardData||[]];e.data?(e.data.stocks=o,e.data.isLoadingStocks=!1):e.data={stocks:o,isLoadingStocks:!1}}),setTimeout(()=>{this.cdr.detectChanges(),t.forEach(e=>{e.data&&typeof e.data.refresh=="function"&&e.data.refresh()}),this.cdr.markForCheck()},50)}initializeWebSocket(){return w(this,null,function*(){try{yield this.webSocketService.connect()}catch{}})}subscribeToStockWebSocket(t){return w(this,null,function*(){if(this.isSubscribing)return;let e=t.replace(/\s+/g,"-").toLowerCase(),a=`/topic/nse-stocks/${e}`;if(!this.subscribedTopics.has(a)){this.stockWebSocketSubscription&&(this.stockWebSocketSubscription.unsubscribe(),this.stockWebSocketSubscription=null),this.currentSubscribedStock=t,this.isSubscribing=!0;try{if(this.webSocketService.connected||(yield new Promise((o,i)=>{let n=setTimeout(()=>{i(new Error("WebSocket connection timeout"))},1e4),s=this.webSocketService.connectionState.pipe(B(r=>r==="CONNECTED")).subscribe({next:()=>{clearTimeout(n),s.unsubscribe(),o()},error:r=>{clearTimeout(n),s.unsubscribe(),i(r)}})})),this.webSocketService.connected)try{console.log(`Stock WebSocket subscription not implemented for ${e}`),this.subscribedTopics.add(a)}catch(o){console.warn(`Stock subscription failed for ${e}, continuing without real-time data:`,o)}else console.warn("WebSocket still not connected - skipping real-time subscription for",e)}catch(o){console.warn(`WebSocket subscription failed for ${e} - continuing without real-time data:`,o.message||o),this.cdr.detectChanges()}finally{this.isSubscribing=!1}}})}subscribeToAllStocksAsFallback(t){try{console.log(`All stocks WebSocket subscription not implemented for ${t}`)}catch(e){console.error("Failed to subscribe to all stocks as fallback:",e)}}handleWebSocketData(t,e){try{if(t&&(t.stockName||t.stockSymbol)){if(this.currentSelectedStockData=t,!this.dashboardConfig?.widgets||this.dashboardConfig.widgets.length===0){console.warn("Dashboard not ready yet, deferring first tile update"),setTimeout(()=>{this.updateFirstTileWithRealTimeData(t)},1e3);return}if(this.chartUpdateTimer)return;this.chartUpdateTimer=setTimeout(()=>{try{this.updateFirstTileWithRealTimeData(t),this.recreateMetricTiles(),this.cdr.detectChanges()}finally{this.chartUpdateTimer=null}},250)}else console.warn("WebSocket received data but no valid stock data found:",t)}catch(a){console.error("Error processing received stock data:",a)}}attemptWebSocketReconnection(){return w(this,null,function*(){if(this.currentSubscribedStock)try{yield this.webSocketService.connect(),this.webSocketService.connected&&this.subscribeToStockWebSocket(this.currentSubscribedStock)}catch(t){console.warn("WebSocket reconnection failed:",t),setTimeout(()=>{this.attemptWebSocketReconnection()},5e3)}})}updateFirstTileWithRealTimeData(t){if(!this.dashboardConfig?.widgets||this.dashboardConfig.widgets.length===0){setTimeout(()=>{this.updateFirstTileWithRealTimeData(t)},500);return}let e=this.dashboardConfig.widgets.find(a=>a.position?.x===0&&a.position?.y===0&&(a.config?.component==="stock-tile"||a.config?.component==="tile"));if(e||(e=this.dashboardConfig.widgets.find(a=>a.config?.component==="stock-tile"||a.config?.component==="tile")),e||(e=this.dashboardConfig.widgets.find(a=>a.config?.header?.title?.toLowerCase().includes("nifty")||a.config?.header?.title?.toLowerCase().includes("index")||a.config?.header?.title?.toLowerCase().includes("price"))),!e){console.warn("No suitable tile found for real-time updates");return}if(!t){console.warn("No real-time stock data available for first tile update");return}try{let a=t.symbol||"Stock",o=t.lastPrice||0,i=t.percentChange||0,n=t.dayHigh||0,s=t.dayLow||0,r=t.priceChange||0;if(e.config?.component==="stock-tile"){let c={value:o.toFixed(2),change:r.toFixed(2),changeType:i>=0?"positive":"negative",description:a,icon:"fas fa-chart-line",color:i>=0?"#16a34a":"#dc2626",backgroundColor:i>=0?"#bbf7d0":"#fecaca",highValue:n.toFixed(2),lowValue:s.toFixed(2),currency:"\u20B9"};v.updateData(e,c),e.data=C(C({},e.data),c)}else{let c={value:o.toFixed(2),change:r.toFixed(2),changeType:i>=0?"positive":"negative",description:a,icon:"fas fa-chart-line",color:i>=0?"#16a34a":"#dc2626",backgroundColor:i>=0?"#bbf7d0":"#fecaca",title:a,subtitle:`Change: ${i.toFixed(2)}%`};b.updateData(e,c),e.data=C(C({},e.data),c)}this.cdr.markForCheck(),this.cdr.detectChanges()}catch(a){console.error("Error updating first tile with real-time data:",a)}}forceDashboardRefresh(){this.updateMetricTilesWithFilters([]),this.cdr.detectChanges()}forceTileRefresh(){console.log("\u{1F504} Manual tile refresh triggered from dashboard header"),this.updateMetricTilesWithFilters([]),this.cdr.markForCheck(),this.cdr.detectChanges(),setTimeout(()=>{this.cdr.detectChanges(),console.log("\u{1F504} Manual tile refresh completed")},100)}recreateMetricTiles(){let t=this.dashboardConfig.widgets.filter(a=>a.config?.component==="tile"||a.config?.component==="stock-tile"),e=this.createMetricTiles(this.filteredDashboardData||this.dashboardData);t.forEach((a,o)=>{if(o<e.length){let i=e[o];if(a.config?.options?.updateOnDataChange!==!1){let r=i.config?.options;if(a.config?.component==="stock-tile"){let c={value:r?.value||"",change:r?.change||"",changeType:r?.changeType||"neutral",description:r?.description||"",icon:r?.icon||"",color:r?.color||"",backgroundColor:r?.backgroundColor||"",highValue:r?.highValue||"",lowValue:r?.lowValue||"",currency:r?.currency||"\u20B9"};v.updateData(a,c)}else{let c={value:r?.value||"",change:r?.change||"",changeType:r?.changeType||"neutral",description:r?.description||"",icon:r?.icon||"",color:r?.color||"",backgroundColor:r?.backgroundColor||"",title:r?.title||"",subtitle:r?.subtitle||r?.customData?.subtitle||""};b.updateData(a,c)}}}})}monitorWebSocketConnectionState(){this.webSocketConnectionStateSubscription=this.webSocketService.connectionState.subscribe({next:t=>{if(this.isWebSocketConnected=t==="CONNECTED",this.isWebSocketConnected){if(this.currentSubscribedStock&&!this.isSubscribing){let a=`/topic/nse-stocks/${this.currentSubscribedStock.replace(/\s+/g,"-").toLowerCase()}`;this.subscribedTopics.has(a)||this.subscribeToStockWebSocket(this.currentSubscribedStock)}}else(t==="DISCONNECTED"||t==="ERROR")&&(this.subscribedTopics.clear(),this.currentSubscribedStock&&this.attemptWebSocketReconnection())},error:t=>{console.error("WebSocket connection state monitoring error:",t),this.isWebSocketConnected=!1,this.subscribedTopics.clear(),this.currentSubscribedStock&&this.attemptWebSocketReconnection()}})}loadStockDataForRoute(t){console.log("\u{1F525} loadStockDataForRoute called for:",t),this.dashboardTitle=`${t} - Stock Insights Dashboard`,this.loadHistoricalData(t),this.loadStockTicksData(t),this.currentSelectedStockData={symbol:t,lastPrice:0,priceChange:0,percentChange:0}}switchToStock(t){if(!t||t.trim()===""){console.warn("Invalid stock symbol provided");return}if(console.log(`\u{1F525} Switching to stock: ${t}`),console.log("\u{1F525} Dashboard config exists:",!!this.dashboardConfig),console.log("\u{1F525} Dashboard widgets count:",this.dashboardConfig?.widgets?.length||0),this.dashboardTitle=`${t} - Stock Insights Dashboard`,this.dashboardData=[],this.filteredDashboardData=[],this.historicalData=[],this.appliedFilters=[],this.currentSelectedStockData={symbol:t,lastPrice:0,priceChange:0,percentChange:0},this.chartUpdateTimer&&(clearTimeout(this.chartUpdateTimer),this.chartUpdateTimer=null),this.dashboardConfig?.widgets){let e=this.dashboardConfig.widgets.findIndex(a=>a.config?.header?.title==="Stock Historical Price Movement with Volume");if(e>=0){console.log("\u{1F525} Force recreating chart widget for stock switch");let a=this.dashboardConfig.widgets[e];if(a.chartInstance)try{a.chartInstance.dispose()}catch(i){console.warn("\u26A0\uFE0F Error disposing chart instance:",i)}let o=f.create().setData([]).setHeader("Stock Historical Price Movement with Volume").setId("candlestick-chart").setEvents((i,n)=>{console.log("\u{1F525} New chart events setup - chart instance:",!!n),n&&(i.chartInstance=n,console.log("\u{1F525} New chart instance attached to widget"))}).build();o.position=a.position,o.height=a.height,this.dashboardConfig.widgets[e]=o,console.log("\u2705 Chart widget completely recreated")}}this.loadStockTicksData(t),this.loadHistoricalData(t),this.forceDashboardRefresh(),this.cdr.detectChanges(),setTimeout(()=>{console.log("\u{1F525} Scheduled simple chart update after stock switch"),this.simpleChartUpdate()},500)}forceChartRecreation(){if(!this.dashboardConfig?.widgets||this.historicalData.length===0){console.warn("\u274C Cannot force chart recreation - no data or widgets");return}console.log("\u{1F525} Force chart recreation called"),console.log("\u{1F4CA} Historical data length:",this.historicalData.length),console.log("\u{1F4CA} Current selected stock:",this.currentSelectedStockData?.symbol);let t=this.dashboardConfig.widgets.findIndex(o=>o.config?.header?.title==="Stock Historical Price Movement with Volume");if(t===-1){console.warn("\u274C Candlestick widget not found for recreation");return}console.log("\u{1F525} Recreating candlestick widget at index:",t);let e=f.create().setData(this.historicalData).setHeader("Stock Historical Price Movement with Volume").setId("candlestick-chart").setEvents((o,i)=>{if(console.log("\u{1F525} Chart events setup for recreated chart"),i&&(o.chartInstance=i,console.log("\u{1F525} Chart instance attached to recreated widget"),this.historicalData.length>0)){console.log("\u{1F525} Immediate update of recreated chart");try{f.updateData(o,this.historicalData),console.log("\u2705 Recreated chart updated successfully")}catch(n){console.error("\u274C Error updating recreated chart:",n)}}}).build(),a=this.dashboardConfig.widgets[t];e.position=a.position,e.height=a.height,this.dashboardConfig.widgets[t]=e,console.log("\u2705 Chart widget recreated successfully"),this.cdr.detectChanges(),setTimeout(()=>{console.log("\u{1F525} Final update of recreated chart"),this.updateCandlestickChartWithRetry()},500)}onHeaderSearchStock(t){if(!t)return;let e=this.allStocks.find(o=>o.symbol?.toUpperCase()===t.toUpperCase()),a=e?e.symbol:t.toUpperCase();this.stockService.getStockBySymbol(a).subscribe({next:()=>{this.switchToStock(a)},error:()=>{this.switchToStock(a)}})}getMaxAvailableDate(){let t=new Date("1996-01-01");if(!this.currentSelectedStockData?.listingDate)return t;try{let e=new Date(this.currentSelectedStockData.listingDate);return isNaN(e.getTime())?t:e>t?e:t}catch(e){return console.warn("Error parsing listing date, using fallback:",e),t}}onTimeRangeChange(t){if(console.log("\u{1F525} onTimeRangeChange called with:",t),console.log("\u{1F525} currentSelectedStockData:",this.currentSelectedStockData),console.log("\u{1F525} currentSelectedStockData?.symbol:",this.currentSelectedStockData?.symbol),!this.currentSelectedStockData?.symbol){console.warn("\u{1F525} No current selected stock data, cannot make API call");return}if(console.log(`\u{1F525} Time range changed to: ${t}`),this.selectedTimeRange=t,this.dashboardConfig?.widgets){let s=this.dashboardConfig.widgets.find(r=>r.config?.header?.title==="Stock Historical Price Movement with Volume");s&&f.updateTimeRangeFilters(s,t,this.handleTimeRangeChange.bind(this))}let e=new Date,a=this.getMaxAvailableDate(),o;switch(console.log("\u{1F525} Date calculation debug:"),console.log("\u{1F525} Current endDate:",e.toISOString().split("T")[0]),console.log("\u{1F525} Current year:",e.getFullYear()),console.log("\u{1F525} Current month:",e.getMonth()),console.log("\u{1F525} Current day:",e.getDate()),t){case"1D":o=new Date(e.getTime()-1*24*60*60*1e3);break;case"5D":o=new Date(e.getTime()-5*24*60*60*1e3);break;case"1M":o=new Date(e.getFullYear(),e.getMonth()-1,e.getDate()),console.log("\u{1F525} 1M calculation:"),console.log("\u{1F525} Original month:",e.getMonth()),console.log("\u{1F525} Calculated month:",e.getMonth()-1),console.log("\u{1F525} Calculated startDate:",o.toISOString().split("T")[0]);break;case"3M":o=new Date(e.getFullYear(),e.getMonth()-3,e.getDate()),console.log("\u{1F525} 3M calculation:"),console.log("\u{1F525} Original month:",e.getMonth()),console.log("\u{1F525} Calculated month:",e.getMonth()-3),console.log("\u{1F525} Calculated startDate:",o.toISOString().split("T")[0]);break;case"6M":o=new Date(e.getFullYear(),e.getMonth()-6,e.getDate()),console.log("\u{1F525} 6M calculation:"),console.log("\u{1F525} Original month:",e.getMonth()),console.log("\u{1F525} Calculated month:",e.getMonth()-6),console.log("\u{1F525} Calculated startDate:",o.toISOString().split("T")[0]);break;case"YTD":o=new Date(e.getFullYear(),0,1);break;case"1Y":o=new Date(e.getFullYear()-1,e.getMonth(),e.getDate());break;case"3Y":o=new Date(e.getFullYear()-3,e.getMonth(),e.getDate());break;case"5Y":o=new Date(e.getFullYear()-5,e.getMonth(),e.getDate());break;case"MAX":o=new Date(a);break;default:o=new Date(e.getFullYear()-1,e.getMonth(),e.getDate())}o<a&&(o=a,console.log(`Adjusted start date to maximum available date: ${a.toISOString().split("T")[0]}`));let i=o.toISOString().split("T")[0],n=e.toISOString().split("T")[0];console.log(`Loading historical data for ${this.currentSelectedStockData.symbol} from ${i} to ${n} (${t})`),console.log(`Maximum available date: ${a.toISOString().split("T")[0]}`),this.stockService.getStockHistory(this.currentSelectedStockData.symbol,i,n).subscribe({next:s=>{console.log("\u{1F4CA} API Response received:",s?.length||0,"records"),console.log("\u{1F4CA} Sample API data:",s?.slice(0,3)),this.historicalData=s||[],console.log("\u{1F4CA} Updated historicalData length:",this.historicalData.length),this.updateCandlestickChartWithRetry(),this.cdr.detectChanges()},error:s=>{console.warn("Failed to load historical data for time range",t,":",s),this.historicalData=[],this.updateCandlestickChartWithRetry(),this.cdr.detectChanges()}})}handleTimeRangeChange(t){console.log("\u{1F525} === TIME RANGE FILTER EVENT RECEIVED ==="),console.log("\u{1F525} Event type:",t.type),console.log("\u{1F525} Selected range:",t.range),console.log("\u{1F525} Widget ID:",t.widgetId),console.log("\u{1F525} Current selected stock:",this.currentSelectedStockData?.symbol),console.log("\u{1F525} ========================================"),t.type==="timeRangeChange"?(console.log("\u{1F525} Calling onTimeRangeChange with range:",t.range),this.onTimeRangeChange(t.range)):console.warn("\u{1F525} Unknown event type:",t.type)}get onTimeRangeChangeGlobal(){return this.onTimeRangeChange.bind(this)}};d.\u0275fac=function(e){return new(e||d)(S(j),S(It),S(Pt),S(Ut),S(Et),S(Rt),S(_t),S(Q),S(Z))},d.\u0275cmp=z({type:d,selectors:[["app-stock-insights"]],features:[$],decls:6,vars:11,consts:[["dashboardContainer",""],["dashboardContainerComponent",""],[3,"onExportToExcel","onToggleHighlighting","onSetHighlightingPreset","onSearchStock","onForceTileRefresh","title","isHighlightingEnabled","isExportingExcel","enableStockSearch","stockSearchList"],[1,"dashboard-container"],[3,"filterValuesChanged","onDataLoad","widgets","options","dashboardId"]],template:function(e,a){if(e&1){let o=Y();A(0,"vis-dashboard-header",2),U("onExportToExcel",function(){return D(o),y(a.exportDashboardToExcel())})("onToggleHighlighting",function(){return D(o),y(a.toggleHighlightingMode())})("onSetHighlightingPreset",function(n){return D(o),y(a.setHighlightingPreset(n))})("onSearchStock",function(n){return D(o),y(a.onHeaderSearchStock(n))})("onForceTileRefresh",function(){return D(o),y(a.forceTileRefresh())}),_(),A(1,"p-scrollPanel")(2,"div",3,0)(4,"vis-dashboard-container",4,1),U("filterValuesChanged",function(n){return D(o),y(a.onFilterValuesChanged(n))})("onDataLoad",function(n){return D(o),y(a.onDataLoad(n))}),_()()()}e&2&&(P("title",a.dashboardTitle)("isHighlightingEnabled",a.isHighlightingEnabled)("isExportingExcel",a.isExportingExcel)("enableStockSearch",!0)("stockSearchList",a.allStocks),N(),J(G(10,Jt)),N(3),P("widgets",a.dashboardConfig.widgets)("options",a.dashboardConfig.config)("dashboardId",a.dashboardConfig.dashboardId))},dependencies:[q,X,Ht,et,tt,Mt,Ot],styles:[".stock-selector-container[_ngcontent-%COMP%]{background:linear-gradient(135deg,#f8f9fa,#e9ecef);border-bottom:1px solid #dee2e6;padding:1rem;margin-bottom:.5rem}.stock-selector[_ngcontent-%COMP%]{display:flex;align-items:center;gap:1rem;max-width:600px;margin:0 auto}.stock-selector[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]{font-weight:600;color:#495057;font-size:1rem;white-space:nowrap}.stock-dropdown[_ngcontent-%COMP%]{flex:1;padding:.75rem 1rem;border:2px solid #007bff;border-radius:8px;background-color:#fff;font-size:1rem;font-weight:500;color:#495057;cursor:pointer;transition:all .3s ease;box-shadow:0 2px 4px #007bff1a}.stock-dropdown[_ngcontent-%COMP%]:hover{border-color:#0056b3;box-shadow:0 4px 8px #007bff33}.stock-dropdown[_ngcontent-%COMP%]:focus{outline:none;border-color:#0056b3;box-shadow:0 0 0 3px #007bff40}.stock-dropdown[_ngcontent-%COMP%]   option[_ngcontent-%COMP%]{padding:.5rem;font-size:.9rem}@media (max-width: 768px){.stock-selector[_ngcontent-%COMP%]{flex-direction:column;align-items:stretch;gap:.5rem}.stock-selector[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]{text-align:center}.stock-dropdown[_ngcontent-%COMP%]{width:100%}}.dashboard-container[_ngcontent-%COMP%]{display:flex;flex-direction:column;height:80vh;padding:.5rem}vis-dashboard-container[_ngcontent-%COMP%]{flex:1 1 auto;min-height:0}.filter-status[_ngcontent-%COMP%]{margin-bottom:1rem;padding:.75rem 1rem;background:linear-gradient(135deg,#e3f2fd,#bbdefb);border-radius:8px;border:1px solid #90caf9;box-shadow:0 2px 4px #2196f31a;transition:all .3s ease-in-out}.filter-status[_ngcontent-%COMP%]:hover{box-shadow:0 4px 8px #2196f326;transform:translateY(-1px)}.filter-status-content[_ngcontent-%COMP%]{display:flex;align-items:center;justify-content:flex-start}.filter-status-text[_ngcontent-%COMP%]{font-weight:600;color:#1565c0;font-size:.9rem;text-transform:uppercase;letter-spacing:.5px;display:flex;align-items:center}.filter-count[_ngcontent-%COMP%]{display:inline-flex;align-items:center;justify-content:center;min-width:24px;height:24px;padding:0 .5rem;background:linear-gradient(135deg,#1976d2,#1565c0);color:#fff;border-radius:12px;font-size:.75rem;font-weight:700;margin-left:.5rem;box-shadow:0 2px 4px #1976d24d}  .filter-status .p-message{background:transparent!important;border:none!important;padding:0!important;margin:0!important}  .filter-status .p-message .p-message-text{color:#1565c0!important;font-weight:600!important;font-size:.9rem!important;text-transform:uppercase!important;letter-spacing:.5px!important}  .filter-status .p-message .p-message-icon{color:#1976d2!important;font-size:1rem!important}[_nghost-%COMP%]{display:block;height:100%;width:100%}  .gridster-item{box-shadow:0 2px 8px #0000001a;border-radius:4px;background-color:#fff;overflow:visible!important;min-height:200px!important;min-width:200px!important;border:2px solid #007bff!important;padding:10px!important;margin:5px!important}  .widget-header{padding:.5rem 1rem;background-color:#f8f9fa;border-bottom:1px solid #e9ecef}  .widget-content{padding:.5rem;height:calc(100% - 40px);min-height:150px}  .echart-container{width:100%!important;height:100%!important;min-height:300px!important;min-width:300px!important;border:4px solid #dc3545!important;background-color:#dc35451a!important;display:flex!important;justify-content:center!important;align-items:center!important;position:relative!important;z-index:10!important;overflow:visible!important}  .echart-widget-container{width:100%!important;height:100%!important;min-height:300px!important;min-width:300px!important;display:flex!important;flex-direction:column!important;justify-content:center!important;align-items:center!important;border:4px solid #ffc107!important;background-color:#ffc1071a!important;padding:10px!important;box-sizing:border-box!important;overflow:visible!important;z-index:5!important;position:relative!important}  .gridster-item{min-height:300px!important;min-width:300px!important;height:auto!important;overflow:visible!important;z-index:1!important}  .gridster-item:has([data-widget-id*=candlestick]){position:relative!important;overflow:visible!important}  .gridster-item:has([data-widget-id*=candlestick]) .ec-graphic{z-index:1000!important;pointer-events:auto!important;position:relative!important}  .gridster-item:has([data-widget-id*=candlestick]) .ec-graphic[data-range]{z-index:1001!important;pointer-events:auto!important}  .gridster-item:has([data-widget-id*=candlestick]) .echart-container{position:relative!important;z-index:1!important}  .gridster-item:has([data-widget-id*=candlestick]) canvas{z-index:1!important}  .candlestick-time-range-filters{position:absolute!important;top:10px!important;left:10px!important;z-index:1000!important;background:#fffffffa!important;-webkit-backdrop-filter:blur(10px)!important;backdrop-filter:blur(10px)!important;border-radius:12px!important;padding:12px!important;box-shadow:0 4px 16px #0000001a!important;display:flex!important;gap:6px!important;flex-wrap:wrap!important;border:1px solid rgba(0,0,0,.08)!important}  .candlestick-time-range-filters .time-range-btn{background:#f8f9fa!important;border:1px solid #dee2e6!important;border-radius:4px!important;padding:4px 8px!important;font-size:12px!important;font-weight:500!important;color:#495057!important;cursor:pointer!important;transition:all .2s ease!important;min-width:32px!important;text-align:center!important;font-family:-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,sans-serif!important}  .candlestick-time-range-filters .time-range-btn:hover{background:#e9ecef!important;border-color:#adb5bd!important;transform:translateY(-1px)!important}  .candlestick-time-range-filters .time-range-btn.active{background:#007bff!important;border-color:#007bff!important;color:#fff!important;box-shadow:0 2px 4px #007bff4d!important}  .candlestick-time-range-filters .time-range-btn:active{transform:translateY(0)!important}  .echart-container canvas{cursor:default!important}  .gridster-item .echart-container{pointer-events:auto!important}  .echart-container .ec-graphic{pointer-events:auto!important;cursor:pointer!important}  .echart-container .ec-graphic[data-range]{transition:all .2s ease!important}  .echart-container .ec-graphic[data-range]:hover{transform:scale(1.05)!important}  .gridster-item:has([data-widget-id*=candlestick]) .echart-container{height:100%!important;min-height:400px!important;min-width:700px!important;width:100%!important;position:relative!important}  .gridster-item:has([data-widget-id*=candlestick]) .echart-container canvas{width:100%!important;height:100%!important}  .gridster-item:has([data-widget-id*=candlestick]) canvas{height:100%!important}  .gridster-item:has([data-widget-id*=candlestick]) .ec-graphic{z-index:1000!important;pointer-events:auto!important;position:absolute!important}  .gridster-item:has([data-widget-id*=candlestick]) .ec-graphic[type=rect]{z-index:1002!important;pointer-events:auto!important;position:absolute!important}  .gridster-item:has([data-widget-id*=candlestick]) .ec-graphic[type=text]{z-index:1003!important;pointer-events:auto!important;position:absolute!important}  .gridster-item:has([data-widget-id*=candlestick]) .ec-graphic[data-range]{transition:all .2s ease!important}  .gridster-item:has([data-widget-id*=candlestick]) .ec-graphic[data-range]:hover{transform:scale(1.05)!important;filter:brightness(1.1)!important}  .gridster-item:has([data-widget-id*=candlestick]) .ec-graphic[type=rect]{z-index:1002!important;pointer-events:auto!important}  .gridster-item:has([data-widget-id*=candlestick]) .ec-graphic[type=text]{z-index:1003!important;pointer-events:auto!important}"],changeDetection:0});let l=d;return l})();export{Oe as StockInsightsComponent};
