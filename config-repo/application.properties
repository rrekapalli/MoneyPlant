# Common properties for all services

# SSL/TLS Configuration
server.ssl.enabled=true
server.ssl.key-store=${SSL_KEYSTORE_PATH:classpath:keystore/moneyplant.p12}
server.ssl.key-store-password=${SSL_KEYSTORE_PASSWORD:changeit}
server.ssl.key-store-type=PKCS12
server.ssl.key-alias=moneyplant
server.ssl.key-password=${SSL_KEY_PASSWORD:changeit}

# Security note: In production, set the environment variables SSL_KEYSTORE_PATH, SSL_KEYSTORE_PASSWORD, and SSL_KEY_PASSWORD
# For local development, generate a self-signed certificate using:
# keytool -genkeypair -alias moneyplant -keyalg RSA -keysize 2048 -storetype PKCS12 -keystore moneyplant.p12 -validity 3650

# API Key Configuration
api.key.enabled=true
api.key=${API_KEY:moneyplant-default-api-key}

# Security note: In production, set the environment variable API_KEY to a secure random value
# You can generate a secure API key using: openssl rand -base64 32

# CORS Configuration
cors.allowed-origins=${CORS_ALLOWED_ORIGINS:https://moneyplant.com,https://api.moneyplant.com,https://admin.moneyplant.com}
cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
cors.allowed-headers=Authorization,Content-Type,X-API-KEY
cors.exposed-headers=
cors.allow-credentials=false
cors.max-age=3600

# Security note: In production, set the environment variable CORS_ALLOWED_ORIGINS to a comma-separated list of allowed origins
# Avoid using wildcard (*) in production environments

# Audit Logging Configuration
audit.logging.enabled=true
logging.level.SECURITY_AUDIT=INFO

# Configure a separate appender for security audit logs
logging.appender.SECURITY_AUDIT.type=RollingFile
logging.appender.SECURITY_AUDIT.name=SECURITY_AUDIT
logging.appender.SECURITY_AUDIT.fileName=logs/security-audit.log
logging.appender.SECURITY_AUDIT.filePattern=logs/security-audit-%d{yyyy-MM-dd}.log
logging.appender.SECURITY_AUDIT.layout.type=PatternLayout
logging.appender.SECURITY_AUDIT.layout.pattern=%m%n
logging.appender.SECURITY_AUDIT.policies.type=Policies
logging.appender.SECURITY_AUDIT.policies.time.type=TimeBasedTriggeringPolicy
logging.appender.SECURITY_AUDIT.policies.time.interval=1
logging.appender.SECURITY_AUDIT.policies.time.modulate=true

# Logging configuration
logging.level.root=INFO
logging.level.com.moneyplant=DEBUG
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n

# Database configuration
spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=password
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.h2.console.enabled=true

# Actuator configuration
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=always

# Health check configuration
management.health.rabbit.enabled=false
management.health.defaults.enabled=true

# Distributed tracing configuration
management.tracing.sampling.probability=0.1
management.zipkin.tracing.endpoint=http://localhost:9411/api/v2/spans
management.tracing.enabled=true
management.metrics.distribution.percentiles-histogram.http.server.requests=true
logging.pattern.level=%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]

# RabbitMQ configuration
spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest
spring.rabbitmq.virtual-host=/
spring.rabbitmq.template.retry.enabled=true
spring.rabbitmq.template.retry.initial-interval=1000ms
spring.rabbitmq.template.retry.max-attempts=3
spring.rabbitmq.template.retry.max-interval=10000ms
spring.rabbitmq.template.retry.multiplier=1.0

# Spring Cloud Stream configuration
spring.cloud.stream.default.contentType=application/json
spring.cloud.stream.bindings.input.destination=moneyplant-events
spring.cloud.stream.bindings.input.group=${spring.application.name}
spring.cloud.stream.bindings.output.destination=moneyplant-events
spring.cloud.stream.rabbit.binder.autoCreateTopics=false
